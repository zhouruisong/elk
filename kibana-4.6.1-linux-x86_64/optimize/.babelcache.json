{
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/index.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar Promise = require('bluebird');\nvar join = require('path').join;\nvar requireAllAndApply = require('./server/lib/require_all_and_apply');\nvar pluginSelfCheck = require('./server/lib/plugin_self_check');\n\nmodule.exports = function (kibana) {\n  return new kibana.Plugin({\n    require: ['elasticsearch'],\n    name: 'marvel',\n\n    uiExports: {\n      app: {\n        title: 'Marvel',\n        description: 'Monitoring for Elasticsearch',\n        main: 'plugins/marvel/marvel',\n        injectVars: function injectVars(server, options) {\n          var config = server.config();\n          return {\n            maxBucketSize: config.get('marvel.max_bucket_size'),\n            minIntervalSeconds: config.get('marvel.min_interval_seconds'),\n            kbnIndex: config.get('kibana.index'),\n            esApiVersion: config.get('elasticsearch.apiVersion'),\n            esShardTimeout: config.get('elasticsearch.shardTimeout'),\n            statsReportUrl: config.get('marvel.stats_report_url'),\n            reportStats: config.get('marvel.report_stats'),\n            marvelIndexPrefix: config.get('marvel.index_prefix')\n          };\n        }\n      }\n    },\n\n    config: function config(Joi) {\n      return Joi.object({\n        enabled: Joi.boolean()['default'](true),\n        index: Joi.string()['default']('.marvel-es-data-1'),\n        index_prefix: Joi.string()['default']('.marvel-es-1-'),\n        missing_intervals: Joi.number()['default'](12),\n        max_bucket_size: Joi.number()['default'](10000),\n        min_interval_seconds: Joi.number()['default'](10),\n        report_stats: Joi.boolean()['default'](true),\n        node_resolver: Joi.string().regex(/^(?:transport_address|name)$/)['default']('transport_address'),\n        stats_report_url: Joi.when('$dev', {\n          is: true,\n          then: Joi.string()['default']('../api/marvel/v1/phone-home'),\n          otherwise: Joi.string()['default']('https://marvel-stats.elasticsearch.com/appdata/marvelOpts')\n        }),\n        agent: Joi.object({\n          interval: Joi.string().regex(/[\\d\\.]+[yMwdhms]/)['default']('10s')\n        })['default']()\n      })['default']();\n    },\n\n    init: function init(server, options) {\n      // Make sure the Marvel index is created and the Kibana version is supported\n      pluginSelfCheck(this, server);\n      // Require all the routes\n      requireAllAndApply(join(__dirname, 'server', 'routes', '**', '*.js'), server);\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDbEMsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQztBQUNoQyxJQUFJLGtCQUFrQixHQUFHLE9BQU8sQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO0FBQ3ZFLElBQUksZUFBZSxHQUFHLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDOztBQUVoRSxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsTUFBTSxFQUFFO0FBQ2pDLFNBQU8sSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQ3ZCLFdBQU8sRUFBRSxDQUFDLGVBQWUsQ0FBQztBQUMxQixRQUFJLEVBQUUsUUFBUTs7QUFFZCxhQUFTLEVBQUU7QUFDVCxTQUFHLEVBQUU7QUFDSCxhQUFLLEVBQUUsUUFBUTtBQUNmLG1CQUFXLEVBQUUsOEJBQThCO0FBQzNDLFlBQUksRUFBRSx1QkFBdUI7QUFDN0Isa0JBQVUsRUFBRSxvQkFBVSxNQUFNLEVBQUUsT0FBTyxFQUFFO0FBQ3JDLGNBQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUM3QixpQkFBTztBQUNMLHlCQUFhLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQztBQUNuRCw4QkFBa0IsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLDZCQUE2QixDQUFDO0FBQzdELG9CQUFRLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUM7QUFDcEMsd0JBQVksRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLDBCQUEwQixDQUFDO0FBQ3BELDBCQUFjLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsQ0FBQztBQUN4RCwwQkFBYyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMseUJBQXlCLENBQUM7QUFDckQsdUJBQVcsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDO0FBQzlDLDZCQUFpQixFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUM7V0FDckQsQ0FBQztTQUNIO09BQ0Y7S0FDRjs7QUFFRCxVQUFNLEVBQUUsZ0JBQVUsR0FBRyxFQUFFO0FBQ3JCLGFBQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQztBQUNoQixlQUFPLEVBQUUsR0FBRyxDQUFDLE9BQU8sRUFBRSxXQUFRLENBQUMsSUFBSSxDQUFDO0FBQ3BDLGFBQUssRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLFdBQVEsQ0FBQyxtQkFBbUIsQ0FBQztBQUNoRCxvQkFBWSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsV0FBUSxDQUFDLGVBQWUsQ0FBQztBQUNuRCx5QkFBaUIsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLFdBQVEsQ0FBQyxFQUFFLENBQUM7QUFDM0MsdUJBQWUsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLFdBQVEsQ0FBQyxLQUFLLENBQUM7QUFDNUMsNEJBQW9CLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxXQUFRLENBQUMsRUFBRSxDQUFDO0FBQzlDLG9CQUFZLEVBQUUsR0FBRyxDQUFDLE9BQU8sRUFBRSxXQUFRLENBQUMsSUFBSSxDQUFDO0FBQ3pDLHFCQUFhLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQyxXQUFRLENBQUMsbUJBQW1CLENBQUM7QUFDOUYsd0JBQWdCLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7QUFDakMsWUFBRSxFQUFFLElBQUk7QUFDUixjQUFJLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxXQUFRLENBQUMsNkJBQTZCLENBQUM7QUFDekQsbUJBQVMsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLFdBQVEsQ0FBQywyREFBMkQsQ0FBQztTQUM3RixDQUFDO0FBQ0YsYUFBSyxFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUM7QUFDaEIsa0JBQVEsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLGtCQUFrQixDQUFDLFdBQVEsQ0FBQyxLQUFLLENBQUM7U0FDaEUsQ0FBQyxXQUFRLEVBQUU7T0FDYixDQUFDLFdBQVEsRUFBRSxDQUFDO0tBQ2Q7O0FBRUQsUUFBSSxFQUFFLGNBQVUsTUFBTSxFQUFFLE9BQU8sRUFBRTs7QUFFL0IscUJBQWUsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7O0FBRTlCLHdCQUFrQixDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDL0U7R0FDRixDQUFDLENBQUM7Q0FDSixDQUFDIiwiZmlsZSI6Ii9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG52YXIgam9pbiA9IHJlcXVpcmUoJ3BhdGgnKS5qb2luO1xudmFyIHJlcXVpcmVBbGxBbmRBcHBseSA9IHJlcXVpcmUoJy4vc2VydmVyL2xpYi9yZXF1aXJlX2FsbF9hbmRfYXBwbHknKTtcbnZhciBwbHVnaW5TZWxmQ2hlY2sgPSByZXF1aXJlKCcuL3NlcnZlci9saWIvcGx1Z2luX3NlbGZfY2hlY2snKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2liYW5hKSB7XG4gIHJldHVybiBuZXcga2liYW5hLlBsdWdpbih7XG4gICAgcmVxdWlyZTogWydlbGFzdGljc2VhcmNoJ10sXG4gICAgbmFtZTogJ21hcnZlbCcsXG5cbiAgICB1aUV4cG9ydHM6IHtcbiAgICAgIGFwcDoge1xuICAgICAgICB0aXRsZTogJ01hcnZlbCcsXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnTW9uaXRvcmluZyBmb3IgRWxhc3RpY3NlYXJjaCcsXG4gICAgICAgIG1haW46ICdwbHVnaW5zL21hcnZlbC9tYXJ2ZWwnLFxuICAgICAgICBpbmplY3RWYXJzOiBmdW5jdGlvbiAoc2VydmVyLCBvcHRpb25zKSB7XG4gICAgICAgICAgdmFyIGNvbmZpZyA9IHNlcnZlci5jb25maWcoKTtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbWF4QnVja2V0U2l6ZTogY29uZmlnLmdldCgnbWFydmVsLm1heF9idWNrZXRfc2l6ZScpLFxuICAgICAgICAgICAgbWluSW50ZXJ2YWxTZWNvbmRzOiBjb25maWcuZ2V0KCdtYXJ2ZWwubWluX2ludGVydmFsX3NlY29uZHMnKSxcbiAgICAgICAgICAgIGtibkluZGV4OiBjb25maWcuZ2V0KCdraWJhbmEuaW5kZXgnKSxcbiAgICAgICAgICAgIGVzQXBpVmVyc2lvbjogY29uZmlnLmdldCgnZWxhc3RpY3NlYXJjaC5hcGlWZXJzaW9uJyksXG4gICAgICAgICAgICBlc1NoYXJkVGltZW91dDogY29uZmlnLmdldCgnZWxhc3RpY3NlYXJjaC5zaGFyZFRpbWVvdXQnKSxcbiAgICAgICAgICAgIHN0YXRzUmVwb3J0VXJsOiBjb25maWcuZ2V0KCdtYXJ2ZWwuc3RhdHNfcmVwb3J0X3VybCcpLFxuICAgICAgICAgICAgcmVwb3J0U3RhdHM6IGNvbmZpZy5nZXQoJ21hcnZlbC5yZXBvcnRfc3RhdHMnKSxcbiAgICAgICAgICAgIG1hcnZlbEluZGV4UHJlZml4OiBjb25maWcuZ2V0KCdtYXJ2ZWwuaW5kZXhfcHJlZml4JylcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIGNvbmZpZzogZnVuY3Rpb24gKEpvaSkge1xuICAgICAgcmV0dXJuIEpvaS5vYmplY3Qoe1xuICAgICAgICBlbmFibGVkOiBKb2kuYm9vbGVhbigpLmRlZmF1bHQodHJ1ZSksXG4gICAgICAgIGluZGV4OiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnLm1hcnZlbC1lcy1kYXRhLTEnKSxcbiAgICAgICAgaW5kZXhfcHJlZml4OiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnLm1hcnZlbC1lcy0xLScpLFxuICAgICAgICBtaXNzaW5nX2ludGVydmFsczogSm9pLm51bWJlcigpLmRlZmF1bHQoMTIpLFxuICAgICAgICBtYXhfYnVja2V0X3NpemU6IEpvaS5udW1iZXIoKS5kZWZhdWx0KDEwMDAwKSxcbiAgICAgICAgbWluX2ludGVydmFsX3NlY29uZHM6IEpvaS5udW1iZXIoKS5kZWZhdWx0KDEwKSxcbiAgICAgICAgcmVwb3J0X3N0YXRzOiBKb2kuYm9vbGVhbigpLmRlZmF1bHQodHJ1ZSksXG4gICAgICAgIG5vZGVfcmVzb2x2ZXI6IEpvaS5zdHJpbmcoKS5yZWdleCgvXig/OnRyYW5zcG9ydF9hZGRyZXNzfG5hbWUpJC8pLmRlZmF1bHQoJ3RyYW5zcG9ydF9hZGRyZXNzJyksXG4gICAgICAgIHN0YXRzX3JlcG9ydF91cmw6IEpvaS53aGVuKCckZGV2Jywge1xuICAgICAgICAgIGlzOiB0cnVlLFxuICAgICAgICAgIHRoZW46IEpvaS5zdHJpbmcoKS5kZWZhdWx0KCcuLi9hcGkvbWFydmVsL3YxL3Bob25lLWhvbWUnKSxcbiAgICAgICAgICBvdGhlcndpc2U6IEpvaS5zdHJpbmcoKS5kZWZhdWx0KCdodHRwczovL21hcnZlbC1zdGF0cy5lbGFzdGljc2VhcmNoLmNvbS9hcHBkYXRhL21hcnZlbE9wdHMnKVxuICAgICAgICB9KSxcbiAgICAgICAgYWdlbnQ6IEpvaS5vYmplY3Qoe1xuICAgICAgICAgIGludGVydmFsOiBKb2kuc3RyaW5nKCkucmVnZXgoL1tcXGRcXC5dK1t5TXdkaG1zXS8pLmRlZmF1bHQoJzEwcycpXG4gICAgICAgIH0pLmRlZmF1bHQoKVxuICAgICAgfSkuZGVmYXVsdCgpO1xuICAgIH0sXG5cbiAgICBpbml0OiBmdW5jdGlvbiAoc2VydmVyLCBvcHRpb25zKSB7XG4gICAgICAvLyBNYWtlIHN1cmUgdGhlIE1hcnZlbCBpbmRleCBpcyBjcmVhdGVkIGFuZCB0aGUgS2liYW5hIHZlcnNpb24gaXMgc3VwcG9ydGVkXG4gICAgICBwbHVnaW5TZWxmQ2hlY2sodGhpcywgc2VydmVyKTtcbiAgICAgIC8vIFJlcXVpcmUgYWxsIHRoZSByb3V0ZXNcbiAgICAgIHJlcXVpcmVBbGxBbmRBcHBseShqb2luKF9fZGlybmFtZSwgJ3NlcnZlcicsICdyb3V0ZXMnLCAnKionLCAnKi5qcycpLCBzZXJ2ZXIpO1xuICAgIH1cbiAgfSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/index.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/index.js",
      "sourcesContent": [
        "var Promise = require('bluebird');\nvar join = require('path').join;\nvar requireAllAndApply = require('./server/lib/require_all_and_apply');\nvar pluginSelfCheck = require('./server/lib/plugin_self_check');\n\nmodule.exports = function (kibana) {\n  return new kibana.Plugin({\n    require: ['elasticsearch'],\n    name: 'marvel',\n\n    uiExports: {\n      app: {\n        title: 'Marvel',\n        description: 'Monitoring for Elasticsearch',\n        main: 'plugins/marvel/marvel',\n        injectVars: function (server, options) {\n          var config = server.config();\n          return {\n            maxBucketSize: config.get('marvel.max_bucket_size'),\n            minIntervalSeconds: config.get('marvel.min_interval_seconds'),\n            kbnIndex: config.get('kibana.index'),\n            esApiVersion: config.get('elasticsearch.apiVersion'),\n            esShardTimeout: config.get('elasticsearch.shardTimeout'),\n            statsReportUrl: config.get('marvel.stats_report_url'),\n            reportStats: config.get('marvel.report_stats'),\n            marvelIndexPrefix: config.get('marvel.index_prefix')\n          };\n        }\n      }\n    },\n\n    config: function (Joi) {\n      return Joi.object({\n        enabled: Joi.boolean().default(true),\n        index: Joi.string().default('.marvel-es-data-1'),\n        index_prefix: Joi.string().default('.marvel-es-1-'),\n        missing_intervals: Joi.number().default(12),\n        max_bucket_size: Joi.number().default(10000),\n        min_interval_seconds: Joi.number().default(10),\n        report_stats: Joi.boolean().default(true),\n        node_resolver: Joi.string().regex(/^(?:transport_address|name)$/).default('transport_address'),\n        stats_report_url: Joi.when('$dev', {\n          is: true,\n          then: Joi.string().default('../api/marvel/v1/phone-home'),\n          otherwise: Joi.string().default('https://marvel-stats.elasticsearch.com/appdata/marvelOpts')\n        }),\n        agent: Joi.object({\n          interval: Joi.string().regex(/[\\d\\.]+[yMwdhms]/).default('10s')\n        }).default()\n      }).default();\n    },\n\n    init: function (server, options) {\n      // Make sure the Marvel index is created and the Kibana version is supported\n      pluginSelfCheck(this, server);\n      // Require all the routes\n      requireAllAndApply(join(__dirname, 'server', 'routes', '**', '*.js'), server);\n    }\n  });\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/require_all_and_apply.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar glob = require('glob');\nvar Promise = require('bluebird');\n\nmodule.exports = function (path, server) {\n  return new Promise(function (resolve, reject) {\n    glob(path, { ignore: '**/__test__/**' }, function (err, files) {\n      if (err) return reject(err);\n      var modules = files.map(require);\n      modules.forEach(function (fn) {\n        fn(server);\n      });\n      resolve(modules);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9yZXF1aXJlX2FsbF9hbmRfYXBwbHkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDM0IsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDOztBQUVsQyxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsSUFBSSxFQUFFLE1BQU0sRUFBRTtBQUN2QyxTQUFPLElBQUksT0FBTyxDQUFDLFVBQVUsT0FBTyxFQUFFLE1BQU0sRUFBRTtBQUM1QyxRQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLEVBQUUsVUFBVSxHQUFHLEVBQUUsS0FBSyxFQUFFO0FBQzdELFVBQUksR0FBRyxFQUFFLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQzVCLFVBQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDakMsYUFBTyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsRUFBRTtBQUM1QixVQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7T0FDWixDQUFDLENBQUM7QUFDSCxhQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDbEIsQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDO0NBQ0osQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvcmVxdWlyZV9hbGxfYW5kX2FwcGx5LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGdsb2IgPSByZXF1aXJlKCdnbG9iJyk7XG52YXIgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHBhdGgsIHNlcnZlcikge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgIGdsb2IocGF0aCwgeyBpZ25vcmU6ICcqKi9fX3Rlc3RfXy8qKicgfSwgZnVuY3Rpb24gKGVyciwgZmlsZXMpIHtcbiAgICAgIGlmIChlcnIpIHJldHVybiByZWplY3QoZXJyKTtcbiAgICAgIHZhciBtb2R1bGVzID0gZmlsZXMubWFwKHJlcXVpcmUpO1xuICAgICAgbW9kdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChmbikge1xuICAgICAgICBmbihzZXJ2ZXIpO1xuICAgICAgfSk7XG4gICAgICByZXNvbHZlKG1vZHVsZXMpO1xuICAgIH0pO1xuICB9KTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/require_all_and_apply.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAElC,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE,MAAM,EAAE;AACvC,SAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAC5C,QAAI,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,gBAAgB,EAAE,EAAE,UAAU,GAAG,EAAE,KAAK,EAAE;AAC7D,UAAI,GAAG,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AAC5B,UAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACjC,aAAO,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;AAC5B,UAAE,CAAC,MAAM,CAAC,CAAC;OACZ,CAAC,CAAC;AACH,aAAO,CAAC,OAAO,CAAC,CAAC;KAClB,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/require_all_and_apply.js",
      "sourcesContent": [
        "var glob = require('glob');\nvar Promise = require('bluebird');\n\nmodule.exports = function (path, server) {\n  return new Promise(function (resolve, reject) {\n    glob(path, { ignore: '**/__test__/**' }, function (err, files) {\n      if (err) return reject(err);\n      var modules = files.map(require);\n      modules.forEach(function (fn) {\n        fn(server);\n      });\n      resolve(modules);\n    });\n  });\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/plugin_self_check.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar ensureVersions = require('./ensure_versions');\n\nmodule.exports = function pluginSelfCheck(plugin, server) {\n  plugin.status.yellow('Waiting for Elasticsearch');\n  var client = server.plugins.elasticsearch.client;\n\n  server.plugins.elasticsearch.status.on('green', function () {\n    // check if kibana is minimum supported version\n\n    var _ensureVersions = ensureVersions(plugin);\n\n    var isKibanaSupported = _ensureVersions.isKibanaSupported;\n    var kibanaVersion = _ensureVersions.kibanaVersion;\n    var marvelVersion = _ensureVersions.marvelVersion;\n    var kbnVersionDisplay = _ensureVersions.kbnVersionDisplay;\n\n    if (isKibanaSupported) {\n      plugin.status.green('Marvel ready');\n    } else if (!isKibanaSupported) {\n      plugin.status.red('Marvel version ' + marvelVersion + ' is not supported with Kibana ' + kibanaVersion + '.\\n          Kibana version ' + kbnVersionDisplay + ' is expected.');\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9wbHVnaW5fc2VsZl9jaGVjay5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDOztBQUVwRCxNQUFNLENBQUMsT0FBTyxHQUFHLFNBQVMsZUFBZSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUU7QUFDeEQsUUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsMkJBQTJCLENBQUMsQ0FBQztBQUNsRCxNQUFJLE1BQU0sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUM7O0FBRWpELFFBQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLFlBQU07OzswQkFPaEQsY0FBYyxDQUFDLE1BQU0sQ0FBQzs7UUFKeEIsaUJBQWlCLG1CQUFqQixpQkFBaUI7UUFDakIsYUFBYSxtQkFBYixhQUFhO1FBQ2IsYUFBYSxtQkFBYixhQUFhO1FBQ2IsaUJBQWlCLG1CQUFqQixpQkFBaUI7O0FBR25CLFFBQUksaUJBQWlCLEVBQUU7QUFDckIsWUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUM7S0FDckMsTUFBTSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7QUFDN0IsWUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLHFCQUNLLGFBQWEsc0NBQWlDLGFBQWEsb0NBQzVELGlCQUFpQixtQkFDckMsQ0FBQztLQUNIO0dBQ0YsQ0FBQyxDQUFDO0NBRUosQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvcGx1Z2luX3NlbGZfY2hlY2suanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlbnN1cmVWZXJzaW9ucyA9IHJlcXVpcmUoJy4vZW5zdXJlX3ZlcnNpb25zJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGx1Z2luU2VsZkNoZWNrKHBsdWdpbiwgc2VydmVyKSB7XG4gIHBsdWdpbi5zdGF0dXMueWVsbG93KCdXYWl0aW5nIGZvciBFbGFzdGljc2VhcmNoJyk7XG4gIHZhciBjbGllbnQgPSBzZXJ2ZXIucGx1Z2lucy5lbGFzdGljc2VhcmNoLmNsaWVudDtcblxuICBzZXJ2ZXIucGx1Z2lucy5lbGFzdGljc2VhcmNoLnN0YXR1cy5vbignZ3JlZW4nLCAoKSA9PiB7XG4gICAgLy8gY2hlY2sgaWYga2liYW5hIGlzIG1pbmltdW0gc3VwcG9ydGVkIHZlcnNpb25cbiAgICBjb25zdCB7XG4gICAgICBpc0tpYmFuYVN1cHBvcnRlZCxcbiAgICAgIGtpYmFuYVZlcnNpb24sXG4gICAgICBtYXJ2ZWxWZXJzaW9uLFxuICAgICAga2JuVmVyc2lvbkRpc3BsYXlcbiAgICB9ID0gZW5zdXJlVmVyc2lvbnMocGx1Z2luKTtcblxuICAgIGlmIChpc0tpYmFuYVN1cHBvcnRlZCkge1xuICAgICAgcGx1Z2luLnN0YXR1cy5ncmVlbignTWFydmVsIHJlYWR5Jyk7XG4gICAgfSBlbHNlIGlmICghaXNLaWJhbmFTdXBwb3J0ZWQpIHtcbiAgICAgIHBsdWdpbi5zdGF0dXMucmVkKFxuICAgICAgICAgIGBNYXJ2ZWwgdmVyc2lvbiAke21hcnZlbFZlcnNpb259IGlzIG5vdCBzdXBwb3J0ZWQgd2l0aCBLaWJhbmEgJHtraWJhbmFWZXJzaW9ufS5cbiAgICAgICAgICBLaWJhbmEgdmVyc2lvbiAke2tiblZlcnNpb25EaXNwbGF5fSBpcyBleHBlY3RlZC5gXG4gICAgICApO1xuICAgIH1cbiAgfSk7XG5cbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/plugin_self_check.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,cAAc,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;;AAEpD,MAAM,CAAC,OAAO,GAAG,SAAS,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE;AACxD,QAAM,CAAC,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC;AAClD,MAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC;;AAEjD,QAAM,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,YAAM;;;0BAOhD,cAAc,CAAC,MAAM,CAAC;;QAJxB,iBAAiB,mBAAjB,iBAAiB;QACjB,aAAa,mBAAb,aAAa;QACb,aAAa,mBAAb,aAAa;QACb,iBAAiB,mBAAjB,iBAAiB;;AAGnB,QAAI,iBAAiB,EAAE;AACrB,YAAM,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;KACrC,MAAM,IAAI,CAAC,iBAAiB,EAAE;AAC7B,YAAM,CAAC,MAAM,CAAC,GAAG,qBACK,aAAa,sCAAiC,aAAa,oCAC5D,iBAAiB,mBACrC,CAAC;KACH;GACF,CAAC,CAAC;CAEJ,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/plugin_self_check.js",
      "sourcesContent": [
        "const ensureVersions = require('./ensure_versions');\n\nmodule.exports = function pluginSelfCheck(plugin, server) {\n  plugin.status.yellow('Waiting for Elasticsearch');\n  var client = server.plugins.elasticsearch.client;\n\n  server.plugins.elasticsearch.status.on('green', () => {\n    // check if kibana is minimum supported version\n    const {\n      isKibanaSupported,\n      kibanaVersion,\n      marvelVersion,\n      kbnVersionDisplay\n    } = ensureVersions(plugin);\n\n    if (isKibanaSupported) {\n      plugin.status.green('Marvel ready');\n    } else if (!isKibanaSupported) {\n      plugin.status.red(\n          `Marvel version ${marvelVersion} is not supported with Kibana ${kibanaVersion}.\n          Kibana version ${kbnVersionDisplay} is expected.`\n      );\n    }\n  });\n\n};\n"
      ]
    },
    "mtime": 1472156264000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/ensure_versions.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          },
          {
            "source": "semver",
            "imported": [
              "satisfies"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "satisfies",
                "local": "satisfies"
              }
            ]
          },
          {
            "source": "../../package.json",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "pkg"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": [
        "interop-require-default"
      ]
    },
    "ignored": false,
    "code": "/*\n * Ensure version compatibility with Kibana\n * Marvel 2.2.0 should work with Kibana > v4.4.0\n * https://www.elastic.co/guide/en/marvel/current/installing-marvel.html\n * Semver tester: http://jubianchi.github.io/semver-check/\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _semver = require('semver');\n\nvar _packageJson = require('../../package.json');\n\nvar _packageJson2 = _interopRequireDefault(_packageJson);\n\nvar KBN_VERSION_RANGE = '~4.6.0';\nvar KBN_VERSION_DISPLAY = '4.6.x';\n\nfunction cleanVersionString(string) {\n  if (string) {\n    // get just the number.number.number portion (filter out '-snapshot')\n    var matches = string.match(/^\\d+\\.\\d+.\\d+/);\n    if (matches) {\n      // escape() because the string could be rendered in UI\n      return _lodash2['default'].escape(matches[0]);\n    }\n  }\n\n  return '';\n}\n\nfunction ensureVersions(plugin) {\n\n  var kibanaVersion = cleanVersionString(_lodash2['default'].get(plugin, 'kbnServer.version'));\n  var marvelVersion = cleanVersionString(_packageJson2['default'].version);\n  var returnData = { kibanaVersion: kibanaVersion, marvelVersion: marvelVersion, kbnVersionDisplay: KBN_VERSION_DISPLAY };\n\n  // version support check can throw a TypeError if kibanaVersion is invalid\n  try {\n    returnData.isKibanaSupported = (0, _semver.satisfies)(kibanaVersion, KBN_VERSION_RANGE);\n  } catch (e) {\n    returnData.isKibanaSupported = false;\n  }\n\n  return returnData;\n}\n\nexports['default'] = ensureVersions;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9lbnN1cmVfdmVyc2lvbnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7c0JBTWMsUUFBUTs7OztzQkFDSSxRQUFROzsyQkFDbEIsb0JBQW9COzs7O0FBRXBDLElBQU0saUJBQWlCLEdBQUcsUUFBUSxDQUFDO0FBQ25DLElBQU0sbUJBQW1CLEdBQUcsT0FBTyxDQUFDOztBQUVwQyxTQUFTLGtCQUFrQixDQUFDLE1BQU0sRUFBRTtBQUNsQyxNQUFJLE1BQU0sRUFBRTs7QUFFVixRQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQzlDLFFBQUksT0FBTyxFQUFFOztBQUVYLGFBQU8sb0JBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzdCO0dBQ0Y7O0FBRUQsU0FBTyxFQUFFLENBQUM7Q0FDWDs7QUFFRCxTQUFTLGNBQWMsQ0FBQyxNQUFNLEVBQUU7O0FBRTlCLE1BQU0sYUFBYSxHQUFHLGtCQUFrQixDQUFDLG9CQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO0FBQzdFLE1BQU0sYUFBYSxHQUFHLGtCQUFrQixDQUFDLHlCQUFJLE9BQU8sQ0FBQyxDQUFDO0FBQ3RELE1BQU0sVUFBVSxHQUFHLEVBQUUsYUFBYSxFQUFiLGFBQWEsRUFBRSxhQUFhLEVBQWIsYUFBYSxFQUFFLGlCQUFpQixFQUFFLG1CQUFtQixFQUFFLENBQUM7OztBQUc1RixNQUFJO0FBQ0YsY0FBVSxDQUFDLGlCQUFpQixHQUFHLHVCQUFVLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0dBQzVFLENBQUMsT0FBTyxDQUFDLEVBQUU7QUFDVixjQUFVLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxDQUFDO0dBQ3RDOztBQUVELFNBQU8sVUFBVSxDQUFDO0NBRW5COztxQkFFYyxjQUFjIiwiZmlsZSI6Ii9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9lbnN1cmVfdmVyc2lvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogRW5zdXJlIHZlcnNpb24gY29tcGF0aWJpbGl0eSB3aXRoIEtpYmFuYVxuICogTWFydmVsIDIuMi4wIHNob3VsZCB3b3JrIHdpdGggS2liYW5hID4gdjQuNC4wXG4gKiBodHRwczovL3d3dy5lbGFzdGljLmNvL2d1aWRlL2VuL21hcnZlbC9jdXJyZW50L2luc3RhbGxpbmctbWFydmVsLmh0bWxcbiAqIFNlbXZlciB0ZXN0ZXI6IGh0dHA6Ly9qdWJpYW5jaGkuZ2l0aHViLmlvL3NlbXZlci1jaGVjay9cbiAqL1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IHNhdGlzZmllcyB9IGZyb20gJ3NlbXZlcic7XG5pbXBvcnQgcGtnIGZyb20gJy4uLy4uL3BhY2thZ2UuanNvbic7XG5cbmNvbnN0IEtCTl9WRVJTSU9OX1JBTkdFID0gJ340LjYuMCc7XG5jb25zdCBLQk5fVkVSU0lPTl9ESVNQTEFZID0gJzQuNi54JztcblxuZnVuY3Rpb24gY2xlYW5WZXJzaW9uU3RyaW5nKHN0cmluZykge1xuICBpZiAoc3RyaW5nKSB7XG4gICAgLy8gZ2V0IGp1c3QgdGhlIG51bWJlci5udW1iZXIubnVtYmVyIHBvcnRpb24gKGZpbHRlciBvdXQgJy1zbmFwc2hvdCcpXG4gICAgY29uc3QgbWF0Y2hlcyA9IHN0cmluZy5tYXRjaCgvXlxcZCtcXC5cXGQrLlxcZCsvKTtcbiAgICBpZiAobWF0Y2hlcykge1xuICAgICAgLy8gZXNjYXBlKCkgYmVjYXVzZSB0aGUgc3RyaW5nIGNvdWxkIGJlIHJlbmRlcmVkIGluIFVJXG4gICAgICByZXR1cm4gXy5lc2NhcGUobWF0Y2hlc1swXSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuICcnO1xufVxuXG5mdW5jdGlvbiBlbnN1cmVWZXJzaW9ucyhwbHVnaW4pIHtcblxuICBjb25zdCBraWJhbmFWZXJzaW9uID0gY2xlYW5WZXJzaW9uU3RyaW5nKF8uZ2V0KHBsdWdpbiwgJ2tiblNlcnZlci52ZXJzaW9uJykpO1xuICBjb25zdCBtYXJ2ZWxWZXJzaW9uID0gY2xlYW5WZXJzaW9uU3RyaW5nKHBrZy52ZXJzaW9uKTtcbiAgY29uc3QgcmV0dXJuRGF0YSA9IHsga2liYW5hVmVyc2lvbiwgbWFydmVsVmVyc2lvbiwga2JuVmVyc2lvbkRpc3BsYXk6IEtCTl9WRVJTSU9OX0RJU1BMQVkgfTtcblxuICAvLyB2ZXJzaW9uIHN1cHBvcnQgY2hlY2sgY2FuIHRocm93IGEgVHlwZUVycm9yIGlmIGtpYmFuYVZlcnNpb24gaXMgaW52YWxpZFxuICB0cnkge1xuICAgIHJldHVybkRhdGEuaXNLaWJhbmFTdXBwb3J0ZWQgPSBzYXRpc2ZpZXMoa2liYW5hVmVyc2lvbiwgS0JOX1ZFUlNJT05fUkFOR0UpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuRGF0YS5pc0tpYmFuYVN1cHBvcnRlZCA9IGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHJldHVybkRhdGE7XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgZW5zdXJlVmVyc2lvbnM7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/ensure_versions.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;sBAMc,QAAQ;;;;sBACI,QAAQ;;2BAClB,oBAAoB;;;;AAEpC,IAAM,iBAAiB,GAAG,QAAQ,CAAC;AACnC,IAAM,mBAAmB,GAAG,OAAO,CAAC;;AAEpC,SAAS,kBAAkB,CAAC,MAAM,EAAE;AAClC,MAAI,MAAM,EAAE;;AAEV,QAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAC9C,QAAI,OAAO,EAAE;;AAEX,aAAO,oBAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7B;GACF;;AAED,SAAO,EAAE,CAAC;CACX;;AAED,SAAS,cAAc,CAAC,MAAM,EAAE;;AAE9B,MAAM,aAAa,GAAG,kBAAkB,CAAC,oBAAE,GAAG,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC,CAAC;AAC7E,MAAM,aAAa,GAAG,kBAAkB,CAAC,yBAAI,OAAO,CAAC,CAAC;AACtD,MAAM,UAAU,GAAG,EAAE,aAAa,EAAb,aAAa,EAAE,aAAa,EAAb,aAAa,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,CAAC;;;AAG5F,MAAI;AACF,cAAU,CAAC,iBAAiB,GAAG,uBAAU,aAAa,EAAE,iBAAiB,CAAC,CAAC;GAC5E,CAAC,OAAO,CAAC,EAAE;AACV,cAAU,CAAC,iBAAiB,GAAG,KAAK,CAAC;GACtC;;AAED,SAAO,UAAU,CAAC;CAEnB;;qBAEc,cAAc",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/ensure_versions.js",
      "sourcesContent": [
        "/*\n * Ensure version compatibility with Kibana\n * Marvel 2.2.0 should work with Kibana > v4.4.0\n * https://www.elastic.co/guide/en/marvel/current/installing-marvel.html\n * Semver tester: http://jubianchi.github.io/semver-check/\n */\nimport _ from 'lodash';\nimport { satisfies } from 'semver';\nimport pkg from '../../package.json';\n\nconst KBN_VERSION_RANGE = '~4.6.0';\nconst KBN_VERSION_DISPLAY = '4.6.x';\n\nfunction cleanVersionString(string) {\n  if (string) {\n    // get just the number.number.number portion (filter out '-snapshot')\n    const matches = string.match(/^\\d+\\.\\d+.\\d+/);\n    if (matches) {\n      // escape() because the string could be rendered in UI\n      return _.escape(matches[0]);\n    }\n  }\n\n  return '';\n}\n\nfunction ensureVersions(plugin) {\n\n  const kibanaVersion = cleanVersionString(_.get(plugin, 'kbnServer.version'));\n  const marvelVersion = cleanVersionString(pkg.version);\n  const returnData = { kibanaVersion, marvelVersion, kbnVersionDisplay: KBN_VERSION_DISPLAY };\n\n  // version support check can throw a TypeError if kibanaVersion is invalid\n  try {\n    returnData.isKibanaSupported = satisfies(kibanaVersion, KBN_VERSION_RANGE);\n  } catch (e) {\n    returnData.isKibanaSupported = false;\n  }\n\n  return returnData;\n\n}\n\nexport default ensureVersions;\n"
      ]
    },
    "mtime": 1472156264000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/clusters.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar Promise = require('bluebird');\nvar _ = require('lodash');\nvar root = require('requirefrom')('');\nvar getClustersStats = root('server/lib/get_clusters_stats');\nvar getClusters = root('server/lib/get_clusters');\nvar getClustersHealth = root('server/lib/get_clusters_health');\nvar Joi = require('joi');\n\nvar calculateIndices = root('server/lib/calculate_indices');\nvar getLastState = root('server/lib/get_last_state');\nvar getClusterStatus = root('server/lib/get_cluster_status');\nvar getMetrics = root('server/lib/get_metrics');\nvar getShardStats = root('server/lib/get_shard_stats');\nvar getLastRecovery = root('server/lib/get_last_recovery');\nvar calculateClusterStatus = root('server/lib/calculate_cluster_status');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n  var config = server.config();\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters',\n    config: {\n      validate: {\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var start = req.payload.timeRange.min;\n      var end = req.payload.timeRange.max;\n      return calculateIndices(req, start, end).then(function (indices) {\n        return getClusters(req, indices).then(getClustersStats(req)).then(getClustersHealth(req)).then(function (clusters) {\n          return reply(_.sortBy(clusters, 'cluster_name'));\n        });\n      })['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var start = req.payload.timeRange.min;\n      var end = req.payload.timeRange.max;\n      calculateIndices(req, start, end).then(function (indices) {\n        return getLastState(req, indices).then(function (lastState) {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            metrics: getMetrics(req, indices),\n            shardStats: getShardStats(req, indices, lastState),\n            shardActivity: getLastRecovery(req, indices)\n          });\n        });\n      }).then(calculateClusterStatus).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n\n  /*\n   * Phone Home\n   */\n  server.route({\n    method: 'GET',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/info',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var params = {\n        index: config.get('marvel.index'),\n        type: 'cluster_info',\n        id: req.params.clusterUuid\n      };\n      return callWithRequest(req, 'get', params).then(function (resp) {\n        var fields = ['cluster_uuid', 'timestamp', 'cluster_name', 'version', 'license', 'cluster_stats'];\n        reply(_.pick(resp._source, fields));\n      })['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/clusters.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/clusters.js",
      "sourcesContent": [
        "const Promise = require('bluebird');\nconst _ = require('lodash');\nconst root = require('requirefrom')('');\nconst getClustersStats = root('server/lib/get_clusters_stats');\nconst getClusters = root('server/lib/get_clusters');\nconst getClustersHealth = root('server/lib/get_clusters_health');\nconst Joi = require('joi');\n\nconst calculateIndices = root('server/lib/calculate_indices');\nconst getLastState = root('server/lib/get_last_state');\nconst getClusterStatus = root('server/lib/get_cluster_status');\nconst getMetrics = root('server/lib/get_metrics');\nconst getShardStats = root('server/lib/get_shard_stats');\nconst getLastRecovery = root('server/lib/get_last_recovery');\nconst calculateClusterStatus = root('server/lib/calculate_cluster_status');\nconst handleError = root('server/lib/handle_error');\n\nmodule.exports = (server) => {\n  const config = server.config();\n  const callWithRequest = server.plugins.elasticsearch.callWithRequest;\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters',\n    config: {\n      validate: {\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const start = req.payload.timeRange.min;\n      const end = req.payload.timeRange.max;\n      return calculateIndices(req, start, end)\n      .then(indices => {\n        return getClusters(req, indices)\n        .then(getClustersStats(req))\n        .then(getClustersHealth(req))\n        .then(clusters => reply(_.sortBy(clusters, 'cluster_name')));\n      })\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const start = req.payload.timeRange.min;\n      const end = req.payload.timeRange.max;\n      calculateIndices(req, start, end)\n      .then(indices => {\n        return getLastState(req, indices)\n        .then(lastState => {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            metrics: getMetrics(req, indices),\n            shardStats: getShardStats(req, indices, lastState),\n            shardActivity: getLastRecovery(req, indices)\n          });\n        });\n      })\n      .then(calculateClusterStatus)\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n  /*\n   * Phone Home\n   */\n  server.route({\n    method: 'GET',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/info',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const params = {\n        index: config.get('marvel.index'),\n        type: 'cluster_info',\n        id: req.params.clusterUuid\n      };\n      return callWithRequest(req, 'get', params)\n      .then(resp => {\n        const fields = [\n          'cluster_uuid',\n          'timestamp',\n          'cluster_name',\n          'version',\n          'license',\n          'cluster_stats'\n        ];\n        reply(_.pick(resp._source, fields));\n      })\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_clusters_stats.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar moment = require('moment');\nvar _ = require('lodash');\nvar Promise = require('bluebird');\nmodule.exports = function (req) {\n  var server = req.server;\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var config = server.config();\n  return function (clusters) {\n    if (!clusters) return [];\n    return Promise.map(clusters, function (cluster) {\n      var body = { size: 1, sort: [{ timestamp: 'desc' }] };\n      body.query = {\n        filtered: { filter: { term: { cluster_uuid: cluster.cluster_uuid } } }\n      };\n      var params = {\n        index: config.get('marvel.index_prefix') + '*',\n        ignore: [404],\n        type: 'cluster_stats',\n        body: body\n      };\n      return callWithRequest(req, 'search', params).then(function (resp) {\n        if (resp.hits.total) {\n          cluster.stats = _.get(resp.hits.hits[0], '_source.cluster_stats');\n        }\n        return cluster;\n      });\n    });\n  };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfY2x1c3RlcnNfc3RhdHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDakMsSUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzVCLElBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNwQyxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsR0FBRyxFQUFLO0FBQ3hCLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUM7QUFDMUIsTUFBTSxlQUFlLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDO0FBQ3JFLE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUMvQixTQUFPLFVBQUMsUUFBUSxFQUFLO0FBQ25CLFFBQUksQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLENBQUM7QUFDekIsV0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxVQUFDLE9BQU8sRUFBSztBQUN4QyxVQUFNLElBQUksR0FBRyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUUsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLENBQUUsRUFBRSxDQUFDO0FBQzFELFVBQUksQ0FBQyxLQUFLLEdBQUc7QUFDWCxnQkFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsWUFBWSxFQUFFLE9BQU8sQ0FBQyxZQUFZLEVBQUUsRUFBRSxFQUFFO09BQ3ZFLENBQUM7QUFDRixVQUFNLE1BQU0sR0FBRztBQUNiLGFBQUssRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLEdBQUcsR0FBRztBQUM5QyxjQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUM7QUFDYixZQUFJLEVBQUUsZUFBZTtBQUNyQixZQUFJLEVBQUUsSUFBSTtPQUNYLENBQUM7QUFDRixhQUFPLGVBQWUsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUMxQyxJQUFJLENBQUMsVUFBQyxJQUFJLEVBQUs7QUFDZCxZQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFO0FBQ25CLGlCQUFPLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztTQUNuRTtBQUNELGVBQU8sT0FBTyxDQUFDO09BQ2hCLENBQUMsQ0FBQztLQUNOLENBQUMsQ0FBQztHQUNKLENBQUM7Q0FDSCxDQUFDIiwiZmlsZSI6Ii9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfY2x1c3RlcnNfc3RhdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb21lbnQgPSByZXF1aXJlKCdtb21lbnQnKTtcbmNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcbmNvbnN0IFByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xubW9kdWxlLmV4cG9ydHMgPSAocmVxKSA9PiB7XG4gIGNvbnN0IHNlcnZlciA9IHJlcS5zZXJ2ZXI7XG4gIGNvbnN0IGNhbGxXaXRoUmVxdWVzdCA9IHNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guY2FsbFdpdGhSZXF1ZXN0O1xuICBjb25zdCBjb25maWcgPSBzZXJ2ZXIuY29uZmlnKCk7XG4gIHJldHVybiAoY2x1c3RlcnMpID0+IHtcbiAgICBpZiAoIWNsdXN0ZXJzKSByZXR1cm4gW107XG4gICAgcmV0dXJuIFByb21pc2UubWFwKGNsdXN0ZXJzLCAoY2x1c3RlcikgPT4ge1xuICAgICAgY29uc3QgYm9keSA9IHsgc2l6ZTogMSwgc29ydDogWyB7IHRpbWVzdGFtcDogJ2Rlc2MnIH0gXSB9O1xuICAgICAgYm9keS5xdWVyeSA9IHtcbiAgICAgICAgZmlsdGVyZWQ6IHsgZmlsdGVyOiB7IHRlcm06IHsgY2x1c3Rlcl91dWlkOiBjbHVzdGVyLmNsdXN0ZXJfdXVpZCB9IH0gfVxuICAgICAgfTtcbiAgICAgIGNvbnN0IHBhcmFtcyA9IHtcbiAgICAgICAgaW5kZXg6IGNvbmZpZy5nZXQoJ21hcnZlbC5pbmRleF9wcmVmaXgnKSArICcqJyxcbiAgICAgICAgaWdub3JlOiBbNDA0XSxcbiAgICAgICAgdHlwZTogJ2NsdXN0ZXJfc3RhdHMnLFxuICAgICAgICBib2R5OiBib2R5XG4gICAgICB9O1xuICAgICAgcmV0dXJuIGNhbGxXaXRoUmVxdWVzdChyZXEsICdzZWFyY2gnLCBwYXJhbXMpXG4gICAgICAgIC50aGVuKChyZXNwKSA9PiB7XG4gICAgICAgICAgaWYgKHJlc3AuaGl0cy50b3RhbCkge1xuICAgICAgICAgICAgY2x1c3Rlci5zdGF0cyA9IF8uZ2V0KHJlc3AuaGl0cy5oaXRzWzBdLCAnX3NvdXJjZS5jbHVzdGVyX3N0YXRzJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBjbHVzdGVyO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgfTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_clusters_stats.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjC,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACpC,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAK;AACxB,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AAC1B,MAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACrE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AAC/B,SAAO,UAAC,QAAQ,EAAK;AACnB,QAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC;AACzB,WAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,OAAO,EAAK;AACxC,UAAM,IAAI,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAE,EAAE,SAAS,EAAE,MAAM,EAAE,CAAE,EAAE,CAAC;AAC1D,UAAI,CAAC,KAAK,GAAG;AACX,gBAAQ,EAAE,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,OAAO,CAAC,YAAY,EAAE,EAAE,EAAE;OACvE,CAAC;AACF,UAAM,MAAM,GAAG;AACb,aAAK,EAAE,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG;AAC9C,cAAM,EAAE,CAAC,GAAG,CAAC;AACb,YAAI,EAAE,eAAe;AACrB,YAAI,EAAE,IAAI;OACX,CAAC;AACF,aAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC1C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,YAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACnB,iBAAO,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAAC;SACnE;AACD,eAAO,OAAO,CAAC;OAChB,CAAC,CAAC;KACN,CAAC,CAAC;GACJ,CAAC;CACH,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_clusters_stats.js",
      "sourcesContent": [
        "const moment = require('moment');\nconst _ = require('lodash');\nconst Promise = require('bluebird');\nmodule.exports = (req) => {\n  const server = req.server;\n  const callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  const config = server.config();\n  return (clusters) => {\n    if (!clusters) return [];\n    return Promise.map(clusters, (cluster) => {\n      const body = { size: 1, sort: [ { timestamp: 'desc' } ] };\n      body.query = {\n        filtered: { filter: { term: { cluster_uuid: cluster.cluster_uuid } } }\n      };\n      const params = {\n        index: config.get('marvel.index_prefix') + '*',\n        ignore: [404],\n        type: 'cluster_stats',\n        body: body\n      };\n      return callWithRequest(req, 'search', params)\n        .then((resp) => {\n          if (resp.hits.total) {\n            cluster.stats = _.get(resp.hits.hits[0], '_source.cluster_stats');\n          }\n          return cluster;\n        });\n    });\n  };\n};\n"
      ]
    },
    "mtime": 1466441064000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_clusters.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar Promise = require('bluebird');\nvar createQuery = require('./create_query.js');\nvar validateMarvelLicense = require('./validate_marvel_license');\nmodule.exports = function getClusters(req, indices) {\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var config = req.server.config();\n  // Get the params from the POST body for the request\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n\n  var params = {\n    index: indices,\n    type: 'cluster_stats',\n    meta: 'get_clusters_stats',\n    ignore: [404],\n    // terms agg for the cluster_uuids\n    body: {\n      size: 0, // return no hits, just aggregation buckets\n      query: createQuery({\n        start: start,\n        end: end,\n        clusterUuid: null\n      }),\n      aggs: {\n        cluster_uuids: {\n          terms: {\n            field: 'cluster_uuid'\n          }\n        }\n      }\n    }\n  };\n  return callWithRequest(req, 'search', params).then(function (statsResp) {\n    var statsBuckets = _.get(statsResp, 'aggregations.cluster_uuids.buckets');\n    if (_.isArray(statsBuckets)) {\n\n      return Promise.map(statsBuckets, function (uuidBucket) {\n        var cluster = {\n          cluster_uuid: uuidBucket.key\n        };\n\n        var infoParams = {\n          index: config.get('marvel.index'),\n          type: 'cluster_info',\n          meta: 'get_clusters_info',\n          id: cluster.cluster_uuid\n        };\n\n        return callWithRequest(req, 'get', infoParams).then(function (infoResp) {\n          var infoDoc = infoResp._source;\n\n          cluster.cluster_name = infoDoc.cluster_name;\n          var license = infoDoc.license;\n          if (license && validateMarvelLicense(cluster.cluster_uuid, license)) {\n            cluster.license = license;\n            cluster.version = infoDoc.version;\n          }\n\n          return cluster;\n        });\n      })\n      // Only return clusters with valid licenses\n      .filter(function (cluster) {\n        return cluster.license;\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfY2x1c3RlcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDNUIsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3BDLElBQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQ2pELElBQU0scUJBQXFCLEdBQUcsT0FBTyxDQUFDLDJCQUEyQixDQUFDLENBQUM7QUFDbkUsTUFBTSxDQUFDLE9BQU8sR0FBRyxTQUFTLFdBQVcsQ0FBQyxHQUFHLEVBQUUsT0FBTyxFQUFFO0FBQ2xELE1BQU0sZUFBZSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUM7QUFDekUsTUFBTSxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQzs7QUFFbkMsTUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO0FBQ3hDLE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQzs7QUFFdEMsTUFBTSxNQUFNLEdBQUc7QUFDYixTQUFLLEVBQUUsT0FBTztBQUNkLFFBQUksRUFBRSxlQUFlO0FBQ3JCLFFBQUksRUFBRSxvQkFBb0I7QUFDMUIsVUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDOztBQUViLFFBQUksRUFBRTtBQUNKLFVBQUksRUFBRSxDQUFDO0FBQ1AsV0FBSyxFQUFFLFdBQVcsQ0FBQztBQUNqQixhQUFLLEVBQUwsS0FBSztBQUNMLFdBQUcsRUFBSCxHQUFHO0FBQ0gsbUJBQVcsRUFBRSxJQUFJO09BQ2xCLENBQUM7QUFDRixVQUFJLEVBQUU7QUFDSixxQkFBYSxFQUFFO0FBQ2IsZUFBSyxFQUFFO0FBQ0wsaUJBQUssRUFBRSxjQUFjO1dBQ3RCO1NBQ0Y7T0FDRjtLQUNGO0dBQ0YsQ0FBQztBQUNGLFNBQU8sZUFBZSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQzVDLElBQUksQ0FBQyxVQUFBLFNBQVMsRUFBSTtBQUNqQixRQUFNLFlBQVksR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxvQ0FBb0MsQ0FBQyxDQUFDO0FBQzVFLFFBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFBRTs7QUFFM0IsYUFBTyxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxVQUFDLFVBQVUsRUFBSztBQUMvQyxZQUFNLE9BQU8sR0FBRztBQUNkLHNCQUFZLEVBQUUsVUFBVSxDQUFDLEdBQUc7U0FDN0IsQ0FBQzs7QUFFRixZQUFNLFVBQVUsR0FBRztBQUNqQixlQUFLLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUM7QUFDakMsY0FBSSxFQUFFLGNBQWM7QUFDcEIsY0FBSSxFQUFFLG1CQUFtQjtBQUN6QixZQUFFLEVBQUUsT0FBTyxDQUFDLFlBQVk7U0FDekIsQ0FBQzs7QUFFRixlQUFPLGVBQWUsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUM3QyxJQUFJLENBQUMsVUFBQSxRQUFRLEVBQUk7QUFDaEIsY0FBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQzs7QUFFakMsaUJBQU8sQ0FBQyxZQUFZLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQztBQUM1QyxjQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQ2hDLGNBQUksT0FBTyxJQUFJLHFCQUFxQixDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLEVBQUU7QUFDbkUsbUJBQU8sQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0FBQzFCLG1CQUFPLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUM7V0FDbkM7O0FBRUQsaUJBQU8sT0FBTyxDQUFDO1NBQ2hCLENBQUMsQ0FBQztPQUNKLENBQUM7O09BRUQsTUFBTSxDQUFDLFVBQUEsT0FBTztlQUFJLE9BQU8sQ0FBQyxPQUFPO09BQUEsQ0FBQyxDQUFDO0tBQ3JDO0dBQ0YsQ0FBQyxDQUFDO0NBQ0osQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvZ2V0X2NsdXN0ZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuY29uc3QgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG5jb25zdCBjcmVhdGVRdWVyeSA9IHJlcXVpcmUoJy4vY3JlYXRlX3F1ZXJ5LmpzJyk7XG5jb25zdCB2YWxpZGF0ZU1hcnZlbExpY2Vuc2UgPSByZXF1aXJlKCcuL3ZhbGlkYXRlX21hcnZlbF9saWNlbnNlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdldENsdXN0ZXJzKHJlcSwgaW5kaWNlcykge1xuICBjb25zdCBjYWxsV2l0aFJlcXVlc3QgPSByZXEuc2VydmVyLnBsdWdpbnMuZWxhc3RpY3NlYXJjaC5jYWxsV2l0aFJlcXVlc3Q7XG4gIGNvbnN0IGNvbmZpZyA9IHJlcS5zZXJ2ZXIuY29uZmlnKCk7XG4gIC8vIEdldCB0aGUgcGFyYW1zIGZyb20gdGhlIFBPU1QgYm9keSBmb3IgdGhlIHJlcXVlc3RcbiAgY29uc3Qgc3RhcnQgPSByZXEucGF5bG9hZC50aW1lUmFuZ2UubWluO1xuICBjb25zdCBlbmQgPSByZXEucGF5bG9hZC50aW1lUmFuZ2UubWF4O1xuXG4gIGNvbnN0IHBhcmFtcyA9IHtcbiAgICBpbmRleDogaW5kaWNlcyxcbiAgICB0eXBlOiAnY2x1c3Rlcl9zdGF0cycsXG4gICAgbWV0YTogJ2dldF9jbHVzdGVyc19zdGF0cycsXG4gICAgaWdub3JlOiBbNDA0XSxcbiAgICAvLyB0ZXJtcyBhZ2cgZm9yIHRoZSBjbHVzdGVyX3V1aWRzXG4gICAgYm9keToge1xuICAgICAgc2l6ZTogMCwgLy8gcmV0dXJuIG5vIGhpdHMsIGp1c3QgYWdncmVnYXRpb24gYnVja2V0c1xuICAgICAgcXVlcnk6IGNyZWF0ZVF1ZXJ5KHtcbiAgICAgICAgc3RhcnQsXG4gICAgICAgIGVuZCxcbiAgICAgICAgY2x1c3RlclV1aWQ6IG51bGxcbiAgICAgIH0pLFxuICAgICAgYWdnczoge1xuICAgICAgICBjbHVzdGVyX3V1aWRzOiB7XG4gICAgICAgICAgdGVybXM6IHtcbiAgICAgICAgICAgIGZpZWxkOiAnY2x1c3Rlcl91dWlkJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGNhbGxXaXRoUmVxdWVzdChyZXEsICdzZWFyY2gnLCBwYXJhbXMpXG4gIC50aGVuKHN0YXRzUmVzcCA9PiB7XG4gICAgY29uc3Qgc3RhdHNCdWNrZXRzID0gXy5nZXQoc3RhdHNSZXNwLCAnYWdncmVnYXRpb25zLmNsdXN0ZXJfdXVpZHMuYnVja2V0cycpO1xuICAgIGlmIChfLmlzQXJyYXkoc3RhdHNCdWNrZXRzKSkge1xuXG4gICAgICByZXR1cm4gUHJvbWlzZS5tYXAoc3RhdHNCdWNrZXRzLCAodXVpZEJ1Y2tldCkgPT4ge1xuICAgICAgICBjb25zdCBjbHVzdGVyID0ge1xuICAgICAgICAgIGNsdXN0ZXJfdXVpZDogdXVpZEJ1Y2tldC5rZXlcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCBpbmZvUGFyYW1zID0ge1xuICAgICAgICAgIGluZGV4OiBjb25maWcuZ2V0KCdtYXJ2ZWwuaW5kZXgnKSxcbiAgICAgICAgICB0eXBlOiAnY2x1c3Rlcl9pbmZvJyxcbiAgICAgICAgICBtZXRhOiAnZ2V0X2NsdXN0ZXJzX2luZm8nLFxuICAgICAgICAgIGlkOiBjbHVzdGVyLmNsdXN0ZXJfdXVpZFxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBjYWxsV2l0aFJlcXVlc3QocmVxLCAnZ2V0JywgaW5mb1BhcmFtcylcbiAgICAgICAgLnRoZW4oaW5mb1Jlc3AgPT4ge1xuICAgICAgICAgIGNvbnN0IGluZm9Eb2MgPSBpbmZvUmVzcC5fc291cmNlO1xuXG4gICAgICAgICAgY2x1c3Rlci5jbHVzdGVyX25hbWUgPSBpbmZvRG9jLmNsdXN0ZXJfbmFtZTtcbiAgICAgICAgICBjb25zdCBsaWNlbnNlID0gaW5mb0RvYy5saWNlbnNlO1xuICAgICAgICAgIGlmIChsaWNlbnNlICYmIHZhbGlkYXRlTWFydmVsTGljZW5zZShjbHVzdGVyLmNsdXN0ZXJfdXVpZCwgbGljZW5zZSkpIHtcbiAgICAgICAgICAgIGNsdXN0ZXIubGljZW5zZSA9IGxpY2Vuc2U7XG4gICAgICAgICAgICBjbHVzdGVyLnZlcnNpb24gPSBpbmZvRG9jLnZlcnNpb247XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIGNsdXN0ZXI7XG4gICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC8vIE9ubHkgcmV0dXJuIGNsdXN0ZXJzIHdpdGggdmFsaWQgbGljZW5zZXNcbiAgICAgIC5maWx0ZXIoY2x1c3RlciA9PiBjbHVzdGVyLmxpY2Vuc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_clusters.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACpC,IAAM,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACjD,IAAM,qBAAqB,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AACnE,MAAM,CAAC,OAAO,GAAG,SAAS,WAAW,CAAC,GAAG,EAAE,OAAO,EAAE;AAClD,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACzE,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;;AAEnC,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;;AAEtC,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,QAAI,EAAE,eAAe;AACrB,QAAI,EAAE,oBAAoB;AAC1B,UAAM,EAAE,CAAC,GAAG,CAAC;;AAEb,QAAI,EAAE;AACJ,UAAI,EAAE,CAAC;AACP,WAAK,EAAE,WAAW,CAAC;AACjB,aAAK,EAAL,KAAK;AACL,WAAG,EAAH,GAAG;AACH,mBAAW,EAAE,IAAI;OAClB,CAAC;AACF,UAAI,EAAE;AACJ,qBAAa,EAAE;AACb,eAAK,EAAE;AACL,iBAAK,EAAE,cAAc;WACtB;SACF;OACF;KACF;GACF,CAAC;AACF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAA,SAAS,EAAI;AACjB,QAAM,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,oCAAoC,CAAC,CAAC;AAC5E,QAAI,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;;AAE3B,aAAO,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,UAAC,UAAU,EAAK;AAC/C,YAAM,OAAO,GAAG;AACd,sBAAY,EAAE,UAAU,CAAC,GAAG;SAC7B,CAAC;;AAEF,YAAM,UAAU,GAAG;AACjB,eAAK,EAAE,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC;AACjC,cAAI,EAAE,cAAc;AACpB,cAAI,EAAE,mBAAmB;AACzB,YAAE,EAAE,OAAO,CAAC,YAAY;SACzB,CAAC;;AAEF,eAAO,eAAe,CAAC,GAAG,EAAE,KAAK,EAAE,UAAU,CAAC,CAC7C,IAAI,CAAC,UAAA,QAAQ,EAAI;AAChB,cAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;;AAEjC,iBAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;AAC5C,cAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAChC,cAAI,OAAO,IAAI,qBAAqB,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,EAAE;AACnE,mBAAO,CAAC,OAAO,GAAG,OAAO,CAAC;AAC1B,mBAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;WACnC;;AAED,iBAAO,OAAO,CAAC;SAChB,CAAC,CAAC;OACJ,CAAC;;OAED,MAAM,CAAC,UAAA,OAAO;eAAI,OAAO,CAAC,OAAO;OAAA,CAAC,CAAC;KACrC;GACF,CAAC,CAAC;CACJ,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_clusters.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst Promise = require('bluebird');\nconst createQuery = require('./create_query.js');\nconst validateMarvelLicense = require('./validate_marvel_license');\nmodule.exports = function getClusters(req, indices) {\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const config = req.server.config();\n  // Get the params from the POST body for the request\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n\n  const params = {\n    index: indices,\n    type: 'cluster_stats',\n    meta: 'get_clusters_stats',\n    ignore: [404],\n    // terms agg for the cluster_uuids\n    body: {\n      size: 0, // return no hits, just aggregation buckets\n      query: createQuery({\n        start,\n        end,\n        clusterUuid: null\n      }),\n      aggs: {\n        cluster_uuids: {\n          terms: {\n            field: 'cluster_uuid'\n          }\n        }\n      }\n    }\n  };\n  return callWithRequest(req, 'search', params)\n  .then(statsResp => {\n    const statsBuckets = _.get(statsResp, 'aggregations.cluster_uuids.buckets');\n    if (_.isArray(statsBuckets)) {\n\n      return Promise.map(statsBuckets, (uuidBucket) => {\n        const cluster = {\n          cluster_uuid: uuidBucket.key\n        };\n\n        const infoParams = {\n          index: config.get('marvel.index'),\n          type: 'cluster_info',\n          meta: 'get_clusters_info',\n          id: cluster.cluster_uuid\n        };\n\n        return callWithRequest(req, 'get', infoParams)\n        .then(infoResp => {\n          const infoDoc = infoResp._source;\n\n          cluster.cluster_name = infoDoc.cluster_name;\n          const license = infoDoc.license;\n          if (license && validateMarvelLicense(cluster.cluster_uuid, license)) {\n            cluster.license = license;\n            cluster.version = infoDoc.version;\n          }\n\n          return cluster;\n        });\n      })\n      // Only return clusters with valid licenses\n      .filter(cluster => cluster.license);\n    }\n  });\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/create_query.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar moment = require('moment');\nmodule.exports = function (options) {\n  options = _.defaults(options, { filters: [] });\n  var clusterFilter;\n  if (options.clusterUuid) {\n    clusterFilter = { term: { cluster_uuid: options.clusterUuid } };\n  }\n  var timeRangeFilter = {\n    range: {\n      timestamp: {\n        format: 'epoch_millis'\n      }\n    }\n  };\n  if (options.start) {\n    timeRangeFilter.range.timestamp.gte = moment.utc(options.start).valueOf();\n  }\n  if (options.end) {\n    timeRangeFilter.range.timestamp.lte = moment.utc(options.end).valueOf();\n  }\n  var filters = [clusterFilter].concat(options.filters);\n  if (options.end || options.start) {\n    filters.push(timeRangeFilter);\n  }\n  return {\n    filtered: {\n      filter: {\n        bool: {\n          must: filters\n        }\n      }\n    }\n  };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9jcmVhdGVfcXVlcnkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLENBQUMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDMUIsSUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ2pDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBQyxPQUFPLEVBQUs7QUFDNUIsU0FBTyxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDL0MsTUFBSSxhQUFhLENBQUM7QUFDbEIsTUFBSSxPQUFPLENBQUMsV0FBVyxFQUFFO0FBQ3ZCLGlCQUFhLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRSxZQUFZLEVBQUUsT0FBTyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUM7R0FDakU7QUFDRCxNQUFJLGVBQWUsR0FBRztBQUNwQixTQUFLLEVBQUU7QUFDTCxlQUFTLEVBQUU7QUFDVCxjQUFNLEVBQUUsY0FBYztPQUN2QjtLQUNGO0dBQ0YsQ0FBQztBQUNGLE1BQUksT0FBTyxDQUFDLEtBQUssRUFBRTtBQUNqQixtQkFBZSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0dBQzNFO0FBQ0QsTUFBSSxPQUFPLENBQUMsR0FBRyxFQUFFO0FBQ2YsbUJBQWUsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztHQUN6RTtBQUNELE1BQU0sT0FBTyxHQUFHLENBQUMsYUFBYSxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUN4RCxNQUFJLE9BQU8sQ0FBQyxHQUFHLElBQUksT0FBTyxDQUFDLEtBQUssRUFBRTtBQUNoQyxXQUFPLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0dBQy9CO0FBQ0QsU0FBTztBQUNMLFlBQVEsRUFBRTtBQUNSLFlBQU0sRUFBRTtBQUNOLFlBQUksRUFBRTtBQUNKLGNBQUksRUFBRSxPQUFPO1NBQ2Q7T0FDRjtLQUNGO0dBQ0YsQ0FBQztDQUNILENBQUMiLCJmaWxlIjoiL2hvbWUvZWxhc3RpY3NlYXJjaC0yLjQuMS9iaW4va2liYW5hLTQuNi4xLWxpbnV4LXg4Nl82NC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2NyZWF0ZV9xdWVyeS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5jb25zdCBtb21lbnQgPSByZXF1aXJlKCdtb21lbnQnKTtcbm1vZHVsZS5leHBvcnRzID0gKG9wdGlvbnMpID0+IHtcbiAgb3B0aW9ucyA9IF8uZGVmYXVsdHMob3B0aW9ucywgeyBmaWx0ZXJzOiBbXSB9KTtcbiAgdmFyIGNsdXN0ZXJGaWx0ZXI7XG4gIGlmIChvcHRpb25zLmNsdXN0ZXJVdWlkKSB7XG4gICAgY2x1c3RlckZpbHRlciA9IHsgdGVybTogeyBjbHVzdGVyX3V1aWQ6IG9wdGlvbnMuY2x1c3RlclV1aWQgfSB9O1xuICB9XG4gIHZhciB0aW1lUmFuZ2VGaWx0ZXIgPSB7XG4gICAgcmFuZ2U6IHtcbiAgICAgIHRpbWVzdGFtcDoge1xuICAgICAgICBmb3JtYXQ6ICdlcG9jaF9taWxsaXMnXG4gICAgICB9XG4gICAgfVxuICB9O1xuICBpZiAob3B0aW9ucy5zdGFydCkge1xuICAgIHRpbWVSYW5nZUZpbHRlci5yYW5nZS50aW1lc3RhbXAuZ3RlID0gbW9tZW50LnV0YyhvcHRpb25zLnN0YXJ0KS52YWx1ZU9mKCk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuZW5kKSB7XG4gICAgdGltZVJhbmdlRmlsdGVyLnJhbmdlLnRpbWVzdGFtcC5sdGUgPSBtb21lbnQudXRjKG9wdGlvbnMuZW5kKS52YWx1ZU9mKCk7XG4gIH1cbiAgY29uc3QgZmlsdGVycyA9IFtjbHVzdGVyRmlsdGVyXS5jb25jYXQob3B0aW9ucy5maWx0ZXJzKTtcbiAgaWYgKG9wdGlvbnMuZW5kIHx8IG9wdGlvbnMuc3RhcnQpIHtcbiAgICBmaWx0ZXJzLnB1c2godGltZVJhbmdlRmlsdGVyKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIGZpbHRlcmVkOiB7XG4gICAgICBmaWx0ZXI6IHtcbiAgICAgICAgYm9vbDoge1xuICAgICAgICAgIG11c3Q6IGZpbHRlcnNcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/create_query.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjC,MAAM,CAAC,OAAO,GAAG,UAAC,OAAO,EAAK;AAC5B,SAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;AAC/C,MAAI,aAAa,CAAC;AAClB,MAAI,OAAO,CAAC,WAAW,EAAE;AACvB,iBAAa,GAAG,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;GACjE;AACD,MAAI,eAAe,GAAG;AACpB,SAAK,EAAE;AACL,eAAS,EAAE;AACT,cAAM,EAAE,cAAc;OACvB;KACF;GACF,CAAC;AACF,MAAI,OAAO,CAAC,KAAK,EAAE;AACjB,mBAAe,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;GAC3E;AACD,MAAI,OAAO,CAAC,GAAG,EAAE;AACf,mBAAe,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;GACzE;AACD,MAAM,OAAO,GAAG,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACxD,MAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE;AAChC,WAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;GAC/B;AACD,SAAO;AACL,YAAQ,EAAE;AACR,YAAM,EAAE;AACN,YAAI,EAAE;AACJ,cAAI,EAAE,OAAO;SACd;OACF;KACF;GACF,CAAC;CACH,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/create_query.js",
      "sourcesContent": [
        "var _ = require('lodash');\nconst moment = require('moment');\nmodule.exports = (options) => {\n  options = _.defaults(options, { filters: [] });\n  var clusterFilter;\n  if (options.clusterUuid) {\n    clusterFilter = { term: { cluster_uuid: options.clusterUuid } };\n  }\n  var timeRangeFilter = {\n    range: {\n      timestamp: {\n        format: 'epoch_millis'\n      }\n    }\n  };\n  if (options.start) {\n    timeRangeFilter.range.timestamp.gte = moment.utc(options.start).valueOf();\n  }\n  if (options.end) {\n    timeRangeFilter.range.timestamp.lte = moment.utc(options.end).valueOf();\n  }\n  const filters = [clusterFilter].concat(options.filters);\n  if (options.end || options.start) {\n    filters.push(timeRangeFilter);\n  }\n  return {\n    filtered: {\n      filter: {\n        bool: {\n          must: filters\n        }\n      }\n    }\n  };\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/validate_marvel_license.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar crypto = require('crypto');\nfunction sha256(input) {\n  return crypto.createHash('sha256').update(input).digest('hex');\n}\nmodule.exports = function (id, license) {\n  var hash = sha256('' + license.status + license.uid + license.type + license.expiry_date_in_millis + id);\n  return hash === license.hkey;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi92YWxpZGF0ZV9tYXJ2ZWxfbGljZW5zZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMvQixTQUFTLE1BQU0sQ0FBQyxLQUFLLEVBQUU7QUFDckIsU0FBTyxNQUFNLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7Q0FDaEU7QUFDRCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsRUFBRSxFQUFFLE9BQU8sRUFBRTtBQUN0QyxNQUFJLElBQUksR0FBRyxNQUFNLE1BQUksT0FBTyxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLHFCQUFxQixHQUFHLEVBQUUsQ0FBRyxDQUFDO0FBQ3pHLFNBQU8sSUFBSSxLQUFLLE9BQU8sQ0FBQyxJQUFJLENBQUM7Q0FDOUIsQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvdmFsaWRhdGVfbWFydmVsX2xpY2Vuc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XG5mdW5jdGlvbiBzaGEyNTYoaW5wdXQpIHtcbiAgcmV0dXJuIGNyeXB0by5jcmVhdGVIYXNoKCdzaGEyNTYnKS51cGRhdGUoaW5wdXQpLmRpZ2VzdCgnaGV4Jyk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpZCwgbGljZW5zZSkge1xuICBsZXQgaGFzaCA9IHNoYTI1NihgJHtsaWNlbnNlLnN0YXR1c30ke2xpY2Vuc2UudWlkfSR7bGljZW5zZS50eXBlfSR7bGljZW5zZS5leHBpcnlfZGF0ZV9pbl9taWxsaXN9JHtpZH1gKTtcbiAgcmV0dXJuIGhhc2ggPT09IGxpY2Vuc2UuaGtleTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/validate_marvel_license.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,SAAS,MAAM,CAAC,KAAK,EAAE;AACrB,SAAO,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;CAChE;AACD,MAAM,CAAC,OAAO,GAAG,UAAU,EAAE,EAAE,OAAO,EAAE;AACtC,MAAI,IAAI,GAAG,MAAM,MAAI,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,qBAAqB,GAAG,EAAE,CAAG,CAAC;AACzG,SAAO,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC;CAC9B,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/validate_marvel_license.js",
      "sourcesContent": [
        "var crypto = require('crypto');\nfunction sha256(input) {\n  return crypto.createHash('sha256').update(input).digest('hex');\n}\nmodule.exports = function (id, license) {\n  let hash = sha256(`${license.status}${license.uid}${license.type}${license.expiry_date_in_millis}${id}`);\n  return hash === license.hkey;\n};\n"
      ]
    },
    "mtime": 1466441064000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_clusters_health.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "get",
              "find",
              "indexBy"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "get",
                "local": "get"
              },
              {
                "kind": "named",
                "imported": "find",
                "local": "find"
              },
              {
                "kind": "named",
                "imported": "indexBy",
                "local": "indexBy"
              }
            ]
          },
          {
            "source": "moment",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "moment"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": [
        "interop-require-default"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lodash = require('lodash');\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nmodule.exports = function (req) {\n  var server = req.server;\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var config = server.config();\n  return function (clusters) {\n    var bodies = [];\n    clusters.forEach(function (cluster) {\n      bodies.push({\n        index: config.get('marvel.index_prefix') + '*',\n        type: 'cluster_state'\n      });\n      bodies.push({\n        size: 1,\n        sort: {\n          'timestamp': { order: 'desc' }\n        },\n        query: {\n          filtered: {\n            filter: {\n              term: {\n                'cluster_uuid': cluster.cluster_uuid\n              }\n            }\n          }\n        }\n      });\n    });\n    if (!bodies.length) return Promise.resolve();\n    var params = {\n      index: config.get('marvel.index_prefix') + '*',\n      type: 'cluster_state',\n      body: bodies\n    };\n    return callWithRequest(req, 'msearch', params).then(function (res) {\n      res.responses.forEach(function (resp) {\n        var hit = (0, _lodash.get)(resp, 'hits.hits[0]');\n        if (resp && resp.hits && resp.hits.total !== 0) {\n          var clusterName = (0, _lodash.get)(hit, '_source.cluster_uuid');\n          var nodes = (0, _lodash.get)(hit, '_source.cluster_state.nodes');\n          var cluster = (0, _lodash.find)(clusters, { cluster_uuid: clusterName });\n          cluster.status = (0, _lodash.get)(hit, '_source.cluster_state.status');\n          cluster.state_uuid = (0, _lodash.get)(hit, '_source.cluster_state.state_uuid');\n          cluster.state_timestamp = (0, _lodash.get)(hit, '_source.timestamp');\n          cluster.nodes = (0, _lodash.indexBy)(nodes, config.get('marvel.node_resolver'));\n        }\n      });\n      return clusters;\n    });\n  };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfY2x1c3RlcnNfaGVhbHRoLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7c0JBQW1DLFFBQVE7O3NCQUN4QixRQUFROzs7O0FBRTNCLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBVSxHQUFHLEVBQUU7QUFDOUIsTUFBTSxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQztBQUMxQixNQUFNLGVBQWUsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUM7QUFDckUsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQy9CLFNBQU8sVUFBVSxRQUFRLEVBQUU7QUFDekIsUUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDO0FBQ2xCLFlBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUs7QUFDNUIsWUFBTSxDQUFDLElBQUksQ0FBQztBQUNWLGFBQUssRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLEdBQUcsR0FBRztBQUM5QyxZQUFJLEVBQUUsZUFBZTtPQUN0QixDQUFDLENBQUM7QUFDSCxZQUFNLENBQUMsSUFBSSxDQUFDO0FBQ1YsWUFBSSxFQUFFLENBQUM7QUFDUCxZQUFJLEVBQUU7QUFDSixxQkFBVyxFQUFFLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRTtTQUMvQjtBQUNELGFBQUssRUFBRTtBQUNMLGtCQUFRLEVBQUU7QUFDUixrQkFBTSxFQUFFO0FBQ04sa0JBQUksRUFBRTtBQUNKLDhCQUFjLEVBQUUsT0FBTyxDQUFDLFlBQVk7ZUFDckM7YUFDRjtXQUNGO1NBQ0Y7T0FDRixDQUFDLENBQUM7S0FDSixDQUFDLENBQUM7QUFDSCxRQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxPQUFPLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUM3QyxRQUFNLE1BQU0sR0FBRztBQUNiLFdBQUssRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLEdBQUcsR0FBRztBQUM5QyxVQUFJLEVBQUUsZUFBZTtBQUNyQixVQUFJLEVBQUUsTUFBTTtLQUNiLENBQUM7QUFDRixXQUFPLGVBQWUsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUM3QyxJQUFJLENBQUMsVUFBQSxHQUFHLEVBQUk7QUFDWCxTQUFHLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxVQUFBLElBQUksRUFBSTtBQUM1QixZQUFNLEdBQUcsR0FBRyxpQkFBSSxJQUFJLEVBQUUsY0FBYyxDQUFDLENBQUM7QUFDdEMsWUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssS0FBSyxDQUFDLEVBQUU7QUFDOUMsY0FBTSxXQUFXLEdBQUcsaUJBQUksR0FBRyxFQUFFLHNCQUFzQixDQUFDLENBQUM7QUFDckQsY0FBTSxLQUFLLEdBQUcsaUJBQUksR0FBRyxFQUFFLDZCQUE2QixDQUFDLENBQUM7QUFDdEQsY0FBTSxPQUFPLEdBQUcsa0JBQUssUUFBUSxFQUFFLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxDQUFDLENBQUM7QUFDOUQsaUJBQU8sQ0FBQyxNQUFNLEdBQUcsaUJBQUksR0FBRyxFQUFFLDhCQUE4QixDQUFDLENBQUM7QUFDMUQsaUJBQU8sQ0FBQyxVQUFVLEdBQUcsaUJBQUksR0FBRyxFQUFFLGtDQUFrQyxDQUFDLENBQUM7QUFDbEUsaUJBQU8sQ0FBQyxlQUFlLEdBQUcsaUJBQUksR0FBRyxFQUFFLG1CQUFtQixDQUFDLENBQUM7QUFDeEQsaUJBQU8sQ0FBQyxLQUFLLEdBQUcscUJBQVEsS0FBSyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxDQUFDO1NBQ3BFO09BQ0YsQ0FBQyxDQUFDO0FBQ0gsYUFBTyxRQUFRLENBQUM7S0FDakIsQ0FBQyxDQUFDO0dBQ0osQ0FBQztDQUNILENBQUMiLCJmaWxlIjoiL2hvbWUvZWxhc3RpY3NlYXJjaC0yLjQuMS9iaW4va2liYW5hLTQuNi4xLWxpbnV4LXg4Nl82NC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9jbHVzdGVyc19oZWFsdGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXQsIGZpbmQsIGluZGV4QnkgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChyZXEpIHtcbiAgY29uc3Qgc2VydmVyID0gcmVxLnNlcnZlcjtcbiAgY29uc3QgY2FsbFdpdGhSZXF1ZXN0ID0gc2VydmVyLnBsdWdpbnMuZWxhc3RpY3NlYXJjaC5jYWxsV2l0aFJlcXVlc3Q7XG4gIGNvbnN0IGNvbmZpZyA9IHNlcnZlci5jb25maWcoKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChjbHVzdGVycykge1xuICAgIGNvbnN0IGJvZGllcyA9IFtdO1xuICAgIGNsdXN0ZXJzLmZvckVhY2goKGNsdXN0ZXIpID0+IHtcbiAgICAgIGJvZGllcy5wdXNoKHtcbiAgICAgICAgaW5kZXg6IGNvbmZpZy5nZXQoJ21hcnZlbC5pbmRleF9wcmVmaXgnKSArICcqJyxcbiAgICAgICAgdHlwZTogJ2NsdXN0ZXJfc3RhdGUnXG4gICAgICB9KTtcbiAgICAgIGJvZGllcy5wdXNoKHtcbiAgICAgICAgc2l6ZTogMSxcbiAgICAgICAgc29ydDoge1xuICAgICAgICAgICd0aW1lc3RhbXAnOiB7IG9yZGVyOiAnZGVzYycgfVxuICAgICAgICB9LFxuICAgICAgICBxdWVyeToge1xuICAgICAgICAgIGZpbHRlcmVkOiB7XG4gICAgICAgICAgICBmaWx0ZXI6IHtcbiAgICAgICAgICAgICAgdGVybToge1xuICAgICAgICAgICAgICAgICdjbHVzdGVyX3V1aWQnOiBjbHVzdGVyLmNsdXN0ZXJfdXVpZFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBpZiAoIWJvZGllcy5sZW5ndGgpIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICBpbmRleDogY29uZmlnLmdldCgnbWFydmVsLmluZGV4X3ByZWZpeCcpICsgJyonLFxuICAgICAgdHlwZTogJ2NsdXN0ZXJfc3RhdGUnLFxuICAgICAgYm9keTogYm9kaWVzXG4gICAgfTtcbiAgICByZXR1cm4gY2FsbFdpdGhSZXF1ZXN0KHJlcSwgJ21zZWFyY2gnLCBwYXJhbXMpXG4gICAgLnRoZW4ocmVzID0+IHtcbiAgICAgIHJlcy5yZXNwb25zZXMuZm9yRWFjaChyZXNwID0+IHtcbiAgICAgICAgY29uc3QgaGl0ID0gZ2V0KHJlc3AsICdoaXRzLmhpdHNbMF0nKTtcbiAgICAgICAgaWYgKHJlc3AgJiYgcmVzcC5oaXRzICYmIHJlc3AuaGl0cy50b3RhbCAhPT0gMCkge1xuICAgICAgICAgIGNvbnN0IGNsdXN0ZXJOYW1lID0gZ2V0KGhpdCwgJ19zb3VyY2UuY2x1c3Rlcl91dWlkJyk7XG4gICAgICAgICAgY29uc3Qgbm9kZXMgPSBnZXQoaGl0LCAnX3NvdXJjZS5jbHVzdGVyX3N0YXRlLm5vZGVzJyk7XG4gICAgICAgICAgY29uc3QgY2x1c3RlciA9IGZpbmQoY2x1c3RlcnMsIHsgY2x1c3Rlcl91dWlkOiBjbHVzdGVyTmFtZSB9KTtcbiAgICAgICAgICBjbHVzdGVyLnN0YXR1cyA9IGdldChoaXQsICdfc291cmNlLmNsdXN0ZXJfc3RhdGUuc3RhdHVzJyk7XG4gICAgICAgICAgY2x1c3Rlci5zdGF0ZV91dWlkID0gZ2V0KGhpdCwgJ19zb3VyY2UuY2x1c3Rlcl9zdGF0ZS5zdGF0ZV91dWlkJyk7XG4gICAgICAgICAgY2x1c3Rlci5zdGF0ZV90aW1lc3RhbXAgPSBnZXQoaGl0LCAnX3NvdXJjZS50aW1lc3RhbXAnKTtcbiAgICAgICAgICBjbHVzdGVyLm5vZGVzID0gaW5kZXhCeShub2RlcywgY29uZmlnLmdldCgnbWFydmVsLm5vZGVfcmVzb2x2ZXInKSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGNsdXN0ZXJzO1xuICAgIH0pO1xuICB9O1xufTtcblxuXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_clusters_health.js"
      ],
      "names": [],
      "mappings": ";;;;sBAAmC,QAAQ;;sBACxB,QAAQ;;;;AAE3B,MAAM,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE;AAC9B,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AAC1B,MAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACrE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AAC/B,SAAO,UAAU,QAAQ,EAAE;AACzB,QAAM,MAAM,GAAG,EAAE,CAAC;AAClB,YAAQ,CAAC,OAAO,CAAC,UAAC,OAAO,EAAK;AAC5B,YAAM,CAAC,IAAI,CAAC;AACV,aAAK,EAAE,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG;AAC9C,YAAI,EAAE,eAAe;OACtB,CAAC,CAAC;AACH,YAAM,CAAC,IAAI,CAAC;AACV,YAAI,EAAE,CAAC;AACP,YAAI,EAAE;AACJ,qBAAW,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;SAC/B;AACD,aAAK,EAAE;AACL,kBAAQ,EAAE;AACR,kBAAM,EAAE;AACN,kBAAI,EAAE;AACJ,8BAAc,EAAE,OAAO,CAAC,YAAY;eACrC;aACF;WACF;SACF;OACF,CAAC,CAAC;KACJ,CAAC,CAAC;AACH,QAAI,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;AAC7C,QAAM,MAAM,GAAG;AACb,WAAK,EAAE,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG;AAC9C,UAAI,EAAE,eAAe;AACrB,UAAI,EAAE,MAAM;KACb,CAAC;AACF,WAAO,eAAe,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,CAAC,CAC7C,IAAI,CAAC,UAAA,GAAG,EAAI;AACX,SAAG,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AAC5B,YAAM,GAAG,GAAG,iBAAI,IAAI,EAAE,cAAc,CAAC,CAAC;AACtC,YAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;AAC9C,cAAM,WAAW,GAAG,iBAAI,GAAG,EAAE,sBAAsB,CAAC,CAAC;AACrD,cAAM,KAAK,GAAG,iBAAI,GAAG,EAAE,6BAA6B,CAAC,CAAC;AACtD,cAAM,OAAO,GAAG,kBAAK,QAAQ,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE,CAAC,CAAC;AAC9D,iBAAO,CAAC,MAAM,GAAG,iBAAI,GAAG,EAAE,8BAA8B,CAAC,CAAC;AAC1D,iBAAO,CAAC,UAAU,GAAG,iBAAI,GAAG,EAAE,kCAAkC,CAAC,CAAC;AAClE,iBAAO,CAAC,eAAe,GAAG,iBAAI,GAAG,EAAE,mBAAmB,CAAC,CAAC;AACxD,iBAAO,CAAC,KAAK,GAAG,qBAAQ,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC;SACpE;OACF,CAAC,CAAC;AACH,aAAO,QAAQ,CAAC;KACjB,CAAC,CAAC;GACJ,CAAC;CACH,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_clusters_health.js",
      "sourcesContent": [
        "import { get, find, indexBy } from 'lodash';\nimport moment from 'moment';\n\nmodule.exports = function (req) {\n  const server = req.server;\n  const callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  const config = server.config();\n  return function (clusters) {\n    const bodies = [];\n    clusters.forEach((cluster) => {\n      bodies.push({\n        index: config.get('marvel.index_prefix') + '*',\n        type: 'cluster_state'\n      });\n      bodies.push({\n        size: 1,\n        sort: {\n          'timestamp': { order: 'desc' }\n        },\n        query: {\n          filtered: {\n            filter: {\n              term: {\n                'cluster_uuid': cluster.cluster_uuid\n              }\n            }\n          }\n        }\n      });\n    });\n    if (!bodies.length) return Promise.resolve();\n    const params = {\n      index: config.get('marvel.index_prefix') + '*',\n      type: 'cluster_state',\n      body: bodies\n    };\n    return callWithRequest(req, 'msearch', params)\n    .then(res => {\n      res.responses.forEach(resp => {\n        const hit = get(resp, 'hits.hits[0]');\n        if (resp && resp.hits && resp.hits.total !== 0) {\n          const clusterName = get(hit, '_source.cluster_uuid');\n          const nodes = get(hit, '_source.cluster_state.nodes');\n          const cluster = find(clusters, { cluster_uuid: clusterName });\n          cluster.status = get(hit, '_source.cluster_state.status');\n          cluster.state_uuid = get(hit, '_source.cluster_state.state_uuid');\n          cluster.state_timestamp = get(hit, '_source.timestamp');\n          cluster.nodes = indexBy(nodes, config.get('marvel.node_resolver'));\n        }\n      });\n      return clusters;\n    });\n  };\n};\n\n\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/calculate_indices.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar Promise = require('bluebird');\nvar moment = require('moment');\nmodule.exports = function (req, start, end) {\n  var server = req.server;\n  var config = server.config();\n  var pattern = config.get('marvel.index_prefix') + '*';\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var options = {\n    index: pattern,\n    level: 'indices',\n    ignoreUnavailable: true,\n    body: {\n      fields: ['timestamp'],\n      index_constraints: {\n        timestamp: {\n          max_value: { gte: moment.utc(start).toISOString() },\n          min_value: { lte: moment.utc(end).toISOString() }\n        }\n      }\n    }\n  };\n  return callWithRequest(req, 'fieldStats', options).then(function (resp) {\n    var indices = _.map(resp.indices, function (info, index) {\n      return index;\n    });\n    if (indices.length === 0) return ['.kibana-devnull'];\n    return indices.filter(function (index) {\n      return index !== config.get('marvel.index');\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9jYWxjdWxhdGVfaW5kaWNlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxQixJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDbEMsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQy9CLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBVSxHQUFHLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRTtBQUMxQyxNQUFJLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO0FBQ3hCLE1BQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUM3QixNQUFJLE9BQU8sR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLEdBQUcsR0FBRyxDQUFDO0FBQ3RELE1BQUksZUFBZSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQztBQUNuRSxNQUFJLE9BQU8sR0FBRztBQUNaLFNBQUssRUFBRSxPQUFPO0FBQ2QsU0FBSyxFQUFFLFNBQVM7QUFDaEIscUJBQWlCLEVBQUUsSUFBSTtBQUN2QixRQUFJLEVBQUU7QUFDSixZQUFNLEVBQUUsQ0FBQyxXQUFXLENBQUM7QUFDckIsdUJBQWlCLEVBQUU7QUFDakIsaUJBQVMsRUFBRTtBQUNULG1CQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBRTtBQUNuRCxtQkFBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUU7U0FDbEQ7T0FDRjtLQUNGO0dBQ0YsQ0FBQztBQUNGLFNBQU8sZUFBZSxDQUFDLEdBQUcsRUFBRSxZQUFZLEVBQUUsT0FBTyxDQUFDLENBQy9DLElBQUksQ0FBQyxVQUFVLElBQUksRUFBRTtBQUNwQixRQUFJLE9BQU8sR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsVUFBVSxJQUFJLEVBQUUsS0FBSyxFQUFFO0FBQ3ZELGFBQU8sS0FBSyxDQUFDO0tBQ2QsQ0FBQyxDQUFDO0FBQ0gsUUFBSSxPQUFPLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRSxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQUNyRCxXQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsVUFBQyxLQUFLO2FBQUssS0FBSyxLQUFLLE1BQU0sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDO0tBQUEsQ0FBQyxDQUFDO0dBQ3hFLENBQUMsQ0FBQztDQUNOLENBQUMiLCJmaWxlIjoiL2hvbWUvZWxhc3RpY3NlYXJjaC0yLjQuMS9iaW4va2liYW5hLTQuNi4xLWxpbnV4LXg4Nl82NC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2NhbGN1bGF0ZV9pbmRpY2VzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcbnZhciBQcm9taXNlID0gcmVxdWlyZSgnYmx1ZWJpcmQnKTtcbnZhciBtb21lbnQgPSByZXF1aXJlKCdtb21lbnQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHJlcSwgc3RhcnQsIGVuZCkge1xuICB2YXIgc2VydmVyID0gcmVxLnNlcnZlcjtcbiAgdmFyIGNvbmZpZyA9IHNlcnZlci5jb25maWcoKTtcbiAgdmFyIHBhdHRlcm4gPSBjb25maWcuZ2V0KCdtYXJ2ZWwuaW5kZXhfcHJlZml4JykgKyAnKic7XG4gIHZhciBjYWxsV2l0aFJlcXVlc3QgPSBzZXJ2ZXIucGx1Z2lucy5lbGFzdGljc2VhcmNoLmNhbGxXaXRoUmVxdWVzdDtcbiAgdmFyIG9wdGlvbnMgPSB7XG4gICAgaW5kZXg6IHBhdHRlcm4sXG4gICAgbGV2ZWw6ICdpbmRpY2VzJyxcbiAgICBpZ25vcmVVbmF2YWlsYWJsZTogdHJ1ZSxcbiAgICBib2R5OiB7XG4gICAgICBmaWVsZHM6IFsndGltZXN0YW1wJ10sXG4gICAgICBpbmRleF9jb25zdHJhaW50czoge1xuICAgICAgICB0aW1lc3RhbXA6IHtcbiAgICAgICAgICBtYXhfdmFsdWU6IHsgZ3RlOiBtb21lbnQudXRjKHN0YXJ0KS50b0lTT1N0cmluZygpIH0sXG4gICAgICAgICAgbWluX3ZhbHVlOiB7IGx0ZTogbW9tZW50LnV0YyhlbmQpLnRvSVNPU3RyaW5nKCkgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xuICByZXR1cm4gY2FsbFdpdGhSZXF1ZXN0KHJlcSwgJ2ZpZWxkU3RhdHMnLCBvcHRpb25zKVxuICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwKSB7XG4gICAgICB2YXIgaW5kaWNlcyA9IF8ubWFwKHJlc3AuaW5kaWNlcywgZnVuY3Rpb24gKGluZm8sIGluZGV4KSB7XG4gICAgICAgIHJldHVybiBpbmRleDtcbiAgICAgIH0pO1xuICAgICAgaWYgKGluZGljZXMubGVuZ3RoID09PSAwKSByZXR1cm4gWycua2liYW5hLWRldm51bGwnXTtcbiAgICAgIHJldHVybiBpbmRpY2VzLmZpbHRlcigoaW5kZXgpID0+IGluZGV4ICE9PSBjb25maWcuZ2V0KCdtYXJ2ZWwuaW5kZXgnKSk7XG4gICAgfSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/calculate_indices.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,MAAM,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;AAC1C,MAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACxB,MAAI,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AAC7B,MAAI,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG,CAAC;AACtD,MAAI,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACnE,MAAI,OAAO,GAAG;AACZ,SAAK,EAAE,OAAO;AACd,SAAK,EAAE,SAAS;AAChB,qBAAiB,EAAE,IAAI;AACvB,QAAI,EAAE;AACJ,YAAM,EAAE,CAAC,WAAW,CAAC;AACrB,uBAAiB,EAAE;AACjB,iBAAS,EAAE;AACT,mBAAS,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,EAAE;AACnD,mBAAS,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE;SAClD;OACF;KACF;GACF,CAAC;AACF,SAAO,eAAe,CAAC,GAAG,EAAE,YAAY,EAAE,OAAO,CAAC,CAC/C,IAAI,CAAC,UAAU,IAAI,EAAE;AACpB,QAAI,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,KAAK,EAAE;AACvD,aAAO,KAAK,CAAC;KACd,CAAC,CAAC;AACH,QAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACrD,WAAO,OAAO,CAAC,MAAM,CAAC,UAAC,KAAK;aAAK,KAAK,KAAK,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC;KAAA,CAAC,CAAC;GACxE,CAAC,CAAC;CACN,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/calculate_indices.js",
      "sourcesContent": [
        "var _ = require('lodash');\nvar Promise = require('bluebird');\nvar moment = require('moment');\nmodule.exports = function (req, start, end) {\n  var server = req.server;\n  var config = server.config();\n  var pattern = config.get('marvel.index_prefix') + '*';\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var options = {\n    index: pattern,\n    level: 'indices',\n    ignoreUnavailable: true,\n    body: {\n      fields: ['timestamp'],\n      index_constraints: {\n        timestamp: {\n          max_value: { gte: moment.utc(start).toISOString() },\n          min_value: { lte: moment.utc(end).toISOString() }\n        }\n      }\n    }\n  };\n  return callWithRequest(req, 'fieldStats', options)\n    .then(function (resp) {\n      var indices = _.map(resp.indices, function (info, index) {\n        return index;\n      });\n      if (indices.length === 0) return ['.kibana-devnull'];\n      return indices.filter((index) => index !== config.get('marvel.index'));\n    });\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_last_state.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query.js');\n\nmodule.exports = function (req, indices) {\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n  var config = req.server.config();\n  var resolver = config.get('marvel.node_resolver');\n\n  var params = {\n    index: indices,\n    type: 'cluster_state',\n    ignore: [404],\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({ end: end, clusterUuid: clusterUuid })\n    }\n  };\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var total = _.get(resp, 'hits.total', 0);\n    if (!total) return;\n    var lastState = _.get(resp, 'hits.hits[0]._source');\n    var nodes = _.get(lastState, 'cluster_state.nodes');\n    if (nodes) {\n      // re-key the nodes objects to use resolver\n      lastState.cluster_state.nodes = _.indexBy(nodes, function (node) {\n        return node[resolver];\n      });\n    }\n    return lastState;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfbGFzdF9zdGF0ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM1QixJQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQzs7QUFFakQsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUs7QUFDakMsTUFBTSxlQUFlLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQztBQUN6RSxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7QUFDeEMsTUFBTSxHQUFHLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO0FBQ3RDLE1BQU0sV0FBVyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDO0FBQzNDLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDbkMsTUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDOztBQUVwRCxNQUFNLE1BQU0sR0FBRztBQUNiLFNBQUssRUFBRSxPQUFPO0FBQ2QsUUFBSSxFQUFFLGVBQWU7QUFDckIsVUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDO0FBQ2IsUUFBSSxFQUFFO0FBQ0osVUFBSSxFQUFFLENBQUM7QUFDUCxVQUFJLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUU7QUFDdEMsV0FBSyxFQUFFLFdBQVcsQ0FBQyxFQUFFLEdBQUcsRUFBSCxHQUFHLEVBQUUsV0FBVyxFQUFYLFdBQVcsRUFBRSxDQUFDO0tBQ3pDO0dBQ0YsQ0FBQzs7QUFFRixTQUFPLGVBQWUsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUM1QyxJQUFJLENBQUMsVUFBQSxJQUFJLEVBQUk7QUFDWixRQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDM0MsUUFBSSxDQUFDLEtBQUssRUFBRSxPQUFPO0FBQ25CLFFBQU0sU0FBUyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLHNCQUFzQixDQUFDLENBQUM7QUFDdEQsUUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUscUJBQXFCLENBQUMsQ0FBQztBQUN0RCxRQUFJLEtBQUssRUFBRTs7QUFFVCxlQUFTLENBQUMsYUFBYSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxVQUFBLElBQUk7ZUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDO09BQUEsQ0FBQyxDQUFDO0tBQzFFO0FBQ0QsV0FBTyxTQUFTLENBQUM7R0FDbEIsQ0FBQyxDQUFDO0NBQ0osQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvZ2V0X2xhc3Rfc3RhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5jb25zdCBjcmVhdGVRdWVyeSA9IHJlcXVpcmUoJy4vY3JlYXRlX3F1ZXJ5LmpzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlcSwgaW5kaWNlcykgPT4ge1xuICBjb25zdCBjYWxsV2l0aFJlcXVlc3QgPSByZXEuc2VydmVyLnBsdWdpbnMuZWxhc3RpY3NlYXJjaC5jYWxsV2l0aFJlcXVlc3Q7XG4gIGNvbnN0IHN0YXJ0ID0gcmVxLnBheWxvYWQudGltZVJhbmdlLm1pbjtcbiAgY29uc3QgZW5kID0gcmVxLnBheWxvYWQudGltZVJhbmdlLm1heDtcbiAgY29uc3QgY2x1c3RlclV1aWQgPSByZXEucGFyYW1zLmNsdXN0ZXJVdWlkO1xuICBjb25zdCBjb25maWcgPSByZXEuc2VydmVyLmNvbmZpZygpO1xuICBjb25zdCByZXNvbHZlciA9IGNvbmZpZy5nZXQoJ21hcnZlbC5ub2RlX3Jlc29sdmVyJyk7XG5cbiAgY29uc3QgcGFyYW1zID0ge1xuICAgIGluZGV4OiBpbmRpY2VzLFxuICAgIHR5cGU6ICdjbHVzdGVyX3N0YXRlJyxcbiAgICBpZ25vcmU6IFs0MDRdLFxuICAgIGJvZHk6IHtcbiAgICAgIHNpemU6IDEsXG4gICAgICBzb3J0OiB7IHRpbWVzdGFtcDogeyBvcmRlcjogJ2Rlc2MnIH0gfSxcbiAgICAgIHF1ZXJ5OiBjcmVhdGVRdWVyeSh7IGVuZCwgY2x1c3RlclV1aWQgfSlcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGNhbGxXaXRoUmVxdWVzdChyZXEsICdzZWFyY2gnLCBwYXJhbXMpXG4gIC50aGVuKHJlc3AgPT4ge1xuICAgIGNvbnN0IHRvdGFsID0gXy5nZXQocmVzcCwgJ2hpdHMudG90YWwnLCAwKTtcbiAgICBpZiAoIXRvdGFsKSByZXR1cm47XG4gICAgY29uc3QgbGFzdFN0YXRlID0gXy5nZXQocmVzcCwgJ2hpdHMuaGl0c1swXS5fc291cmNlJyk7XG4gICAgY29uc3Qgbm9kZXMgPSBfLmdldChsYXN0U3RhdGUsICdjbHVzdGVyX3N0YXRlLm5vZGVzJyk7XG4gICAgaWYgKG5vZGVzKSB7XG4gICAgICAvLyByZS1rZXkgdGhlIG5vZGVzIG9iamVjdHMgdG8gdXNlIHJlc29sdmVyXG4gICAgICBsYXN0U3RhdGUuY2x1c3Rlcl9zdGF0ZS5ub2RlcyA9IF8uaW5kZXhCeShub2Rlcywgbm9kZSA9PiBub2RlW3Jlc29sdmVyXSk7XG4gICAgfVxuICAgIHJldHVybiBsYXN0U3RhdGU7XG4gIH0pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_last_state.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;;AAEjD,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAK;AACjC,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACzE,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACtC,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;AAC3C,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACnC,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;;AAEpD,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,QAAI,EAAE,eAAe;AACrB,UAAM,EAAE,CAAC,GAAG,CAAC;AACb,QAAI,EAAE;AACJ,UAAI,EAAE,CAAC;AACP,UAAI,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACtC,WAAK,EAAE,WAAW,CAAC,EAAE,GAAG,EAAH,GAAG,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC;KACzC;GACF,CAAC;;AAEF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAA,IAAI,EAAI;AACZ,QAAM,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;AAC3C,QAAI,CAAC,KAAK,EAAE,OAAO;AACnB,QAAM,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;AACtD,QAAM,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC;AACtD,QAAI,KAAK,EAAE;;AAET,eAAS,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,UAAA,IAAI;eAAI,IAAI,CAAC,QAAQ,CAAC;OAAA,CAAC,CAAC;KAC1E;AACD,WAAO,SAAS,CAAC;GAClB,CAAC,CAAC;CACJ,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_last_state.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query.js');\n\nmodule.exports = (req, indices) => {\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n  const config = req.server.config();\n  const resolver = config.get('marvel.node_resolver');\n\n  const params = {\n    index: indices,\n    type: 'cluster_state',\n    ignore: [404],\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({ end, clusterUuid })\n    }\n  };\n\n  return callWithRequest(req, 'search', params)\n  .then(resp => {\n    const total = _.get(resp, 'hits.total', 0);\n    if (!total) return;\n    const lastState = _.get(resp, 'hits.hits[0]._source');\n    const nodes = _.get(lastState, 'cluster_state.nodes');\n    if (nodes) {\n      // re-key the nodes objects to use resolver\n      lastState.cluster_state.nodes = _.indexBy(nodes, node => node[resolver]);\n    }\n    return lastState;\n  });\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_cluster_status.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query.js');\nvar moment = require('moment');\n\nmodule.exports = function (req, indices, lastState) {\n  // Alias callWithRequest so we don't have to use this long ugly string\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n\n  // Get the params from the POST body for the request\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n\n  // Build up the Elasticsearch request\n  var params = {\n    index: indices,\n    ignore: [404],\n    type: 'cluster_stats',\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({ end: end, clusterUuid: clusterUuid })\n    }\n  };\n\n  // Send the request to Elasticsearch with authentication headers. This will handle\n  // 401 from the Sheild plugin and send them back to the browser\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var clusterStatus = { status: _.get(lastState, 'cluster_state.status') };\n    var total = _.get(resp, 'hits.total', 0);\n\n    if (total) {\n      (function () {\n        var source = _.get(resp, 'hits.hits[0]._source');\n        var get = function get(path) {\n          return _.get(source, path);\n        };\n        clusterStatus.nodesCount = get('cluster_stats.nodes.count.total');\n        clusterStatus.indicesCount = get('cluster_stats.indices.count');\n        clusterStatus.totalShards = get('cluster_stats.indices.shards.total');\n        clusterStatus.documentCount = get('cluster_stats.indices.docs.count');\n        clusterStatus.dataSize = get('cluster_stats.indices.store.size_in_bytes');\n        clusterStatus.upTime = get('cluster_stats.nodes.jvm.max_uptime_in_millis');\n        clusterStatus.version = get('cluster_stats.nodes.versions');\n        clusterStatus.memUsed = get('cluster_stats.nodes.jvm.mem.heap_used_in_bytes');\n        clusterStatus.memMax = get('cluster_stats.nodes.jvm.mem.heap_max_in_bytes');\n      })();\n    }\n\n    clusterStatus = _.defaults(clusterStatus, {\n      status: 'unknown',\n      nodesCount: 0,\n      indicesCount: 0,\n      totalShards: 0,\n      documentCount: 0,\n      dataSize: 0,\n      upTime: 0,\n      version: null,\n      memUsed: 0,\n      memMax: 0\n    });\n\n    return clusterStatus;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfY2x1c3Rlcl9zdGF0dXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDNUIsSUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFDakQsSUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDOztBQUVqQyxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUs7O0FBRTVDLE1BQU0sZUFBZSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUM7OztBQUd6RSxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7QUFDeEMsTUFBTSxHQUFHLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO0FBQ3RDLE1BQU0sV0FBVyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDOzs7QUFHM0MsTUFBTSxNQUFNLEdBQUc7QUFDYixTQUFLLEVBQUUsT0FBTztBQUNkLFVBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQztBQUNiLFFBQUksRUFBRSxlQUFlO0FBQ3JCLFFBQUksRUFBRTtBQUNKLFVBQUksRUFBRSxDQUFDO0FBQ1AsVUFBSSxFQUFFLEVBQUUsU0FBUyxFQUFFLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxFQUFFO0FBQ3RDLFdBQUssRUFBRSxXQUFXLENBQUMsRUFBRSxHQUFHLEVBQUgsR0FBRyxFQUFFLFdBQVcsRUFBWCxXQUFXLEVBQUUsQ0FBQztLQUN6QztHQUNGLENBQUM7Ozs7QUFJRixTQUFPLGVBQWUsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUM1QyxJQUFJLENBQUMsVUFBQyxJQUFJLEVBQUs7QUFDZCxRQUFJLGFBQWEsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxzQkFBc0IsQ0FBQyxFQUFFLENBQUM7QUFDekUsUUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsWUFBWSxFQUFFLENBQUMsQ0FBQyxDQUFDOztBQUUzQyxRQUFJLEtBQUssRUFBRTs7QUFDVCxZQUFNLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO0FBQ25ELFlBQU0sR0FBRyxHQUFHLFNBQU4sR0FBRyxDQUFJLElBQUk7aUJBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDO1NBQUEsQ0FBQztBQUMxQyxxQkFBYSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUMsaUNBQWlDLENBQUMsQ0FBQztBQUNsRSxxQkFBYSxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUMsNkJBQTZCLENBQUMsQ0FBQztBQUNoRSxxQkFBYSxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUMsb0NBQW9DLENBQUMsQ0FBQztBQUN0RSxxQkFBYSxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUMsa0NBQWtDLENBQUMsQ0FBQztBQUN0RSxxQkFBYSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsMkNBQTJDLENBQUMsQ0FBQztBQUMxRSxxQkFBYSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsOENBQThDLENBQUMsQ0FBQztBQUMzRSxxQkFBYSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUMsOEJBQThCLENBQUMsQ0FBQztBQUM1RCxxQkFBYSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUMsZ0RBQWdELENBQUMsQ0FBQztBQUM5RSxxQkFBYSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsK0NBQStDLENBQUMsQ0FBQzs7S0FDN0U7O0FBRUQsaUJBQWEsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRTtBQUN4QyxZQUFNLEVBQUUsU0FBUztBQUNqQixnQkFBVSxFQUFFLENBQUM7QUFDYixrQkFBWSxFQUFFLENBQUM7QUFDZixpQkFBVyxFQUFFLENBQUM7QUFDZCxtQkFBYSxFQUFFLENBQUM7QUFDaEIsY0FBUSxFQUFFLENBQUM7QUFDWCxZQUFNLEVBQUUsQ0FBQztBQUNULGFBQU8sRUFBRSxJQUFJO0FBQ2IsYUFBTyxFQUFFLENBQUM7QUFDVixZQUFNLEVBQUUsQ0FBQztLQUNWLENBQUMsQ0FBQzs7QUFFSCxXQUFPLGFBQWEsQ0FBQztHQUN0QixDQUFDLENBQUM7Q0FDSixDQUFDIiwiZmlsZSI6Ii9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfY2x1c3Rlcl9zdGF0dXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5jb25zdCBjcmVhdGVRdWVyeSA9IHJlcXVpcmUoJy4vY3JlYXRlX3F1ZXJ5LmpzJyk7XG5jb25zdCBtb21lbnQgPSByZXF1aXJlKCdtb21lbnQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAocmVxLCBpbmRpY2VzLCBsYXN0U3RhdGUpID0+IHtcbiAgLy8gQWxpYXMgY2FsbFdpdGhSZXF1ZXN0IHNvIHdlIGRvbid0IGhhdmUgdG8gdXNlIHRoaXMgbG9uZyB1Z2x5IHN0cmluZ1xuICBjb25zdCBjYWxsV2l0aFJlcXVlc3QgPSByZXEuc2VydmVyLnBsdWdpbnMuZWxhc3RpY3NlYXJjaC5jYWxsV2l0aFJlcXVlc3Q7XG5cbiAgLy8gR2V0IHRoZSBwYXJhbXMgZnJvbSB0aGUgUE9TVCBib2R5IGZvciB0aGUgcmVxdWVzdFxuICBjb25zdCBzdGFydCA9IHJlcS5wYXlsb2FkLnRpbWVSYW5nZS5taW47XG4gIGNvbnN0IGVuZCA9IHJlcS5wYXlsb2FkLnRpbWVSYW5nZS5tYXg7XG4gIGNvbnN0IGNsdXN0ZXJVdWlkID0gcmVxLnBhcmFtcy5jbHVzdGVyVXVpZDtcblxuICAvLyBCdWlsZCB1cCB0aGUgRWxhc3RpY3NlYXJjaCByZXF1ZXN0XG4gIGNvbnN0IHBhcmFtcyA9IHtcbiAgICBpbmRleDogaW5kaWNlcyxcbiAgICBpZ25vcmU6IFs0MDRdLFxuICAgIHR5cGU6ICdjbHVzdGVyX3N0YXRzJyxcbiAgICBib2R5OiB7XG4gICAgICBzaXplOiAxLFxuICAgICAgc29ydDogeyB0aW1lc3RhbXA6IHsgb3JkZXI6ICdkZXNjJyB9IH0sXG4gICAgICBxdWVyeTogY3JlYXRlUXVlcnkoeyBlbmQsIGNsdXN0ZXJVdWlkIH0pXG4gICAgfVxuICB9O1xuXG4gIC8vIFNlbmQgdGhlIHJlcXVlc3QgdG8gRWxhc3RpY3NlYXJjaCB3aXRoIGF1dGhlbnRpY2F0aW9uIGhlYWRlcnMuIFRoaXMgd2lsbCBoYW5kbGVcbiAgLy8gNDAxIGZyb20gdGhlIFNoZWlsZCBwbHVnaW4gYW5kIHNlbmQgdGhlbSBiYWNrIHRvIHRoZSBicm93c2VyXG4gIHJldHVybiBjYWxsV2l0aFJlcXVlc3QocmVxLCAnc2VhcmNoJywgcGFyYW1zKVxuICAudGhlbigocmVzcCkgPT4ge1xuICAgIGxldCBjbHVzdGVyU3RhdHVzID0geyBzdGF0dXM6IF8uZ2V0KGxhc3RTdGF0ZSwgJ2NsdXN0ZXJfc3RhdGUuc3RhdHVzJykgfTtcbiAgICBjb25zdCB0b3RhbCA9IF8uZ2V0KHJlc3AsICdoaXRzLnRvdGFsJywgMCk7XG5cbiAgICBpZiAodG90YWwpIHtcbiAgICAgIGNvbnN0IHNvdXJjZSA9IF8uZ2V0KHJlc3AsICdoaXRzLmhpdHNbMF0uX3NvdXJjZScpO1xuICAgICAgY29uc3QgZ2V0ID0gKHBhdGgpID0+IF8uZ2V0KHNvdXJjZSwgcGF0aCk7XG4gICAgICBjbHVzdGVyU3RhdHVzLm5vZGVzQ291bnQgPSBnZXQoJ2NsdXN0ZXJfc3RhdHMubm9kZXMuY291bnQudG90YWwnKTtcbiAgICAgIGNsdXN0ZXJTdGF0dXMuaW5kaWNlc0NvdW50ID0gZ2V0KCdjbHVzdGVyX3N0YXRzLmluZGljZXMuY291bnQnKTtcbiAgICAgIGNsdXN0ZXJTdGF0dXMudG90YWxTaGFyZHMgPSBnZXQoJ2NsdXN0ZXJfc3RhdHMuaW5kaWNlcy5zaGFyZHMudG90YWwnKTtcbiAgICAgIGNsdXN0ZXJTdGF0dXMuZG9jdW1lbnRDb3VudCA9IGdldCgnY2x1c3Rlcl9zdGF0cy5pbmRpY2VzLmRvY3MuY291bnQnKTtcbiAgICAgIGNsdXN0ZXJTdGF0dXMuZGF0YVNpemUgPSBnZXQoJ2NsdXN0ZXJfc3RhdHMuaW5kaWNlcy5zdG9yZS5zaXplX2luX2J5dGVzJyk7XG4gICAgICBjbHVzdGVyU3RhdHVzLnVwVGltZSA9IGdldCgnY2x1c3Rlcl9zdGF0cy5ub2Rlcy5qdm0ubWF4X3VwdGltZV9pbl9taWxsaXMnKTtcbiAgICAgIGNsdXN0ZXJTdGF0dXMudmVyc2lvbiA9IGdldCgnY2x1c3Rlcl9zdGF0cy5ub2Rlcy52ZXJzaW9ucycpO1xuICAgICAgY2x1c3RlclN0YXR1cy5tZW1Vc2VkID0gZ2V0KCdjbHVzdGVyX3N0YXRzLm5vZGVzLmp2bS5tZW0uaGVhcF91c2VkX2luX2J5dGVzJyk7XG4gICAgICBjbHVzdGVyU3RhdHVzLm1lbU1heCA9IGdldCgnY2x1c3Rlcl9zdGF0cy5ub2Rlcy5qdm0ubWVtLmhlYXBfbWF4X2luX2J5dGVzJyk7XG4gICAgfVxuXG4gICAgY2x1c3RlclN0YXR1cyA9IF8uZGVmYXVsdHMoY2x1c3RlclN0YXR1cywge1xuICAgICAgc3RhdHVzOiAndW5rbm93bicsXG4gICAgICBub2Rlc0NvdW50OiAwLFxuICAgICAgaW5kaWNlc0NvdW50OiAwLFxuICAgICAgdG90YWxTaGFyZHM6IDAsXG4gICAgICBkb2N1bWVudENvdW50OiAwLFxuICAgICAgZGF0YVNpemU6IDAsXG4gICAgICB1cFRpbWU6IDAsXG4gICAgICB2ZXJzaW9uOiBudWxsLFxuICAgICAgbWVtVXNlZDogMCxcbiAgICAgIG1lbU1heDogMFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGNsdXN0ZXJTdGF0dXM7XG4gIH0pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_cluster_status.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACjD,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAEjC,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAE,SAAS,EAAK;;AAE5C,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;;;AAGzE,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACtC,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;;;AAG3C,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,UAAM,EAAE,CAAC,GAAG,CAAC;AACb,QAAI,EAAE,eAAe;AACrB,QAAI,EAAE;AACJ,UAAI,EAAE,CAAC;AACP,UAAI,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACtC,WAAK,EAAE,WAAW,CAAC,EAAE,GAAG,EAAH,GAAG,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC;KACzC;GACF,CAAC;;;;AAIF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,QAAI,aAAa,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,sBAAsB,CAAC,EAAE,CAAC;AACzE,QAAM,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;;AAE3C,QAAI,KAAK,EAAE;;AACT,YAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;AACnD,YAAM,GAAG,GAAG,SAAN,GAAG,CAAI,IAAI;iBAAK,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;SAAA,CAAC;AAC1C,qBAAa,CAAC,UAAU,GAAG,GAAG,CAAC,iCAAiC,CAAC,CAAC;AAClE,qBAAa,CAAC,YAAY,GAAG,GAAG,CAAC,6BAA6B,CAAC,CAAC;AAChE,qBAAa,CAAC,WAAW,GAAG,GAAG,CAAC,oCAAoC,CAAC,CAAC;AACtE,qBAAa,CAAC,aAAa,GAAG,GAAG,CAAC,kCAAkC,CAAC,CAAC;AACtE,qBAAa,CAAC,QAAQ,GAAG,GAAG,CAAC,2CAA2C,CAAC,CAAC;AAC1E,qBAAa,CAAC,MAAM,GAAG,GAAG,CAAC,8CAA8C,CAAC,CAAC;AAC3E,qBAAa,CAAC,OAAO,GAAG,GAAG,CAAC,8BAA8B,CAAC,CAAC;AAC5D,qBAAa,CAAC,OAAO,GAAG,GAAG,CAAC,gDAAgD,CAAC,CAAC;AAC9E,qBAAa,CAAC,MAAM,GAAG,GAAG,CAAC,+CAA+C,CAAC,CAAC;;KAC7E;;AAED,iBAAa,GAAG,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE;AACxC,YAAM,EAAE,SAAS;AACjB,gBAAU,EAAE,CAAC;AACb,kBAAY,EAAE,CAAC;AACf,iBAAW,EAAE,CAAC;AACd,mBAAa,EAAE,CAAC;AAChB,cAAQ,EAAE,CAAC;AACX,YAAM,EAAE,CAAC;AACT,aAAO,EAAE,IAAI;AACb,aAAO,EAAE,CAAC;AACV,YAAM,EAAE,CAAC;KACV,CAAC,CAAC;;AAEH,WAAO,aAAa,CAAC;GACtB,CAAC,CAAC;CACJ,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_cluster_status.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query.js');\nconst moment = require('moment');\n\nmodule.exports = (req, indices, lastState) => {\n  // Alias callWithRequest so we don't have to use this long ugly string\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n\n  // Get the params from the POST body for the request\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n\n  // Build up the Elasticsearch request\n  const params = {\n    index: indices,\n    ignore: [404],\n    type: 'cluster_stats',\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({ end, clusterUuid })\n    }\n  };\n\n  // Send the request to Elasticsearch with authentication headers. This will handle\n  // 401 from the Sheild plugin and send them back to the browser\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    let clusterStatus = { status: _.get(lastState, 'cluster_state.status') };\n    const total = _.get(resp, 'hits.total', 0);\n\n    if (total) {\n      const source = _.get(resp, 'hits.hits[0]._source');\n      const get = (path) => _.get(source, path);\n      clusterStatus.nodesCount = get('cluster_stats.nodes.count.total');\n      clusterStatus.indicesCount = get('cluster_stats.indices.count');\n      clusterStatus.totalShards = get('cluster_stats.indices.shards.total');\n      clusterStatus.documentCount = get('cluster_stats.indices.docs.count');\n      clusterStatus.dataSize = get('cluster_stats.indices.store.size_in_bytes');\n      clusterStatus.upTime = get('cluster_stats.nodes.jvm.max_uptime_in_millis');\n      clusterStatus.version = get('cluster_stats.nodes.versions');\n      clusterStatus.memUsed = get('cluster_stats.nodes.jvm.mem.heap_used_in_bytes');\n      clusterStatus.memMax = get('cluster_stats.nodes.jvm.mem.heap_max_in_bytes');\n    }\n\n    clusterStatus = _.defaults(clusterStatus, {\n      status: 'unknown',\n      nodesCount: 0,\n      indicesCount: 0,\n      totalShards: 0,\n      documentCount: 0,\n      dataSize: 0,\n      upTime: 0,\n      version: null,\n      memUsed: 0,\n      memMax: 0\n    });\n\n    return clusterStatus;\n  });\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_metrics.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar Promise = require('bluebird');\nvar getSeries = require('./get_series');\nmodule.exports = function (req, indices) {\n  var filters = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];\n\n  var metrics = req.payload.metrics || [];\n  return Promise.map(metrics, function (metricName) {\n    return getSeries(req, indices, metricName, filters);\n  }).then(function (rows) {\n    var data = {};\n    metrics.forEach(function (key, index) {\n      data[key] = rows[index];\n    });\n    return data;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfbWV0cmljcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNwQyxJQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7QUFDMUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFDLEdBQUcsRUFBRSxPQUFPLEVBQW1CO01BQWpCLE9BQU8seURBQUcsRUFBRTs7QUFDMUMsTUFBTSxPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDO0FBQzFDLFNBQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsVUFBQyxVQUFVLEVBQUs7QUFDMUMsV0FBTyxTQUFTLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxDQUFDLENBQUM7R0FDckQsQ0FBQyxDQUNELElBQUksQ0FBQyxVQUFVLElBQUksRUFBRTtBQUNwQixRQUFNLElBQUksR0FBRyxFQUFFLENBQUM7QUFDaEIsV0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEdBQUcsRUFBRSxLQUFLLEVBQUU7QUFDcEMsVUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUN6QixDQUFDLENBQUM7QUFDSCxXQUFPLElBQUksQ0FBQztHQUNiLENBQUMsQ0FBQztDQUNKLENBQUMiLCJmaWxlIjoiL2hvbWUvZWxhc3RpY3NlYXJjaC0yLjQuMS9iaW4va2liYW5hLTQuNi4xLWxpbnV4LXg4Nl82NC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9tZXRyaWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG5jb25zdCBnZXRTZXJpZXMgPSByZXF1aXJlKCcuL2dldF9zZXJpZXMnKTtcbm1vZHVsZS5leHBvcnRzID0gKHJlcSwgaW5kaWNlcywgZmlsdGVycyA9IFtdKSA9PiB7XG4gIGNvbnN0IG1ldHJpY3MgPSByZXEucGF5bG9hZC5tZXRyaWNzIHx8IFtdO1xuICByZXR1cm4gUHJvbWlzZS5tYXAobWV0cmljcywgKG1ldHJpY05hbWUpID0+IHtcbiAgICByZXR1cm4gZ2V0U2VyaWVzKHJlcSwgaW5kaWNlcywgbWV0cmljTmFtZSwgZmlsdGVycyk7XG4gIH0pXG4gIC50aGVuKGZ1bmN0aW9uIChyb3dzKSB7XG4gICAgY29uc3QgZGF0YSA9IHt9O1xuICAgIG1ldHJpY3MuZm9yRWFjaChmdW5jdGlvbiAoa2V5LCBpbmRleCkge1xuICAgICAgZGF0YVtrZXldID0gcm93c1tpbmRleF07XG4gICAgfSk7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH0pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_metrics.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACpC,IAAM,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC1C,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAmB;MAAjB,OAAO,yDAAG,EAAE;;AAC1C,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;AAC1C,SAAO,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,UAAC,UAAU,EAAK;AAC1C,WAAO,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;GACrD,CAAC,CACD,IAAI,CAAC,UAAU,IAAI,EAAE;AACpB,QAAM,IAAI,GAAG,EAAE,CAAC;AAChB,WAAO,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,KAAK,EAAE;AACpC,UAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB,CAAC,CAAC;AACH,WAAO,IAAI,CAAC;GACb,CAAC,CAAC;CACJ,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_metrics.js",
      "sourcesContent": [
        "const Promise = require('bluebird');\nconst getSeries = require('./get_series');\nmodule.exports = (req, indices, filters = []) => {\n  const metrics = req.payload.metrics || [];\n  return Promise.map(metrics, (metricName) => {\n    return getSeries(req, indices, metricName, filters);\n  })\n  .then(function (rows) {\n    const data = {};\n    metrics.forEach(function (key, index) {\n      data[key] = rows[index];\n    });\n    return data;\n  });\n};\n"
      ]
    },
    "mtime": 1466441064000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_series.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar moment = require('moment');\nvar root = require('requirefrom')('');\nvar metrics = root('public/lib/metrics');\nvar createQuery = require('./create_query.js');\nvar calcAuto = require('./calculate_auto');\nvar filterPartialBuckets = require('./filter_partial_buckets');\nvar pickMetricFields = require('./pick_metric_fields');\n\nmodule.exports = function (req, indices, metricName, filters) {\n  var config = req.server.config();\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var metric = metrics[metricName];\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n  var id = req.params.id;\n  var minIntervalSeconds = config.get('marvel.min_interval_seconds');\n\n  var params = {\n    index: indices,\n    searchType: 'count',\n    ignoreUnavailable: true,\n    ignore: [404],\n    body: {\n      query: createQuery({ start: start, end: end, clusterUuid: clusterUuid, filters: filters }),\n      aggs: {}\n    }\n  };\n  var min = moment.utc(start).valueOf();\n  var max = moment.utc(end).valueOf();\n  var duration = moment.duration(max - min, 'ms');\n  var bucketSize = Math.max(minIntervalSeconds, calcAuto.near(100, duration).asSeconds());\n  var aggs = {\n    check: {\n      date_histogram: {\n        field: 'timestamp',\n        min_doc_count: 0,\n        interval: bucketSize + 's',\n        extended_bounds: { min: min, max: max }\n      },\n      aggs: { metric: {} },\n      meta: {\n        timefilterMin: min,\n        timefilterMax: max,\n        bucketSize: bucketSize\n      }\n    }\n  };\n  aggs.check.aggs.metric[metric.metricAgg] = {\n    field: metric.field\n  };\n  if (metric.derivative) {\n    aggs.check.aggs.metric_deriv = {\n      derivative: { buckets_path: 'metric', gap_policy: 'skip' }\n    };\n  }\n  if (metric.aggs) {\n    _.assign(aggs.check.aggs, metric.aggs);\n  }\n  params.body.aggs = aggs;\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    if (!resp.aggregations) {\n      return {\n        metric: pickMetricFields(metric),\n        data: []\n      };\n    }\n    var aggCheck = resp.aggregations.check;\n    var bucketSize = aggCheck.meta.bucketSize;\n    var defaultCalculation = function defaultCalculation(bucket) {\n      var key = metric.derivative ? 'metric_deriv' : 'metric';\n      var value = bucket[key] && bucket[key].value || 0;\n      // We need to convert metric_deriv from the bucket size to seconds if\n      // the units are per second\n      if (metric.units === '/s') {\n        value = value / bucketSize;\n        if (value < 0) {\n          value = 0;\n        }\n      }\n      return value;\n    };\n    var calculation = metric && metric.calculation || defaultCalculation;\n    var buckets = aggCheck.buckets;\n    var boundsMin = moment.utc(aggCheck.meta.timefilterMin);\n    var boundsMax = moment.utc(aggCheck.meta.timefilterMax);\n    var data = _.chain(buckets).filter(filterPartialBuckets(boundsMin, boundsMax, bucketSize)).map(function (bucket) {\n      return {\n        x: bucket.key,\n        y: calculation(bucket) // Why are one of these null?\n      };\n    }).value();\n    return {\n      metric: pickMetricFields(metric),\n      data: data\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_series.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_series.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst moment = require('moment');\nconst root = require('requirefrom')('');\nconst metrics = root('public/lib/metrics');\nconst createQuery = require('./create_query.js');\nconst calcAuto = require('./calculate_auto');\nconst filterPartialBuckets = require('./filter_partial_buckets');\nconst pickMetricFields = require('./pick_metric_fields');\n\nmodule.exports = (req, indices, metricName, filters) => {\n  const config = req.server.config();\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const metric = metrics[metricName];\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n  const id = req.params.id;\n  const minIntervalSeconds = config.get('marvel.min_interval_seconds');\n\n  const params = {\n    index: indices,\n    searchType: 'count',\n    ignoreUnavailable: true,\n    ignore: [404],\n    body: {\n      query: createQuery({ start, end, clusterUuid, filters }),\n      aggs: {}\n    }\n  };\n  const min = moment.utc(start).valueOf();\n  const max = moment.utc(end).valueOf();\n  const duration = moment.duration(max - min, 'ms');\n  const bucketSize = Math.max(minIntervalSeconds, calcAuto.near(100, duration).asSeconds());\n  const aggs = {\n    check: {\n      date_histogram: {\n        field: 'timestamp',\n        min_doc_count: 0,\n        interval: bucketSize + 's',\n        extended_bounds: { min, max }\n      },\n      aggs: { metric: { } },\n      meta: {\n        timefilterMin: min,\n        timefilterMax: max,\n        bucketSize: bucketSize\n      }\n    }\n  };\n  aggs.check.aggs.metric[metric.metricAgg] = {\n    field: metric.field\n  };\n  if (metric.derivative) {\n    aggs.check.aggs.metric_deriv = {\n      derivative: { buckets_path: 'metric', gap_policy: 'skip' }\n    };\n  }\n  if (metric.aggs) {\n    _.assign(aggs.check.aggs, metric.aggs);\n  }\n  params.body.aggs = aggs;\n\n  return callWithRequest(req, 'search', params)\n  .then(function (resp) {\n    if (!resp.aggregations)  {\n      return {\n        metric: pickMetricFields(metric),\n        data: []\n      };\n    }\n    const aggCheck = resp.aggregations.check;\n    const bucketSize = aggCheck.meta.bucketSize;\n    const defaultCalculation = (bucket) => {\n      const key = (metric.derivative) ? 'metric_deriv' : 'metric';\n      let value =  bucket[key] && bucket[key].value || 0;\n      // We need to convert metric_deriv from the bucket size to seconds if\n      // the units are per second\n      if (metric.units === '/s') {\n        value = value / bucketSize;\n        if (value < 0) {\n          value = 0;\n        }\n      }\n      return value;\n    };\n    const calculation = metric && metric.calculation || defaultCalculation;\n    const buckets = aggCheck.buckets;\n    const boundsMin = moment.utc(aggCheck.meta.timefilterMin);\n    const boundsMax = moment.utc(aggCheck.meta.timefilterMax);\n    const data = _.chain(buckets)\n    .filter(filterPartialBuckets(boundsMin, boundsMax, bucketSize))\n    .map((bucket) => {\n      return {\n        x: bucket.key,\n        y: calculation(bucket) // Why are one of these null?\n      };\n    })\n    .value();\n    return {\n      metric: pickMetricFields(metric),\n      data: data\n    };\n  });\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/public/lib/metrics.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar formatLargeFloat = '0,0.[00]';\nvar formatSmallFloat = '0.[00]';\nvar formatLargeBytes = '0,0.0b';\nvar formatSmallBytes = '0.0b';\nvar formatLargeAbbreviated = '0,0.[0]a';\n\nfunction calculateQueryLatency(last) {\n  var required = last && last.query_time_in_millis_deriv && last.query_total_deriv && last.query_total_deriv.value && last.query_time_in_millis_deriv.value;\n\n  if (required) {\n    if (last.query_time_in_millis_deriv.value < 0 || last.query_total_deriv.value < 0) {\n      return null;\n    }\n    return last.query_time_in_millis_deriv.value / last.query_total_deriv.value;\n  }\n\n  return 0;\n}\n\nfunction calculateIndexLatency(last) {\n  var required = last && last.index_time_in_millis_deriv && last.index_total_deriv && last.index_total_deriv.value && last.index_time_in_millis_deriv.value;\n\n  if (required) {\n    if (last.index_time_in_millis_deriv.value < 0 || last.index_total_deriv.value < 0) {\n      return null;\n    }\n    return last.index_time_in_millis_deriv.value / last.index_total_deriv.value;\n  }\n\n  return 0;\n}\n\nmodule.exports = {\n  'cluster_index_request_rate': {\n    active: true,\n    field: 'indices_stats._all.primaries.indexing.index_total',\n    label: 'Indexing Rate',\n    description: 'The per index rate at which documents are being indexed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'cluster_search_request_rate': {\n    active: true,\n    field: 'indices_stats._all.total.search.query_total',\n    label: 'Search Rate',\n    description: 'The cluster wide rate at which search reqeusts are being executed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>100', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivative: true\n  },\n  'cluster_index_latency': {\n    active: true,\n    field: 'indices_stats._all.primaries.indexing.index_total',\n    label: 'Indexing Latency',\n    description: 'The average indexing latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      index_time_in_millis: {\n        max: { field: 'indices_stats._all.primaries.indexing.index_time_in_millis' }\n      },\n      index_total: {\n        max: { field: 'indices_stats._all.primaries.indexing.index_total' }\n      },\n      index_time_in_millis_deriv: {\n        derivative: { buckets_path: 'index_time_in_millis', gap_policy: 'skip' }\n      },\n      index_total_deriv: {\n        derivative: { buckets_path: 'index_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: calculateIndexLatency\n  },\n  'cluster_query_latency': {\n    active: true,\n    field: 'indices_stats._all.total.search.query_total',\n    label: 'Search Latency',\n    description: 'The average search latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      query_time_in_millis: {\n        max: { field: 'indices_stats._all.total.search.query_time_in_millis' }\n      },\n      query_total: {\n        max: { field: 'indices_stats._all.total.search.query_total' }\n      },\n      query_time_in_millis_deriv: {\n        derivative: { buckets_path: 'query_time_in_millis', gap_policy: 'skip' }\n      },\n      query_total_deriv: {\n        derivative: { buckets_path: 'query_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: calculateQueryLatency\n  },\n  'node_index_latency': {\n    active: true,\n    field: 'node_stats.indices.indexing.index_total',\n    label: 'Indexing Latency',\n    description: 'The average indexing latency',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      index_time_in_millis: {\n        max: { field: 'node_stats.indices.indexing.index_time_in_millis' }\n      },\n      index_total: {\n        max: { field: 'node_stats.indices.indexing.index_total' }\n      },\n      index_time_in_millis_deriv: {\n        derivative: { buckets_path: 'index_time_in_millis', gap_policy: 'skip' }\n      },\n      index_total_deriv: {\n        derivative: { buckets_path: 'index_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'node',\n    derivitave: false,\n    calculation: calculateIndexLatency\n  },\n  'node_query_latency': {\n    active: true,\n    field: 'node_stats.indices.search.query_total',\n    label: 'Search Latency',\n    description: 'The average search latency',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      query_time_in_millis: {\n        max: { field: 'node_stats.indices.search.query_time_in_millis' }\n      },\n      query_total: {\n        max: { field: 'node_stats.indices.search.query_total' }\n      },\n      query_time_in_millis_deriv: {\n        derivative: { buckets_path: 'query_time_in_millis', gap_policy: 'skip' }\n      },\n      query_total_deriv: {\n        derivative: { buckets_path: 'query_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'node',\n    derivitave: false,\n    calculation: calculateQueryLatency\n  },\n  'index_request_rate': {\n    active: true,\n    field: 'index_stats.primaries.indexing.index_total',\n    label: 'Indexing Rate',\n    description: 'The per index rate at which documents are being indexed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'search_request_rate': {\n    active: true,\n    field: 'index_stats.total.search.query_total',\n    label: 'Search Rate',\n    description: 'The cluster wide rate at which search reqeusts are being executed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>100', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivative: true\n  },\n  'index_latency': {\n    active: true,\n    field: 'index_stats.primaries.indexing.index_total',\n    label: 'Indexing Latency',\n    description: 'The average indexing latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      index_time_in_millis: {\n        max: { field: 'index_stats.primaries.indexing.index_time_in_millis' }\n      },\n      index_total: {\n        max: { field: 'index_stats.primaries.indexing.index_total' }\n      },\n      index_time_in_millis_deriv: {\n        derivative: { buckets_path: 'index_time_in_millis', gap_policy: 'skip' }\n      },\n      index_total_deriv: {\n        derivative: { buckets_path: 'index_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: calculateIndexLatency\n  },\n  'query_latency': {\n    active: true,\n    field: 'index_stats.total.search.query_total',\n    label: 'Search Latency',\n    description: 'The average search latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      query_time_in_millis: {\n        max: { field: 'index_stats.total.search.query_time_in_millis' }\n      },\n      query_total: {\n        max: { field: 'index_stats.total.search.query_total' }\n      },\n      query_time_in_millis_deriv: {\n        derivative: { buckets_path: 'query_time_in_millis', gap_policy: 'skip' }\n      },\n      query_total_deriv: {\n        derivative: { buckets_path: 'query_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: calculateQueryLatency\n  },\n  'node_cpu_utilization': {\n    active: true,\n    field: 'node_stats.process.cpu.percent',\n    label: 'CPU Utilization',\n    description: 'The percentage of CPU usage.',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '%',\n    defaults: { warning: '>70', critical: '>90', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_segment_count': {\n    active: true,\n    field: 'node_stats.indices.segments.count',\n    label: 'Segment Count',\n    description: 'The average segment count.',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>70', critical: '>90', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_jvm_mem_percent': {\n    active: true,\n    field: 'node_stats.jvm.mem.heap_used_percent',\n    label: 'JVM Heap Usage',\n    description: 'The amound of heap used by the JVM',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '%',\n    defaults: { warning: '>7', critical: '>9', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_load_average': {\n    active: true,\n    field: 'node_stats.os.load_average',\n    label: 'System Load Average',\n    description: 'The amount of load used for the last 1 minute.',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>2', critical: '>4', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_free_space': {\n    active: true,\n    field: 'node_stats.fs.total.available_in_bytes',\n    label: 'Disk Free Space',\n    description: 'The free disk space available on the node',\n    format: formatSmallBytes,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>2', critical: '>4', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'index_throttle_time': {\n    active: true,\n    field: 'index_stats.primaries.indexing.throttle_time_in_millis',\n    label: 'Indexing Throttle Time',\n    description: 'The amount of load used for the last 1 minute.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: 'ms',\n    defaults: { warning: '>0', critical: '>0', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_shard_query_rate': {\n    active: false,\n    field: 'index_stats.total.search.query_total',\n    label: 'Index Shard Search Rate',\n    description: 'Total number of requests (GET /_search)across an index (and across all relevant shards for that index) / <time range>',\n    format: formatSmallFloat,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>0', critical: '>0', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_document_count': {\n    active: false,\n    field: 'index_stats.primaries.docs.count',\n    label: 'Document Count',\n    description: 'Total number of documents (in primary shards) for an index',\n    format: formatLargeAbbreviated,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>0', critical: '>0', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_search_request_rate': {\n    active: true,\n    field: 'index_stats.total.search.query_total',\n    label: 'Search Rate',\n    description: 'The per index rate at which search reqeusts are being executed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>100', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_merge_rate': {\n    active: true,\n    field: 'index_stats.total.merges.total_size_in_bytes',\n    label: 'Indexing Rate',\n    description: 'The per index rate at which segements are being merged.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_size': {\n    active: true,\n    field: 'index_stats.total.store.size_in_bytes',\n    label: 'Index Size',\n    description: 'The size of the index.',\n    format: formatLargeBytes,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_lucene_memory': {\n    active: true,\n    field: 'index_stats.total.segments.memory_in_bytes',\n    label: 'Lucene Memory',\n    description: 'The amount of memory used by Lucene.',\n    format: formatLargeBytes,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_fielddata': {\n    active: true,\n    field: 'index_stats.total.fielddata.memory_size_in_bytes',\n    label: 'Field Data Size',\n    description: 'The amount of memory used by field data.',\n    format: formatLargeBytes,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_refresh_time': {\n    active: true,\n    field: 'total.refresh.total_time_in_millis',\n    label: 'Total Refresh Time',\n    description: 'The the amount of time a refresh takes',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  }\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/public/lib/metrics.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/public/lib/metrics.js",
      "sourcesContent": [
        "const formatLargeFloat = '0,0.[00]';\nconst formatSmallFloat = '0.[00]';\nconst formatLargeBytes = '0,0.0b';\nconst formatSmallBytes = '0.0b';\nconst formatLargeAbbreviated = '0,0.[0]a';\n\nfunction calculateQueryLatency(last) {\n  var required = last &&\n      last.query_time_in_millis_deriv &&\n      last.query_total_deriv &&\n      last.query_total_deriv.value &&\n      last.query_time_in_millis_deriv.value;\n\n  if (required) {\n    if (last.query_time_in_millis_deriv.value < 0 || last.query_total_deriv.value < 0) {\n      return null;\n    }\n    return last.query_time_in_millis_deriv.value / last.query_total_deriv.value;\n  }\n\n  return 0;\n}\n\nfunction calculateIndexLatency(last) {\n  var required = last &&\n      last.index_time_in_millis_deriv &&\n      last.index_total_deriv &&\n      last.index_total_deriv.value &&\n      last.index_time_in_millis_deriv.value;\n\n  if (required) {\n    if (last.index_time_in_millis_deriv.value < 0 || last.index_total_deriv.value < 0) {\n      return null;\n    }\n    return last.index_time_in_millis_deriv.value / last.index_total_deriv.value;\n  }\n\n  return 0;\n}\n\nmodule.exports = {\n  'cluster_index_request_rate': {\n    active: true,\n    field: 'indices_stats._all.primaries.indexing.index_total',\n    label: 'Indexing Rate',\n    description: 'The per index rate at which documents are being indexed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'cluster_search_request_rate': {\n    active: true,\n    field: 'indices_stats._all.total.search.query_total',\n    label: 'Search Rate',\n    description: 'The cluster wide rate at which search reqeusts are being executed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>100', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivative: true\n  },\n  'cluster_index_latency': {\n    active: true,\n    field: 'indices_stats._all.primaries.indexing.index_total',\n    label: 'Indexing Latency',\n    description: 'The average indexing latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      index_time_in_millis: {\n        max: { field: 'indices_stats._all.primaries.indexing.index_time_in_millis' }\n      },\n      index_total: {\n        max: { field: 'indices_stats._all.primaries.indexing.index_total' }\n      },\n      index_time_in_millis_deriv: {\n        derivative: { buckets_path: 'index_time_in_millis', gap_policy: 'skip' }\n      },\n      index_total_deriv: {\n        derivative: { buckets_path: 'index_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: calculateIndexLatency\n  },\n  'cluster_query_latency': {\n    active: true,\n    field: 'indices_stats._all.total.search.query_total',\n    label: 'Search Latency',\n    description: 'The average search latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      query_time_in_millis: {\n        max: { field: 'indices_stats._all.total.search.query_time_in_millis' }\n      },\n      query_total: {\n        max: { field: 'indices_stats._all.total.search.query_total' }\n      },\n      query_time_in_millis_deriv: {\n        derivative: { buckets_path: 'query_time_in_millis', gap_policy: 'skip' }\n      },\n      query_total_deriv: {\n        derivative: { buckets_path: 'query_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: calculateQueryLatency\n  },\n  'node_index_latency': {\n    active: true,\n    field: 'node_stats.indices.indexing.index_total',\n    label: 'Indexing Latency',\n    description: 'The average indexing latency',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      index_time_in_millis: {\n        max: { field: 'node_stats.indices.indexing.index_time_in_millis' }\n      },\n      index_total: {\n        max: { field: 'node_stats.indices.indexing.index_total' }\n      },\n      index_time_in_millis_deriv: {\n        derivative: { buckets_path: 'index_time_in_millis', gap_policy: 'skip' }\n      },\n      index_total_deriv: {\n        derivative: { buckets_path: 'index_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'node',\n    derivitave: false,\n    calculation: calculateIndexLatency\n  },\n  'node_query_latency': {\n    active: true,\n    field: 'node_stats.indices.search.query_total',\n    label: 'Search Latency',\n    description: 'The average search latency',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      query_time_in_millis: {\n        max: { field: 'node_stats.indices.search.query_time_in_millis' }\n      },\n      query_total: {\n        max: { field: 'node_stats.indices.search.query_total' }\n      },\n      query_time_in_millis_deriv: {\n        derivative: { buckets_path: 'query_time_in_millis', gap_policy: 'skip' }\n      },\n      query_total_deriv: {\n        derivative: { buckets_path: 'query_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'node',\n    derivitave: false,\n    calculation: calculateQueryLatency\n  },\n  'index_request_rate': {\n    active: true,\n    field: 'index_stats.primaries.indexing.index_total',\n    label: 'Indexing Rate',\n    description: 'The per index rate at which documents are being indexed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'search_request_rate': {\n    active: true,\n    field: 'index_stats.total.search.query_total',\n    label: 'Search Rate',\n    description: 'The cluster wide rate at which search reqeusts are being executed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>100', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivative: true\n  },\n  'index_latency': {\n    active: true,\n    field: 'index_stats.primaries.indexing.index_total',\n    label: 'Indexing Latency',\n    description: 'The average indexing latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      index_time_in_millis: {\n        max: { field: 'index_stats.primaries.indexing.index_time_in_millis' }\n      },\n      index_total: {\n        max: { field: 'index_stats.primaries.indexing.index_total' }\n      },\n      index_time_in_millis_deriv: {\n        derivative: { buckets_path: 'index_time_in_millis', gap_policy: 'skip' }\n      },\n      index_total_deriv: {\n        derivative: { buckets_path: 'index_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: calculateIndexLatency\n  },\n  'query_latency': {\n    active: true,\n    field: 'index_stats.total.search.query_total',\n    label: 'Search Latency',\n    description: 'The average search latency across the entire cluster.',\n    format: formatLargeFloat,\n    metricAgg: 'sum',\n    aggs: {\n      query_time_in_millis: {\n        max: { field: 'index_stats.total.search.query_time_in_millis' }\n      },\n      query_total: {\n        max: { field: 'index_stats.total.search.query_total' }\n      },\n      query_time_in_millis_deriv: {\n        derivative: { buckets_path: 'query_time_in_millis', gap_policy: 'skip' }\n      },\n      query_total_deriv: {\n        derivative: { buckets_path: 'query_total', gap_policy: 'skip' }\n      }\n    },\n    units: 'ms',\n    defaults: { warning: '>100', critical: '>200', interval: '1m', periods: 1 },\n    type: 'cluster',\n    derivitave: false,\n    calculation: calculateQueryLatency\n  },\n  'node_cpu_utilization': {\n    active: true,\n    field: 'node_stats.process.cpu.percent',\n    label: 'CPU Utilization',\n    description: 'The percentage of CPU usage.',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '%',\n    defaults: { warning: '>70', critical: '>90', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_segment_count': {\n    active: true,\n    field: 'node_stats.indices.segments.count',\n    label: 'Segment Count',\n    description: 'The average segment count.',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>70', critical: '>90', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_jvm_mem_percent': {\n    active: true,\n    field: 'node_stats.jvm.mem.heap_used_percent',\n    label: 'JVM Heap Usage',\n    description: 'The amound of heap used by the JVM',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '%',\n    defaults: { warning: '>7', critical: '>9', interval: '1m', periods: 1  },\n    type: 'node',\n    derivative: false\n  },\n  'node_load_average': {\n    active: true,\n    field: 'node_stats.os.load_average',\n    label: 'System Load Average',\n    description: 'The amount of load used for the last 1 minute.',\n    format: formatLargeFloat,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>2', critical: '>4', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'node_free_space': {\n    active: true,\n    field: 'node_stats.fs.total.available_in_bytes',\n    label: 'Disk Free Space',\n    description: 'The free disk space available on the node',\n    format: formatSmallBytes,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>2', critical: '>4', interval: '1m', periods: 1 },\n    type: 'node',\n    derivative: false\n  },\n  'index_throttle_time': {\n    active: true,\n    field: 'index_stats.primaries.indexing.throttle_time_in_millis',\n    label: 'Indexing Throttle Time',\n    description: 'The amount of load used for the last 1 minute.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: 'ms',\n    defaults: { warning: '>0', critical: '>0', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_shard_query_rate': {\n    active: false,\n    field: 'index_stats.total.search.query_total',\n    label: 'Index Shard Search Rate',\n    description: 'Total number of requests (GET /_search)across an index (and across all relevant shards for that index) / <time range>',\n    format: formatSmallFloat,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>0', critical: '>0', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_document_count': {\n    active: false,\n    field: 'index_stats.primaries.docs.count',\n    label: 'Document Count',\n    description: 'Total number of documents (in primary shards) for an index',\n    format: formatLargeAbbreviated,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>0', critical: '>0', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_search_request_rate': {\n    active: true,\n    field: 'index_stats.total.search.query_total',\n    label: 'Search Rate',\n    description: 'The per index rate at which search reqeusts are being executed.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>100', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_merge_rate': {\n    active: true,\n    field: 'index_stats.total.merges.total_size_in_bytes',\n    label: 'Indexing Rate',\n    description: 'The per index rate at which segements are being merged.',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '/s',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  },\n  'index_size': {\n    active: true,\n    field: 'index_stats.total.store.size_in_bytes',\n    label: 'Index Size',\n    description: 'The size of the index.',\n    format: formatLargeBytes,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_lucene_memory': {\n    active: true,\n    field: 'index_stats.total.segments.memory_in_bytes',\n    label: 'Lucene Memory',\n    description: 'The amount of memory used by Lucene.',\n    format: formatLargeBytes,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_fielddata': {\n    active: true,\n    field: 'index_stats.total.fielddata.memory_size_in_bytes',\n    label: 'Field Data Size',\n    description: 'The amount of memory used by field data.',\n    format: formatLargeBytes,\n    metricAgg: 'avg',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: false\n  },\n  'index_refresh_time': {\n    active: true,\n    field: 'total.refresh.total_time_in_millis',\n    label: 'Total Refresh Time',\n    description: 'The the amount of time a refresh takes',\n    format: formatLargeFloat,\n    metricAgg: 'max',\n    units: '',\n    defaults: { warning: '>1000', critical: '>5000', interval: '1m', periods: 1 },\n    type: 'index',\n    derivative: true\n  }\n};\n"
      ]
    },
    "mtime": 1472156264000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/calculate_auto.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar moment = require('moment');\nvar d = moment.duration;\n\nvar roundingRules = [[d(500, 'ms'), d(100, 'ms')], [d(5, 'second'), d(1, 'second')], [d(7.5, 'second'), d(5, 'second')], [d(15, 'second'), d(10, 'second')], [d(45, 'second'), d(30, 'second')], [d(3, 'minute'), d(1, 'minute')], [d(9, 'minute'), d(5, 'minute')], [d(20, 'minute'), d(10, 'minute')], [d(45, 'minute'), d(30, 'minute')], [d(2, 'hour'), d(1, 'hour')], [d(6, 'hour'), d(3, 'hour')], [d(24, 'hour'), d(12, 'hour')], [d(1, 'week'), d(1, 'd')], [d(3, 'week'), d(1, 'week')], [d(1, 'year'), d(1, 'month')], [Infinity, d(1, 'year')]];\n\nvar revRoundingRules = roundingRules.slice(0).reverse();\n\nfunction find(rules, check, last) {\n  function pick(buckets, duration) {\n    var target = duration / buckets;\n    var lastResp;\n\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i];\n      var resp = check(rule[0], rule[1], target);\n\n      if (resp == null) {\n        if (!last) continue;\n        if (lastResp) return lastResp;\n        break;\n      }\n\n      if (!last) return resp;\n      lastResp = resp;\n    }\n\n    // fallback to just a number of milliseconds, ensure ms is >= 1\n    var ms = Math.max(Math.floor(target), 1);\n    return moment.duration(ms, 'ms');\n  }\n\n  return function (buckets, duration) {\n    var interval = pick(buckets, duration);\n    if (interval) return moment.duration(interval._data);\n  };\n}\n\nmodule.exports = {\n  near: find(revRoundingRules, function near(bound, interval, target) {\n    if (bound > target) return interval;\n  }, true),\n\n  lessThan: find(revRoundingRules, function (bound, interval, target) {\n    if (interval < target) return interval;\n  }),\n\n  atLeast: find(revRoundingRules, function atLeast(bound, interval, target) {\n    if (interval <= target) return interval;\n  })\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9jYWxjdWxhdGVfYXV0by5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMvQixJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDOztBQUV4QixJQUFJLGFBQWEsR0FBRyxDQUNsQixDQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBRSxFQUM5QixDQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBRSxFQUNsQyxDQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBRSxFQUNwQyxDQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBRSxFQUNwQyxDQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBRSxFQUNwQyxDQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBRSxFQUNsQyxDQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBRSxFQUNsQyxDQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFB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QUVSLFVBQVEsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsVUFBVSxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRTtBQUNsRSxRQUFJLFFBQVEsR0FBRyxNQUFNLEVBQUUsT0FBTyxRQUFRLENBQUM7R0FDeEMsQ0FBQzs7QUFFRixTQUFPLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixFQUFFLFNBQVMsT0FBTyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFO0FBQ3hFLFFBQUksUUFBUSxJQUFJLE1BQU0sRUFBRSxPQUFPLFFBQVEsQ0FBQztHQUN6QyxDQUFDO0NBQ0gsQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvY2FsY3VsYXRlX2F1dG8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9tZW50ID0gcmVxdWlyZSgnbW9tZW50Jyk7XG52YXIgZCA9IG1vbWVudC5kdXJhdGlvbjtcblxudmFyIHJvdW5kaW5nUnVsZXMgPSBbXG4gIFsgZCg1MDAsICdtcycpLCBkKDEwMCwgJ21zJykgXSxcbiAgWyBkKDUsICdzZWNvbmQnKSwgZCgxLCAnc2Vjb25kJykgXSxcbiAgWyBkKDcuNSwgJ3NlY29uZCcpLCBkKDUsICdzZWNvbmQnKSBdLFxuICBbIGQoMTUsICdzZWNvbmQnKSwgZCgxMCwgJ3NlY29uZCcpIF0sXG4gIFsgZCg0NSwgJ3NlY29uZCcpLCBkKDMwLCAnc2Vjb25kJykgXSxcbiAgWyBkKDMsICdtaW51dGUnKSwgZCgxLCAnbWludXRlJykgXSxcbiAgWyBkKDksICdtaW51dGUnKSwgZCg1LCAnbWludXRlJykgXSxcbiAgWyBkKDIwLCAnbWludXRlJyksIGQoMTAsICdtaW51dGUnKSBdLFxuICBbIGQoNDUsICdtaW51dGUnKSwgZCgzMCwgJ21pbnV0ZScpIF0sXG4gIFsgZCgyLCAnaG91cicpLCBkKDEsICdob3VyJykgXSxcbiAgWyBkKDYsICdob3VyJyksIGQoMywgJ2hvdXInKSBdLFxuICBbIGQoMjQsICdob3VyJyksIGQoMTIsICdob3VyJykgXSxcbiAgWyBkKDEsICd3ZWVrJyksIGQoMSwgJ2QnKSBdLFxuICBbIGQoMywgJ3dlZWsnKSwgZCgxLCAnd2VlaycpIF0sXG4gIFsgZCgxLCAneWVhcicpLCBkKDEsICdtb250aCcpIF0sXG4gIFsgSW5maW5pdHksIGQoMSwgJ3llYXInKSBdXG5dO1xuXG52YXIgcmV2Um91bmRpbmdSdWxlcyA9IHJvdW5kaW5nUnVsZXMuc2xpY2UoMCkucmV2ZXJzZSgpO1xuXG5mdW5jdGlvbiBmaW5kKHJ1bGVzLCBjaGVjaywgbGFzdCkge1xuICBmdW5jdGlvbiBwaWNrKGJ1Y2tldHMsIGR1cmF0aW9uKSB7XG4gICAgdmFyIHRhcmdldCA9IGR1cmF0aW9uIC8gYnVja2V0cztcbiAgICB2YXIgbGFzdFJlc3A7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJ1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgcnVsZSA9IHJ1bGVzW2ldO1xuICAgICAgdmFyIHJlc3AgPSBjaGVjayhydWxlWzBdLCBydWxlWzFdLCB0YXJnZXQpO1xuXG4gICAgICBpZiAocmVzcCA9PSBudWxsKSB7XG4gICAgICAgIGlmICghbGFzdCkgY29udGludWU7XG4gICAgICAgIGlmIChsYXN0UmVzcCkgcmV0dXJuIGxhc3RSZXNwO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgaWYgKCFsYXN0KSByZXR1cm4gcmVzcDtcbiAgICAgIGxhc3RSZXNwID0gcmVzcDtcbiAgICB9XG5cbiAgICAvLyBmYWxsYmFjayB0byBqdXN0IGEgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcywgZW5zdXJlIG1zIGlzID49IDFcbiAgICB2YXIgbXMgPSBNYXRoLm1heChNYXRoLmZsb29yKHRhcmdldCksIDEpO1xuICAgIHJldHVybiBtb21lbnQuZHVyYXRpb24obXMsICdtcycpO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChidWNrZXRzLCBkdXJhdGlvbikge1xuICAgIHZhciBpbnRlcnZhbCA9IHBpY2soYnVja2V0cywgZHVyYXRpb24pO1xuICAgIGlmIChpbnRlcnZhbCkgcmV0dXJuIG1vbWVudC5kdXJhdGlvbihpbnRlcnZhbC5fZGF0YSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBuZWFyOiBmaW5kKHJldlJvdW5kaW5nUnVsZXMsIGZ1bmN0aW9uIG5lYXIoYm91bmQsIGludGVydmFsLCB0YXJnZXQpIHtcbiAgICBpZiAoYm91bmQgPiB0YXJnZXQpIHJldHVybiBpbnRlcnZhbDtcbiAgfSwgdHJ1ZSksXG5cbiAgbGVzc1RoYW46IGZpbmQocmV2Um91bmRpbmdSdWxlcywgZnVuY3Rpb24gKGJvdW5kLCBpbnRlcnZhbCwgdGFyZ2V0KSB7XG4gICAgaWYgKGludGVydmFsIDwgdGFyZ2V0KSByZXR1cm4gaW50ZXJ2YWw7XG4gIH0pLFxuXG4gIGF0TGVhc3Q6IGZpbmQocmV2Um91bmRpbmdSdWxlcywgZnVuY3Rpb24gYXRMZWFzdChib3VuZCwgaW50ZXJ2YWwsIHRhcmdldCkge1xuICAgIGlmIChpbnRlcnZhbCA8PSB0YXJnZXQpIHJldHVybiBpbnRlcnZhbDtcbiAgfSksXG59O1xuXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/calculate_auto.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/calculate_auto.js",
      "sourcesContent": [
        "var moment = require('moment');\nvar d = moment.duration;\n\nvar roundingRules = [\n  [ d(500, 'ms'), d(100, 'ms') ],\n  [ d(5, 'second'), d(1, 'second') ],\n  [ d(7.5, 'second'), d(5, 'second') ],\n  [ d(15, 'second'), d(10, 'second') ],\n  [ d(45, 'second'), d(30, 'second') ],\n  [ d(3, 'minute'), d(1, 'minute') ],\n  [ d(9, 'minute'), d(5, 'minute') ],\n  [ d(20, 'minute'), d(10, 'minute') ],\n  [ d(45, 'minute'), d(30, 'minute') ],\n  [ d(2, 'hour'), d(1, 'hour') ],\n  [ d(6, 'hour'), d(3, 'hour') ],\n  [ d(24, 'hour'), d(12, 'hour') ],\n  [ d(1, 'week'), d(1, 'd') ],\n  [ d(3, 'week'), d(1, 'week') ],\n  [ d(1, 'year'), d(1, 'month') ],\n  [ Infinity, d(1, 'year') ]\n];\n\nvar revRoundingRules = roundingRules.slice(0).reverse();\n\nfunction find(rules, check, last) {\n  function pick(buckets, duration) {\n    var target = duration / buckets;\n    var lastResp;\n\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i];\n      var resp = check(rule[0], rule[1], target);\n\n      if (resp == null) {\n        if (!last) continue;\n        if (lastResp) return lastResp;\n        break;\n      }\n\n      if (!last) return resp;\n      lastResp = resp;\n    }\n\n    // fallback to just a number of milliseconds, ensure ms is >= 1\n    var ms = Math.max(Math.floor(target), 1);\n    return moment.duration(ms, 'ms');\n  }\n\n  return function (buckets, duration) {\n    var interval = pick(buckets, duration);\n    if (interval) return moment.duration(interval._data);\n  };\n}\n\nmodule.exports = {\n  near: find(revRoundingRules, function near(bound, interval, target) {\n    if (bound > target) return interval;\n  }, true),\n\n  lessThan: find(revRoundingRules, function (bound, interval, target) {\n    if (interval < target) return interval;\n  }),\n\n  atLeast: find(revRoundingRules, function atLeast(bound, interval, target) {\n    if (interval <= target) return interval;\n  }),\n};\n\n"
      ]
    },
    "mtime": 1466441064000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/filter_partial_buckets.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar moment = require('moment');\n\n/* calling .subtract or .add on a moment object mutates the object\n * so this function shortcuts creating a fresh object */\nfunction getTime(bucket) {\n  return moment.utc(bucket.key);\n}\n\n/* find the milliseconds of difference between 2 moment objects */\nfunction getDelta(t1, t2) {\n  return moment.duration(t1 - t2).asMilliseconds();\n}\n\nmodule.exports = function filterPartialBuckets(min, max, bucketSize) {\n  var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n  return function (bucket) {\n    var bucketTime = getTime(bucket);\n    // timestamp is too late to be complete\n    if (getDelta(max, bucketTime.add(bucketSize, 'seconds')) < 0) {\n      return false;\n    }\n\n    /* Table listing metrics don't need to filter the beginning of data for\n     * partial buckets. They just boil down the data into max/min/last/slope\n     * numbers instead of graphing it. So table listing data buckets pass\n    * ignoreEarly */\n    if (options.ignoreEarly !== true) {\n      // timestamp is too early to be complete\n      if (getDelta(bucketTime.subtract(bucketSize, 'seconds'), min) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9maWx0ZXJfcGFydGlhbF9idWNrZXRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDOzs7O0FBSWpDLFNBQVMsT0FBTyxDQUFDLE1BQU0sRUFBRTtBQUN2QixTQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0NBQy9COzs7QUFHRCxTQUFTLFFBQVEsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFO0FBQ3hCLFNBQU8sTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsY0FBYyxFQUFFLENBQUM7Q0FDbEQ7O0FBRUQsTUFBTSxDQUFDLE9BQU8sR0FBRyxTQUFTLG9CQUFvQixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFnQjtNQUFkLE9BQU8seURBQUcsRUFBRTs7QUFDL0UsU0FBTyxVQUFDLE1BQU0sRUFBSztBQUNqQixRQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7O0FBRW5DLFFBQUksUUFBUSxDQUFDLEdBQUcsRUFBRSxVQUFVLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxTQUFTLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUM1RCxhQUFPLEtBQUssQ0FBQztLQUNkOzs7Ozs7QUFNRCxRQUFJLE9BQU8sQ0FBQyxXQUFXLEtBQUssSUFBSSxFQUFFOztBQUVoQyxVQUFJLFFBQVEsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxTQUFTLENBQUMsRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUU7QUFDakUsZUFBTyxLQUFLLENBQUM7T0FDZDtLQUNGOztBQUVELFdBQU8sSUFBSSxDQUFDO0dBQ2IsQ0FBQztDQUNILENBQUMiLCJmaWxlIjoiL2hvbWUvZWxhc3RpY3NlYXJjaC0yLjQuMS9iaW4va2liYW5hLTQuNi4xLWxpbnV4LXg4Nl82NC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2ZpbHRlcl9wYXJ0aWFsX2J1Y2tldHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb21lbnQgPSByZXF1aXJlKCdtb21lbnQnKTtcblxuLyogY2FsbGluZyAuc3VidHJhY3Qgb3IgLmFkZCBvbiBhIG1vbWVudCBvYmplY3QgbXV0YXRlcyB0aGUgb2JqZWN0XG4gKiBzbyB0aGlzIGZ1bmN0aW9uIHNob3J0Y3V0cyBjcmVhdGluZyBhIGZyZXNoIG9iamVjdCAqL1xuZnVuY3Rpb24gZ2V0VGltZShidWNrZXQpIHtcbiAgcmV0dXJuIG1vbWVudC51dGMoYnVja2V0LmtleSk7XG59XG5cbi8qIGZpbmQgdGhlIG1pbGxpc2Vjb25kcyBvZiBkaWZmZXJlbmNlIGJldHdlZW4gMiBtb21lbnQgb2JqZWN0cyAqL1xuZnVuY3Rpb24gZ2V0RGVsdGEodDEsIHQyKSB7XG4gIHJldHVybiBtb21lbnQuZHVyYXRpb24odDEgLSB0MikuYXNNaWxsaXNlY29uZHMoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBmaWx0ZXJQYXJ0aWFsQnVja2V0cyhtaW4sIG1heCwgYnVja2V0U2l6ZSwgb3B0aW9ucyA9IHt9KSB7XG4gIHJldHVybiAoYnVja2V0KSA9PiB7XG4gICAgY29uc3QgYnVja2V0VGltZSA9IGdldFRpbWUoYnVja2V0KTtcbiAgICAvLyB0aW1lc3RhbXAgaXMgdG9vIGxhdGUgdG8gYmUgY29tcGxldGVcbiAgICBpZiAoZ2V0RGVsdGEobWF4LCBidWNrZXRUaW1lLmFkZChidWNrZXRTaXplLCAnc2Vjb25kcycpKSA8IDApIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvKiBUYWJsZSBsaXN0aW5nIG1ldHJpY3MgZG9uJ3QgbmVlZCB0byBmaWx0ZXIgdGhlIGJlZ2lubmluZyBvZiBkYXRhIGZvclxuICAgICAqIHBhcnRpYWwgYnVja2V0cy4gVGhleSBqdXN0IGJvaWwgZG93biB0aGUgZGF0YSBpbnRvIG1heC9taW4vbGFzdC9zbG9wZVxuICAgICAqIG51bWJlcnMgaW5zdGVhZCBvZiBncmFwaGluZyBpdC4gU28gdGFibGUgbGlzdGluZyBkYXRhIGJ1Y2tldHMgcGFzc1xuICAgICogaWdub3JlRWFybHkgKi9cbiAgICBpZiAob3B0aW9ucy5pZ25vcmVFYXJseSAhPT0gdHJ1ZSkge1xuICAgICAgLy8gdGltZXN0YW1wIGlzIHRvbyBlYXJseSB0byBiZSBjb21wbGV0ZVxuICAgICAgaWYgKGdldERlbHRhKGJ1Y2tldFRpbWUuc3VidHJhY3QoYnVja2V0U2l6ZSwgJ3NlY29uZHMnKSwgbWluKSA8IDApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9O1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/filter_partial_buckets.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;;;AAIjC,SAAS,OAAO,CAAC,MAAM,EAAE;AACvB,SAAO,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;CAC/B;;;AAGD,SAAS,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE;AACxB,SAAO,MAAM,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC;CAClD;;AAED,MAAM,CAAC,OAAO,GAAG,SAAS,oBAAoB,CAAC,GAAG,EAAE,GAAG,EAAE,UAAU,EAAgB;MAAd,OAAO,yDAAG,EAAE;;AAC/E,SAAO,UAAC,MAAM,EAAK;AACjB,QAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAEnC,QAAI,QAAQ,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE;AAC5D,aAAO,KAAK,CAAC;KACd;;;;;;AAMD,QAAI,OAAO,CAAC,WAAW,KAAK,IAAI,EAAE;;AAEhC,UAAI,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE;AACjE,eAAO,KAAK,CAAC;OACd;KACF;;AAED,WAAO,IAAI,CAAC;GACb,CAAC;CACH,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/filter_partial_buckets.js",
      "sourcesContent": [
        "const moment = require('moment');\n\n/* calling .subtract or .add on a moment object mutates the object\n * so this function shortcuts creating a fresh object */\nfunction getTime(bucket) {\n  return moment.utc(bucket.key);\n}\n\n/* find the milliseconds of difference between 2 moment objects */\nfunction getDelta(t1, t2) {\n  return moment.duration(t1 - t2).asMilliseconds();\n}\n\nmodule.exports = function filterPartialBuckets(min, max, bucketSize, options = {}) {\n  return (bucket) => {\n    const bucketTime = getTime(bucket);\n    // timestamp is too late to be complete\n    if (getDelta(max, bucketTime.add(bucketSize, 'seconds')) < 0) {\n      return false;\n    }\n\n    /* Table listing metrics don't need to filter the beginning of data for\n     * partial buckets. They just boil down the data into max/min/last/slope\n     * numbers instead of graphing it. So table listing data buckets pass\n    * ignoreEarly */\n    if (options.ignoreEarly !== true) {\n      // timestamp is too early to be complete\n      if (getDelta(bucketTime.subtract(bucketSize, 'seconds'), min) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/pick_metric_fields.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nmodule.exports = function (metric) {\n  var fields = ['field', 'label', 'description', 'units', 'format'];\n  return _.pick(metric, fields);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9waWNrX21ldHJpY19maWVsZHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDNUIsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFDLE1BQU0sRUFBSztBQUMzQixNQUFNLE1BQU0sR0FBRyxDQUNiLE9BQU8sRUFDUCxPQUFPLEVBQ1AsYUFBYSxFQUNiLE9BQU8sRUFDUCxRQUFRLENBQ1QsQ0FBQztBQUNGLFNBQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7Q0FDL0IsQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvcGlja19tZXRyaWNfZmllbGRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xubW9kdWxlLmV4cG9ydHMgPSAobWV0cmljKSA9PiB7XG4gIGNvbnN0IGZpZWxkcyA9IFtcbiAgICAnZmllbGQnLFxuICAgICdsYWJlbCcsXG4gICAgJ2Rlc2NyaXB0aW9uJyxcbiAgICAndW5pdHMnLFxuICAgICdmb3JtYXQnXG4gIF07XG4gIHJldHVybiBfLnBpY2sobWV0cmljLCBmaWVsZHMpO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/pick_metric_fields.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,MAAM,CAAC,OAAO,GAAG,UAAC,MAAM,EAAK;AAC3B,MAAM,MAAM,GAAG,CACb,OAAO,EACP,OAAO,EACP,aAAa,EACb,OAAO,EACP,QAAQ,CACT,CAAC;AACF,SAAO,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CAC/B,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/pick_metric_fields.js",
      "sourcesContent": [
        "const _ = require('lodash');\nmodule.exports = (metric) => {\n  const fields = [\n    'field',\n    'label',\n    'description',\n    'units',\n    'format'\n  ];\n  return _.pick(metric, fields);\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_shard_stats.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query');\nvar root = require('requirefrom')('');\nvar calculateNodeType = root('server/lib/calculate_node_type');\nvar nodeAggVals = root('server/lib/node_agg_vals');\n\nmodule.exports = function (req, indices, lastState) {\n  var config = req.server.config();\n  var nodeResolver = config.get('marvel.node_resolver');\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n  var aggSize = 10;\n  var params = {\n    index: indices,\n    type: 'shards',\n    ignore: [404],\n    searchType: 'count',\n    body: {\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        clusterUuid: clusterUuid,\n        filters: [{ term: { state_uuid: _.get(lastState, 'cluster_state.state_uuid') } }]\n      }),\n      aggs: {\n        indices: {\n          terms: {\n            field: 'shard.index',\n            size: config.get('marvel.max_bucket_size')\n          },\n          aggs: {\n            states: {\n              terms: { field: 'shard.state', size: aggSize },\n              aggs: { primary: { terms: { field: 'shard.primary', size: aggSize } } }\n            }\n          }\n        },\n        nodes: {\n          terms: {\n            field: 'source_node.' + nodeResolver,\n            size: config.get('marvel.max_bucket_size')\n          },\n          aggs: {\n            index_count: { cardinality: { field: 'shard.index' } },\n            node_names: {\n              terms: { field: 'source_node.name', size: aggSize },\n              aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n            },\n            node_transport_address: {\n              terms: { field: 'source_node.transport_address', size: aggSize },\n              aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n            },\n            node_data_attributes: { terms: { field: 'source_node.attributes.data', size: aggSize } },\n            node_master_attributes: { terms: { field: 'source_node.attributes.master', size: aggSize } },\n            // for doing a join on the cluster state to determine if node is current master\n            node_ids: { terms: { field: 'source_node.uuid', size: aggSize } }\n          }\n        }\n      }\n    }\n  };\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var data = {\n      nodes: {},\n      totals: {\n        primary: 0, replica: 0, unassigned: { replica: 0, primary: 0 }\n      }\n    };\n\n    function createNewMetric() {\n      return {\n        status: 'green',\n        primary: 0,\n        replica: 0,\n        unassigned: {\n          replica: 0,\n          primary: 0\n        }\n      };\n    };\n\n    function setStats(bucket, metric, ident) {\n      var states = _.filter(bucket.states.buckets, ident);\n      states.forEach(function (state) {\n        metric.primary = state.primary.buckets.reduce(function (acc, state) {\n          if (state.key) acc += state.doc_count;\n          return acc;\n        }, metric.primary);\n        metric.replica = state.primary.buckets.reduce(function (acc, state) {\n          if (!state.key) acc += state.doc_count;\n          return acc;\n        }, metric.replica);\n      });\n    }\n\n    function processIndexShards(bucket) {\n      var metric = createNewMetric();\n      setStats(bucket, metric, { key: 'STARTED' });\n      setStats(bucket, metric.unassigned, function (bucket) {\n        return bucket.key !== 'STARTED' && bucket.key !== 'RELOCATING';\n      });\n      data.totals.primary += metric.primary;\n      data.totals.replica += metric.replica;\n      data.totals.unassigned.primary += metric.unassigned.primary;\n      data.totals.unassigned.replica += metric.unassigned.replica;\n      if (metric.unassigned.replica) metric.status = 'yellow';\n      if (metric.unassigned.primary) metric.status = 'red';\n      data[bucket.key] = metric;\n    };\n\n    // Mutate \"data\" with a nodes object having a field for every node\n    function processNodeShards(bucket) {\n      data.nodes[bucket.key] = {\n        shardCount: bucket.doc_count,\n        indexCount: bucket.index_count.value,\n        name: nodeAggVals.getLatestAggKey(bucket.node_names.buckets),\n        transport_address: nodeAggVals.getLatestAggKey(bucket.node_transport_address.buckets),\n        node_ids: bucket.node_ids.buckets.map(function (bucket) {\n          return bucket.key;\n        }),\n        attributes: {\n          data: nodeAggVals.getNodeAttribute(bucket.node_data_attributes.buckets),\n          master: nodeAggVals.getNodeAttribute(bucket.node_master_attributes.buckets)\n        }\n      };\n      data.nodes[bucket.key].resolver = data.nodes[bucket.key][nodeResolver];\n    }\n\n    if (resp && resp.hits && resp.hits.total !== 0) {\n      resp.aggregations.indices.buckets.forEach(processIndexShards);\n      resp.aggregations.nodes.buckets.forEach(processNodeShards);\n    }\n\n    _.forEach(data.nodes, function (node) {\n      node.type = calculateNodeType(node, lastState.cluster_state);\n    });\n\n    return data;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_shard_stats.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC9C,IAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;AACxC,IAAM,iBAAiB,GAAG,IAAI,CAAC,gCAAgC,CAAC,CAAC;AACjE,IAAM,WAAW,GAAG,IAAI,CAAC,0BAA0B,CAAC,CAAC;;AAErD,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAE,SAAS,EAAK;AAC5C,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACnC,MAAM,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACxD,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACzE,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACtC,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;AAC3C,MAAM,OAAO,GAAG,EAAE,CAAC;AACnB,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,QAAI,EAAE,QAAQ;AACd,UAAM,EAAE,CAAC,GAAG,CAAC;AACb,cAAU,EAAE,OAAO;AACnB,QAAI,EAAE;AACJ,UAAI,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACtC,WAAK,EAAE,WAAW,CAAC;AACjB,mBAAW,EAAE,WAAW;AACxB,eAAO,EAAE,CAAE,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,0BAA0B,CAAC,EAAE,EAAE,CAAE;OACpF,CAAC;AACF,UAAI,EAAE;AACJ,eAAO,EAAE;AACP,eAAK,EAAE;AACL,iBAAK,EAAE,aAAa;AACpB,gBAAI,EAAE,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC;WAC3C;AACD,cAAI,EAAE;AACJ,kBAAM,EAAE;AACN,mBAAK,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE;AAC9C,kBAAI,EAAE,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;aACxE;WACF;SACF;AACD,aAAK,EAAE;AACL,eAAK,EAAE;AACL,iBAAK,mBAAiB,YAAY,AAAE;AACpC,gBAAI,EAAE,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC;WAC3C;AACD,cAAI,EAAE;AACJ,uBAAW,EAAE,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,EAAE;AACtD,sBAAU,EAAE;AACV,mBAAK,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,OAAO,EAAE;AACnD,kBAAI,EAAE,EAAE,aAAa,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE;aACzD;AACD,kCAAsB,EAAE;AACtB,mBAAK,EAAE,EAAE,KAAK,EAAE,+BAA+B,EAAE,IAAI,EAAE,OAAO,EAAE;AAChE,kBAAI,EAAE,EAAE,aAAa,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE;aACzD;AACD,gCAAoB,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,6BAA6B,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE;AACxF,kCAAsB,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,+BAA+B,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE;;AAE5F,oBAAQ,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE;WAClE;SACF;OACF;KACF;GACF,CAAC;;AAEF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,QAAM,IAAI,GAAG;AACX,WAAK,EAAE,EAAE;AACT,YAAM,EAAE;AACN,eAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE;OAC/D;KACF,CAAC;;AAEF,aAAS,eAAe,GAAG;AACzB,aAAO;AACL,cAAM,EAAE,OAAO;AACf,eAAO,EAAE,CAAC;AACV,eAAO,EAAE,CAAC;AACV,kBAAU,EAAE;AACV,iBAAO,EAAE,CAAC;AACV,iBAAO,EAAE,CAAC;SACX;OACF,CAAC;KACH,CAAC;;AAEF,aAAS,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;AACvC,UAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AACtD,YAAM,CAAC,OAAO,CAAC,UAAC,KAAK,EAAK;AACxB,cAAM,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,EAAK;AAC5D,cAAI,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC;AACtC,iBAAO,GAAG,CAAC;SACZ,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;AACnB,cAAM,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,EAAK;AAC5D,cAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC;AACvC,iBAAO,GAAG,CAAC;SACZ,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;OACpB,CAAC,CAAC;KACJ;;AAED,aAAS,kBAAkB,CAAC,MAAM,EAAE;AAClC,UAAM,MAAM,GAAG,eAAe,EAAE,CAAC;AACjC,cAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC;AAC7C,cAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,EAAE,UAAC,MAAM;eAAK,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,MAAM,CAAC,GAAG,KAAK,YAAY;OAAA,CAAC,CAAC;AACzG,UAAI,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;AACtC,UAAI,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;AACtC,UAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;AAC5D,UAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;AAC5D,UAAI,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;AACxD,UAAI,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AACrD,UAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;KAC3B,CAAC;;;AAGF,aAAS,iBAAiB,CAAC,MAAM,EAAE;AACjC,UAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG;AACvB,kBAAU,EAAE,MAAM,CAAC,SAAS;AAC5B,kBAAU,EAAE,MAAM,CAAC,WAAW,CAAC,KAAK;AACpC,YAAI,EAAE,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;AAC5D,yBAAiB,EAAE,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,sBAAsB,CAAC,OAAO,CAAC;AACrF,gBAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM;iBAAI,MAAM,CAAC,GAAG;SAAA,CAAC;AAC3D,kBAAU,EAAE;AACV,cAAI,EAAE,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC;AACvE,gBAAM,EAAE,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,sBAAsB,CAAC,OAAO,CAAC;SAC5E;OACF,CAAC;AACF,UAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;KACxE;;AAED,QAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;AAC9C,UAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC9D,UAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;KAC5D;;AAED,KAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,UAAA,IAAI,EAAI;AAC5B,UAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,aAAa,CAAC,CAAC;KAC9D,CAAC,CAAC;;AAEH,WAAO,IAAI,CAAC;GAEb,CAAC,CAAC;CACJ,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_shard_stats.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query');\nconst root = require('requirefrom')('');\nconst calculateNodeType = root('server/lib/calculate_node_type');\nconst nodeAggVals = root('server/lib/node_agg_vals');\n\nmodule.exports = (req, indices, lastState) => {\n  const config = req.server.config();\n  const nodeResolver = config.get('marvel.node_resolver');\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n  const aggSize = 10;\n  const params = {\n    index: indices,\n    type: 'shards',\n    ignore: [404],\n    searchType: 'count',\n    body: {\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        clusterUuid: clusterUuid,\n        filters: [ { term: { state_uuid: _.get(lastState, 'cluster_state.state_uuid') } } ]\n      }),\n      aggs: {\n        indices: {\n          terms: {\n            field: 'shard.index',\n            size: config.get('marvel.max_bucket_size')\n          },\n          aggs: {\n            states: {\n              terms: { field: 'shard.state', size: aggSize },\n              aggs: { primary: { terms: { field: 'shard.primary', size: aggSize } } }\n            }\n          }\n        },\n        nodes: {\n          terms: {\n            field: `source_node.${nodeResolver}`,\n            size: config.get('marvel.max_bucket_size')\n          },\n          aggs: {\n            index_count: { cardinality: { field: 'shard.index' } },\n            node_names: {\n              terms: { field: 'source_node.name', size: aggSize },\n              aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n            },\n            node_transport_address: {\n              terms: { field: 'source_node.transport_address', size: aggSize },\n              aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n            },\n            node_data_attributes: { terms: { field: 'source_node.attributes.data', size: aggSize } },\n            node_master_attributes: { terms: { field: 'source_node.attributes.master', size: aggSize } },\n            // for doing a join on the cluster state to determine if node is current master\n            node_ids: { terms: { field: 'source_node.uuid', size: aggSize } }\n          },\n        }\n      }\n    }\n  };\n\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    const data = {\n      nodes: {},\n      totals: {\n        primary: 0, replica: 0, unassigned: { replica: 0, primary: 0 }\n      }\n    };\n\n    function createNewMetric() {\n      return {\n        status: 'green',\n        primary: 0,\n        replica: 0,\n        unassigned: {\n          replica: 0,\n          primary: 0\n        }\n      };\n    };\n\n    function setStats(bucket, metric, ident) {\n      const states = _.filter(bucket.states.buckets, ident);\n      states.forEach((state) => {\n        metric.primary = state.primary.buckets.reduce((acc, state) => {\n          if (state.key) acc += state.doc_count;\n          return acc;\n        }, metric.primary);\n        metric.replica = state.primary.buckets.reduce((acc, state) => {\n          if (!state.key) acc += state.doc_count;\n          return acc;\n        }, metric.replica);\n      });\n    }\n\n    function processIndexShards(bucket) {\n      const metric = createNewMetric();\n      setStats(bucket, metric, { key: 'STARTED' });\n      setStats(bucket, metric.unassigned, (bucket) => bucket.key !== 'STARTED' && bucket.key !== 'RELOCATING');\n      data.totals.primary += metric.primary;\n      data.totals.replica += metric.replica;\n      data.totals.unassigned.primary += metric.unassigned.primary;\n      data.totals.unassigned.replica += metric.unassigned.replica;\n      if (metric.unassigned.replica) metric.status = 'yellow';\n      if (metric.unassigned.primary) metric.status = 'red';\n      data[bucket.key] = metric;\n    };\n\n    // Mutate \"data\" with a nodes object having a field for every node\n    function processNodeShards(bucket) {\n      data.nodes[bucket.key] = {\n        shardCount: bucket.doc_count,\n        indexCount: bucket.index_count.value,\n        name: nodeAggVals.getLatestAggKey(bucket.node_names.buckets),\n        transport_address: nodeAggVals.getLatestAggKey(bucket.node_transport_address.buckets),\n        node_ids: bucket.node_ids.buckets.map(bucket => bucket.key),\n        attributes: {\n          data: nodeAggVals.getNodeAttribute(bucket.node_data_attributes.buckets),\n          master: nodeAggVals.getNodeAttribute(bucket.node_master_attributes.buckets)\n        }\n      };\n      data.nodes[bucket.key].resolver = data.nodes[bucket.key][nodeResolver];\n    }\n\n    if (resp && resp.hits && resp.hits.total !== 0) {\n      resp.aggregations.indices.buckets.forEach(processIndexShards);\n      resp.aggregations.nodes.buckets.forEach(processNodeShards);\n    }\n\n    _.forEach(data.nodes, node => {\n      node.type = calculateNodeType(node, lastState.cluster_state);\n    });\n\n    return data;\n\n  });\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/calculate_node_type.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "/*\n * Determine node type using following rules:\n *  - data only node: --node.master=false\n *  - master only node: --node.data=false\n *  - client only node: --node.data=false --node.master=false\n *  https://www.elastic.co/guide/en/elasticsearch/reference/2.x/modules-node.html\n */\n'use strict';\n\nvar _require = require('lodash');\n\nvar includes = _require.includes;\nvar isUndefined = _require.isUndefined;\n\nmodule.exports = function (node, state) {\n  var attrs = node.attributes || {};\n\n  function mightBe(attr) {\n    return attr === 'true' || isUndefined(attr);\n  }\n\n  function isNot(attr) {\n    return attr === 'false';\n  }\n\n  // NOTE: calculating if node is master node is the only thing node ID should be used for\n  if (includes(node.node_ids, state.master_node)) return 'master';\n\n  if (isNot(attrs.data) && isNot(attrs.master)) return 'client';\n  if (mightBe(attrs.master) && isNot(attrs.data)) return 'master_only';\n  if (mightBe(attrs.data) && isNot(attrs.master)) return 'data';\n  return 'node';\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9jYWxjdWxhdGVfbm9kZV90eXBlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztlQU9rQyxPQUFPLENBQUMsUUFBUSxDQUFDOztJQUEzQyxRQUFRLFlBQVIsUUFBUTtJQUFFLFdBQVcsWUFBWCxXQUFXOztBQUU3QixNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsSUFBSSxFQUFFLEtBQUssRUFBSztBQUNoQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxJQUFJLEVBQUUsQ0FBQzs7QUFFcEMsV0FBUyxPQUFPLENBQUMsSUFBSSxFQUFFO0FBQ3JCLFdBQU8sSUFBSSxLQUFLLE1BQU0sSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7R0FDN0M7O0FBRUQsV0FBUyxLQUFLLENBQUMsSUFBSSxFQUFFO0FBQ25CLFdBQU8sSUFBSSxLQUFLLE9BQU8sQ0FBQztHQUN6Qjs7O0FBR0QsTUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsV0FBVyxDQUFDLEVBQUUsT0FBTyxRQUFRLENBQUM7O0FBRWhFLE1BQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sUUFBUSxDQUFDO0FBQzlELE1BQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU8sYUFBYSxDQUFDO0FBQ3JFLE1BQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sTUFBTSxDQUFDO0FBQzlELFNBQU8sTUFBTSxDQUFDO0NBQ2YsQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvY2FsY3VsYXRlX25vZGVfdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBEZXRlcm1pbmUgbm9kZSB0eXBlIHVzaW5nIGZvbGxvd2luZyBydWxlczpcbiAqICAtIGRhdGEgb25seSBub2RlOiAtLW5vZGUubWFzdGVyPWZhbHNlXG4gKiAgLSBtYXN0ZXIgb25seSBub2RlOiAtLW5vZGUuZGF0YT1mYWxzZVxuICogIC0gY2xpZW50IG9ubHkgbm9kZTogLS1ub2RlLmRhdGE9ZmFsc2UgLS1ub2RlLm1hc3Rlcj1mYWxzZVxuICogIGh0dHBzOi8vd3d3LmVsYXN0aWMuY28vZ3VpZGUvZW4vZWxhc3RpY3NlYXJjaC9yZWZlcmVuY2UvMi54L21vZHVsZXMtbm9kZS5odG1sXG4gKi9cbmNvbnN0IHsgaW5jbHVkZXMsIGlzVW5kZWZpbmVkIH0gPSByZXF1aXJlKCdsb2Rhc2gnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAobm9kZSwgc3RhdGUpID0+IHtcbiAgY29uc3QgYXR0cnMgPSBub2RlLmF0dHJpYnV0ZXMgfHwge307XG5cbiAgZnVuY3Rpb24gbWlnaHRCZShhdHRyKSB7XG4gICAgcmV0dXJuIGF0dHIgPT09ICd0cnVlJyB8fCBpc1VuZGVmaW5lZChhdHRyKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGlzTm90KGF0dHIpIHtcbiAgICByZXR1cm4gYXR0ciA9PT0gJ2ZhbHNlJztcbiAgfVxuXG4gIC8vIE5PVEU6IGNhbGN1bGF0aW5nIGlmIG5vZGUgaXMgbWFzdGVyIG5vZGUgaXMgdGhlIG9ubHkgdGhpbmcgbm9kZSBJRCBzaG91bGQgYmUgdXNlZCBmb3JcbiAgaWYgKGluY2x1ZGVzKG5vZGUubm9kZV9pZHMsIHN0YXRlLm1hc3Rlcl9ub2RlKSkgcmV0dXJuICdtYXN0ZXInO1xuXG4gIGlmIChpc05vdChhdHRycy5kYXRhKSAmJiBpc05vdChhdHRycy5tYXN0ZXIpKSByZXR1cm4gJ2NsaWVudCc7XG4gIGlmIChtaWdodEJlKGF0dHJzLm1hc3RlcikgJiYgaXNOb3QoYXR0cnMuZGF0YSkpIHJldHVybiAnbWFzdGVyX29ubHknO1xuICBpZiAobWlnaHRCZShhdHRycy5kYXRhKSAmJiBpc05vdChhdHRycy5tYXN0ZXIpKSByZXR1cm4gJ2RhdGEnO1xuICByZXR1cm4gJ25vZGUnO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/calculate_node_type.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;eAOkC,OAAO,CAAC,QAAQ,CAAC;;IAA3C,QAAQ,YAAR,QAAQ;IAAE,WAAW,YAAX,WAAW;;AAE7B,MAAM,CAAC,OAAO,GAAG,UAAC,IAAI,EAAE,KAAK,EAAK;AAChC,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;;AAEpC,WAAS,OAAO,CAAC,IAAI,EAAE;AACrB,WAAO,IAAI,KAAK,MAAM,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;GAC7C;;AAED,WAAS,KAAK,CAAC,IAAI,EAAE;AACnB,WAAO,IAAI,KAAK,OAAO,CAAC;GACzB;;;AAGD,MAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,WAAW,CAAC,EAAE,OAAO,QAAQ,CAAC;;AAEhE,MAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,OAAO,QAAQ,CAAC;AAC9D,MAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,OAAO,aAAa,CAAC;AACrE,MAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,OAAO,MAAM,CAAC;AAC9D,SAAO,MAAM,CAAC;CACf,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/calculate_node_type.js",
      "sourcesContent": [
        "/*\n * Determine node type using following rules:\n *  - data only node: --node.master=false\n *  - master only node: --node.data=false\n *  - client only node: --node.data=false --node.master=false\n *  https://www.elastic.co/guide/en/elasticsearch/reference/2.x/modules-node.html\n */\nconst { includes, isUndefined } = require('lodash');\n\nmodule.exports = (node, state) => {\n  const attrs = node.attributes || {};\n\n  function mightBe(attr) {\n    return attr === 'true' || isUndefined(attr);\n  }\n\n  function isNot(attr) {\n    return attr === 'false';\n  }\n\n  // NOTE: calculating if node is master node is the only thing node ID should be used for\n  if (includes(node.node_ids, state.master_node)) return 'master';\n\n  if (isNot(attrs.data) && isNot(attrs.master)) return 'client';\n  if (mightBe(attrs.master) && isNot(attrs.data)) return 'master_only';\n  if (mightBe(attrs.data) && isNot(attrs.master)) return 'data';\n  return 'node';\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/node_agg_vals.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "last",
              "sortBy",
              "get"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "last",
                "local": "last"
              },
              {
                "kind": "named",
                "imported": "sortBy",
                "local": "sortBy"
              },
              {
                "kind": "named",
                "imported": "get",
                "local": "get"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getLatestAggKey",
            "getNodeAttribute"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getLatestAggKey",
              "exported": "getLatestAggKey"
            },
            {
              "kind": "local",
              "local": "getNodeAttribute",
              "exported": "getNodeAttribute"
            }
          ]
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "/*\n * Utils for working with getting values out of nodes aggregations (different\n * information about nodes because of data changing after node restart)\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getLatestAggKey = getLatestAggKey;\nexports.getNodeAttribute = getNodeAttribute;\n\nvar _lodash = require('lodash');\n\n// Get the key from the aggregation with the latest timestamp\n\nfunction getLatestAggKey(buckets) {\n  return (0, _lodash.last)((0, _lodash.sortBy)(buckets, function (b) {\n    return (0, _lodash.get)(b, 'max_timestamp.value');\n  })).key;\n}\n\n/* Get the last attributes from the aggregation\n * Or undefined, if no attributes were set\n * NOTE: this is lazy because attributes are not sorted. We expect the\n * attributes to not change across node restarts\n */\n\nfunction getNodeAttribute(buckets) {\n  // nothing in the bucket, set to undefined\n  if (buckets.length === 0) return;\n  // boolean-ish string\n  return (0, _lodash.last)(buckets).key_as_string;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9ub2RlX2FnZ192YWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7c0JBS2tDLFFBQVE7Ozs7QUFHbkMsU0FBUyxlQUFlLENBQUMsT0FBTyxFQUFFO0FBQ3ZDLFNBQU8sa0JBQUssb0JBQU8sT0FBTyxFQUFHLFVBQUEsQ0FBQztXQUFJLGlCQUFJLENBQUMsRUFBRSxxQkFBcUIsQ0FBQztHQUFBLENBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQztDQUN4RTs7Ozs7Ozs7QUFPTSxTQUFTLGdCQUFnQixDQUFDLE9BQU8sRUFBRTs7QUFFeEMsTUFBSSxPQUFPLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRSxPQUFPOztBQUVqQyxTQUFPLGtCQUFLLE9BQU8sQ0FBQyxDQUFDLGFBQWEsQ0FBQztDQUNwQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvbm9kZV9hZ2dfdmFscy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBVdGlscyBmb3Igd29ya2luZyB3aXRoIGdldHRpbmcgdmFsdWVzIG91dCBvZiBub2RlcyBhZ2dyZWdhdGlvbnMgKGRpZmZlcmVudFxuICogaW5mb3JtYXRpb24gYWJvdXQgbm9kZXMgYmVjYXVzZSBvZiBkYXRhIGNoYW5naW5nIGFmdGVyIG5vZGUgcmVzdGFydClcbiAqL1xuXG5pbXBvcnQgeyBsYXN0LCBzb3J0QnksIGdldCB9IGZyb20gJ2xvZGFzaCc7XG5cbi8vIEdldCB0aGUga2V5IGZyb20gdGhlIGFnZ3JlZ2F0aW9uIHdpdGggdGhlIGxhdGVzdCB0aW1lc3RhbXBcbmV4cG9ydCBmdW5jdGlvbiBnZXRMYXRlc3RBZ2dLZXkoYnVja2V0cykge1xuICByZXR1cm4gbGFzdChzb3J0QnkoYnVja2V0cywgKGIgPT4gZ2V0KGIsICdtYXhfdGltZXN0YW1wLnZhbHVlJykpKSkua2V5O1xufVxuXG4vKiBHZXQgdGhlIGxhc3QgYXR0cmlidXRlcyBmcm9tIHRoZSBhZ2dyZWdhdGlvblxuICogT3IgdW5kZWZpbmVkLCBpZiBubyBhdHRyaWJ1dGVzIHdlcmUgc2V0XG4gKiBOT1RFOiB0aGlzIGlzIGxhenkgYmVjYXVzZSBhdHRyaWJ1dGVzIGFyZSBub3Qgc29ydGVkLiBXZSBleHBlY3QgdGhlXG4gKiBhdHRyaWJ1dGVzIHRvIG5vdCBjaGFuZ2UgYWNyb3NzIG5vZGUgcmVzdGFydHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE5vZGVBdHRyaWJ1dGUoYnVja2V0cykge1xuICAvLyBub3RoaW5nIGluIHRoZSBidWNrZXQsIHNldCB0byB1bmRlZmluZWRcbiAgaWYgKGJ1Y2tldHMubGVuZ3RoID09PSAwKSByZXR1cm47XG4gIC8vIGJvb2xlYW4taXNoIHN0cmluZ1xuICByZXR1cm4gbGFzdChidWNrZXRzKS5rZXlfYXNfc3RyaW5nO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/node_agg_vals.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;sBAKkC,QAAQ;;;;AAGnC,SAAS,eAAe,CAAC,OAAO,EAAE;AACvC,SAAO,kBAAK,oBAAO,OAAO,EAAG,UAAA,CAAC;WAAI,iBAAI,CAAC,EAAE,qBAAqB,CAAC;GAAA,CAAE,CAAC,CAAC,GAAG,CAAC;CACxE;;;;;;;;AAOM,SAAS,gBAAgB,CAAC,OAAO,EAAE;;AAExC,MAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO;;AAEjC,SAAO,kBAAK,OAAO,CAAC,CAAC,aAAa,CAAC;CACpC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/node_agg_vals.js",
      "sourcesContent": [
        "/*\n * Utils for working with getting values out of nodes aggregations (different\n * information about nodes because of data changing after node restart)\n */\n\nimport { last, sortBy, get } from 'lodash';\n\n// Get the key from the aggregation with the latest timestamp\nexport function getLatestAggKey(buckets) {\n  return last(sortBy(buckets, (b => get(b, 'max_timestamp.value')))).key;\n}\n\n/* Get the last attributes from the aggregation\n * Or undefined, if no attributes were set\n * NOTE: this is lazy because attributes are not sorted. We expect the\n * attributes to not change across node restarts\n */\nexport function getNodeAttribute(buckets) {\n  // nothing in the bucket, set to undefined\n  if (buckets.length === 0) return;\n  // boolean-ish string\n  return last(buckets).key_as_string;\n}\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_last_recovery.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query.js');\nmodule.exports = function (req, indices) {\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n\n  var params = {\n    index: indices,\n    ignore: [404],\n    type: 'index_recovery',\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        end: end,\n        clusterUuid: clusterUuid\n      })\n    }\n  };\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var total = _.get(resp, 'hits.total', 0);\n    if (!total) return [];\n    var data = _.get(resp.hits.hits[0], '_source.index_recovery.shards') || [];\n    data.sort(function (a, b) {\n      return b.start_time_in_mllis - a.start_time_in_mllis;\n    });\n    return data;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfbGFzdF9yZWNvdmVyeS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM1QixJQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUNqRCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsR0FBRyxFQUFFLE9BQU8sRUFBSztBQUNqQyxNQUFNLGVBQWUsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDO0FBQ3pFLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQztBQUN4QyxNQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7QUFDdEMsTUFBTSxXQUFXLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUM7O0FBRTNDLE1BQU0sTUFBTSxHQUFHO0FBQ2IsU0FBSyxFQUFFLE9BQU87QUFDZCxVQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUM7QUFDYixRQUFJLEVBQUUsZ0JBQWdCO0FBQ3RCLFFBQUksRUFBRTtBQUNKLFVBQUksRUFBRSxDQUFDO0FBQ1AsVUFBSSxFQUFFLEVBQUUsU0FBUyxFQUFFLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxFQUFFO0FBQ3RDLFdBQUssRUFBRSxXQUFXLENBQUM7QUFDakIsV0FBRyxFQUFFLEdBQUc7QUFDUixtQkFBVyxFQUFFLFdBQVc7T0FDekIsQ0FBQztLQUNIO0dBQ0YsQ0FBQzs7QUFFRixTQUFPLGVBQWUsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUM1QyxJQUFJLENBQUMsVUFBQyxJQUFJLEVBQUs7QUFDZCxRQUFJLEtBQUssR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDekMsUUFBSSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsQ0FBQztBQUN0QixRQUFNLElBQUksR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLCtCQUErQixDQUFDLElBQUksRUFBRSxDQUFDO0FBQzdFLFFBQUksQ0FBQyxJQUFJLENBQUMsVUFBQyxDQUFDLEVBQUUsQ0FBQzthQUFLLENBQUMsQ0FBQyxtQkFBbUIsR0FBRyxDQUFDLENBQUMsbUJBQW1CO0tBQUEsQ0FBQyxDQUFDO0FBQ25FLFdBQU8sSUFBSSxDQUFDO0dBQ2IsQ0FBQyxDQUFDO0NBRUosQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvZ2V0X2xhc3RfcmVjb3ZlcnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5jb25zdCBjcmVhdGVRdWVyeSA9IHJlcXVpcmUoJy4vY3JlYXRlX3F1ZXJ5LmpzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IChyZXEsIGluZGljZXMpID0+IHtcbiAgY29uc3QgY2FsbFdpdGhSZXF1ZXN0ID0gcmVxLnNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guY2FsbFdpdGhSZXF1ZXN0O1xuICBjb25zdCBzdGFydCA9IHJlcS5wYXlsb2FkLnRpbWVSYW5nZS5taW47XG4gIGNvbnN0IGVuZCA9IHJlcS5wYXlsb2FkLnRpbWVSYW5nZS5tYXg7XG4gIGNvbnN0IGNsdXN0ZXJVdWlkID0gcmVxLnBhcmFtcy5jbHVzdGVyVXVpZDtcblxuICBjb25zdCBwYXJhbXMgPSB7XG4gICAgaW5kZXg6IGluZGljZXMsXG4gICAgaWdub3JlOiBbNDA0XSxcbiAgICB0eXBlOiAnaW5kZXhfcmVjb3ZlcnknLFxuICAgIGJvZHk6IHtcbiAgICAgIHNpemU6IDEsXG4gICAgICBzb3J0OiB7IHRpbWVzdGFtcDogeyBvcmRlcjogJ2Rlc2MnIH0gfSxcbiAgICAgIHF1ZXJ5OiBjcmVhdGVRdWVyeSh7XG4gICAgICAgIGVuZDogZW5kLFxuICAgICAgICBjbHVzdGVyVXVpZDogY2x1c3RlclV1aWRcbiAgICAgIH0pXG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBjYWxsV2l0aFJlcXVlc3QocmVxLCAnc2VhcmNoJywgcGFyYW1zKVxuICAudGhlbigocmVzcCkgPT4ge1xuICAgIGxldCB0b3RhbCA9IF8uZ2V0KHJlc3AsICdoaXRzLnRvdGFsJywgMCk7XG4gICAgaWYgKCF0b3RhbCkgcmV0dXJuIFtdO1xuICAgIGNvbnN0IGRhdGEgPSBfLmdldChyZXNwLmhpdHMuaGl0c1swXSwgJ19zb3VyY2UuaW5kZXhfcmVjb3Zlcnkuc2hhcmRzJykgfHwgW107XG4gICAgZGF0YS5zb3J0KChhLCBiKSA9PiBiLnN0YXJ0X3RpbWVfaW5fbWxsaXMgLSBhLnN0YXJ0X3RpbWVfaW5fbWxsaXMpO1xuICAgIHJldHVybiBkYXRhO1xuICB9KTtcblxufTtcblxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_last_recovery.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACjD,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAK;AACjC,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACzE,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACtC,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;;AAE3C,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,UAAM,EAAE,CAAC,GAAG,CAAC;AACb,QAAI,EAAE,gBAAgB;AACtB,QAAI,EAAE;AACJ,UAAI,EAAE,CAAC;AACP,UAAI,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACtC,WAAK,EAAE,WAAW,CAAC;AACjB,WAAG,EAAE,GAAG;AACR,mBAAW,EAAE,WAAW;OACzB,CAAC;KACH;GACF,CAAC;;AAEF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,QAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;AACzC,QAAI,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC;AACtB,QAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,+BAA+B,CAAC,IAAI,EAAE,CAAC;AAC7E,QAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;aAAK,CAAC,CAAC,mBAAmB,GAAG,CAAC,CAAC,mBAAmB;KAAA,CAAC,CAAC;AACnE,WAAO,IAAI,CAAC;GACb,CAAC,CAAC;CAEJ,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_last_recovery.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query.js');\nmodule.exports = (req, indices) => {\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n\n  const params = {\n    index: indices,\n    ignore: [404],\n    type: 'index_recovery',\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        end: end,\n        clusterUuid: clusterUuid\n      })\n    }\n  };\n\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    let total = _.get(resp, 'hits.total', 0);\n    if (!total) return [];\n    const data = _.get(resp.hits.hits[0], '_source.index_recovery.shards') || [];\n    data.sort((a, b) => b.start_time_in_mllis - a.start_time_in_mllis);\n    return data;\n  });\n\n};\n\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/calculate_cluster_status.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "\"use strict\";\n\nmodule.exports = function calculateClusterStatus(body) {\n  body.clusterStatus.unassignedShards = body.shardStats.totals.unassigned.replica + body.shardStats.totals.unassigned.primary;\n  body.clusterStatus.totalShards = body.clusterStatus.totalShards + body.clusterStatus.unassignedShards;\n  return body;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9jYWxjdWxhdGVfY2x1c3Rlcl9zdGF0dXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLENBQUMsT0FBTyxHQUFHLFNBQVMsc0JBQXNCLENBQUMsSUFBSSxFQUFFO0FBQ3JELE1BQUksQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDO0FBQzVILE1BQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUM7QUFDdEcsU0FBTyxJQUFJLENBQUM7Q0FDYixDQUFDIiwiZmlsZSI6Ii9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9jYWxjdWxhdGVfY2x1c3Rlcl9zdGF0dXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNhbGN1bGF0ZUNsdXN0ZXJTdGF0dXMoYm9keSkge1xuICBib2R5LmNsdXN0ZXJTdGF0dXMudW5hc3NpZ25lZFNoYXJkcyA9IGJvZHkuc2hhcmRTdGF0cy50b3RhbHMudW5hc3NpZ25lZC5yZXBsaWNhICsgYm9keS5zaGFyZFN0YXRzLnRvdGFscy51bmFzc2lnbmVkLnByaW1hcnk7XG4gIGJvZHkuY2x1c3RlclN0YXR1cy50b3RhbFNoYXJkcyA9IGJvZHkuY2x1c3RlclN0YXR1cy50b3RhbFNoYXJkcyArIGJvZHkuY2x1c3RlclN0YXR1cy51bmFzc2lnbmVkU2hhcmRzO1xuICByZXR1cm4gYm9keTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/calculate_cluster_status.js"
      ],
      "names": [],
      "mappings": ";;AAAA,MAAM,CAAC,OAAO,GAAG,SAAS,sBAAsB,CAAC,IAAI,EAAE;AACrD,MAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;AAC5H,MAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;AACtG,SAAO,IAAI,CAAC;CACb,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/calculate_cluster_status.js",
      "sourcesContent": [
        "module.exports = function calculateClusterStatus(body) {\n  body.clusterStatus.unassignedShards = body.shardStats.totals.unassigned.replica + body.shardStats.totals.unassigned.primary;\n  body.clusterStatus.totalShards = body.clusterStatus.totalShards + body.clusterStatus.unassignedShards;\n  return body;\n};\n"
      ]
    },
    "mtime": 1466441064000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/handle_error.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "boom",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Boom"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "handleError"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "handleError",
              "exported": "default"
            }
          ]
        }
      },
      "usedHelpers": [
        "interop-require-default"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = handleError;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _boom = require('boom');\n\nvar _boom2 = _interopRequireDefault(_boom);\n\n/**\n * TODO this behavior should be centralized and shared with all plugins\n */\n\nfunction handleError(err, req) {\n  req.log(['marvel', 'error'], err); // error stack will also be logged\n  if (err.isBoom) return err;\n  var msg = err.msg || err.message;\n  if (err.statusCode === 403) return _boom2['default'].forbidden(msg);\n  if (msg === 'Not Found') return _boom2['default'].notFound();\n  return _boom2['default'].badRequest(msg);\n}\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9oYW5kbGVfZXJyb3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7cUJBS3dCLFdBQVc7Ozs7b0JBTGxCLE1BQU07Ozs7Ozs7O0FBS1IsU0FBUyxXQUFXLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRTtBQUM1QyxLQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ2xDLE1BQUksR0FBRyxDQUFDLE1BQU0sRUFBRSxPQUFPLEdBQUcsQ0FBQztBQUMzQixNQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUM7QUFDbkMsTUFBSSxHQUFHLENBQUMsVUFBVSxLQUFLLEdBQUcsRUFBRSxPQUFPLGtCQUFLLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN2RCxNQUFJLEdBQUcsS0FBSyxXQUFXLEVBQUUsT0FBTyxrQkFBSyxRQUFRLEVBQUUsQ0FBQztBQUNoRCxTQUFPLGtCQUFLLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUM3QiIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvaGFuZGxlX2Vycm9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJvb20gZnJvbSAnYm9vbSc7XG5cbi8qKlxuICogVE9ETyB0aGlzIGJlaGF2aW9yIHNob3VsZCBiZSBjZW50cmFsaXplZCBhbmQgc2hhcmVkIHdpdGggYWxsIHBsdWdpbnNcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaGFuZGxlRXJyb3IoZXJyLCByZXEpIHtcbiAgcmVxLmxvZyhbJ21hcnZlbCcsICdlcnJvciddLCBlcnIpOyAvLyBlcnJvciBzdGFjayB3aWxsIGFsc28gYmUgbG9nZ2VkXG4gIGlmIChlcnIuaXNCb29tKSByZXR1cm4gZXJyO1xuICBjb25zdCBtc2cgPSBlcnIubXNnIHx8IGVyci5tZXNzYWdlO1xuICBpZiAoZXJyLnN0YXR1c0NvZGUgPT09IDQwMykgcmV0dXJuIEJvb20uZm9yYmlkZGVuKG1zZyk7XG4gIGlmIChtc2cgPT09ICdOb3QgRm91bmQnKSByZXR1cm4gQm9vbS5ub3RGb3VuZCgpO1xuICByZXR1cm4gQm9vbS5iYWRSZXF1ZXN0KG1zZyk7XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/handle_error.js"
      ],
      "names": [],
      "mappings": ";;;;;qBAKwB,WAAW;;;;oBALlB,MAAM;;;;;;;;AAKR,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;AAC5C,KAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AAClC,MAAI,GAAG,CAAC,MAAM,EAAE,OAAO,GAAG,CAAC;AAC3B,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC;AACnC,MAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE,OAAO,kBAAK,SAAS,CAAC,GAAG,CAAC,CAAC;AACvD,MAAI,GAAG,KAAK,WAAW,EAAE,OAAO,kBAAK,QAAQ,EAAE,CAAC;AAChD,SAAO,kBAAK,UAAU,CAAC,GAAG,CAAC,CAAC;CAC7B",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/handle_error.js",
      "sourcesContent": [
        "import Boom from 'boom';\n\n/**\n * TODO this behavior should be centralized and shared with all plugins\n */\nexport default function handleError(err, req) {\n  req.log(['marvel', 'error'], err); // error stack will also be logged\n  if (err.isBoom) return err;\n  const msg = err.msg || err.message;\n  if (err.statusCode === 403) return Boom.forbidden(msg);\n  if (msg === 'Not Found') return Boom.notFound();\n  return Boom.badRequest(msg);\n}\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/indices.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar Promise = require('bluebird');\nvar Joi = require('joi');\nvar root = require('requirefrom')('');\nvar calculateIndices = root('server/lib/calculate_indices');\nvar getLastState = root('server/lib/get_last_state');\nvar getClusterStatus = root('server/lib/get_cluster_status');\nvar getIndexSummary = root('server/lib/get_index_summary');\nvar getMetrics = root('server/lib/get_metrics');\nvar getListing = root('server/lib/get_listing_indices');\nvar getShardStats = root('server/lib/get_shard_stats');\nvar getShardAllocation = root('server/lib/get_shard_allocation');\nvar getUnassignedShards = root('server/lib/get_unassigned_shards');\nvar calculateClusterStatus = root('server/lib/calculate_cluster_status');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/indices',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required(),\n          listingMetrics: Joi.array().required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var start = req.payload.timeRange.min;\n      var end = req.payload.timeRange.max;\n      calculateIndices(req, start, end).then(function (indices) {\n        return getLastState(req, indices).then(function (lastState) {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            metrics: getMetrics(req, indices),\n            rows: getListing(req, indices),\n            shardStats: getShardStats(req, indices, lastState)\n          });\n        });\n      })\n      // Add the index status to each index from the shardStats\n      .then(function (body) {\n        body.rows.forEach(function (row) {\n          if (body.shardStats[row.name]) {\n            row.status = body.shardStats[row.name].status;\n            // column for a metric that is calculated in code vs. calculated in a query\n            // it's not given in req.payload.listingMetrics\n            _.merge(row, getUnassignedShards(body.shardStats[row.name]));\n          } else {\n            row.status = 'Unknown';\n            _.set(row, 'metrics.index_document_count.inapplicable', true);\n            _.set(row, 'metrics.index_size.inapplicable', true);\n            _.set(row, 'metrics.index_search_request_rate.inapplicable', true);\n            _.set(row, 'metrics.index_request_rate.inapplicable', true);\n            _.set(row, 'metrics.index_unassigned_shards.inapplicable', true);\n          }\n        });\n        return body;\n      })\n      // Send the response\n      .then(calculateClusterStatus).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/indices/{id}',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required(),\n          id: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var id = req.params.id;\n      var start = req.payload.timeRange.min;\n      var end = req.payload.timeRange.max;\n      calculateIndices(req, start, end).then(function (indices) {\n        return getLastState(req, indices).then(function (lastState) {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            indexSummary: getIndexSummary(req, indices),\n            metrics: getMetrics(req, indices, [{ term: { 'index_stats.index': id } }]),\n            shards: getShardAllocation(req, indices, [{ term: { 'shard.index': id } }], lastState),\n            shardStats: getShardStats(req, indices, lastState),\n            lastState: lastState\n          });\n        });\n      }).then(calculateClusterStatus).then(function (body) {\n        var shardStats = body.shardStats[id];\n        // check if we need a legacy workaround for Marvel 2.0 node data\n        if (shardStats) {\n          body.indexSummary.unassignedShards = shardStats.unassigned.primary + shardStats.unassigned.replica;\n          body.indexSummary.totalShards = shardStats.primary + shardStats.replica + body.indexSummary.unassignedShards;\n          body.indexSummary.status = shardStats.status;\n          body.indexSummary.shardStats = shardStats;\n        } else {\n          body.indexSummary.status = 'Not Available';\n          body.indexSummary.totalShards = 'N/A';\n          body.indexSummary.unassignedShards = 'N/A';\n          body.indexSummary.documents = 'N/A';\n          body.indexSummary.dataSize = 'N/A';\n        }\n        var shardNodes = _.get(body, 'shardStats.nodes');\n        body.nodes = {};\n        _.forEach(shardNodes, function (shardNode, resolver) {\n          body.nodes[resolver] = shardNode;\n        });\n        delete body.lastState;\n        return body;\n      }).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/indices.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/indices.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Joi = require('joi');\nconst root = require('requirefrom')('');\nconst calculateIndices = root('server/lib/calculate_indices');\nconst getLastState = root('server/lib/get_last_state');\nconst getClusterStatus = root('server/lib/get_cluster_status');\nconst getIndexSummary = root('server/lib/get_index_summary');\nconst getMetrics = root('server/lib/get_metrics');\nconst getListing = root('server/lib/get_listing_indices');\nconst getShardStats = root('server/lib/get_shard_stats');\nconst getShardAllocation = root('server/lib/get_shard_allocation');\nconst getUnassignedShards = root('server/lib/get_unassigned_shards');\nconst calculateClusterStatus = root('server/lib/calculate_cluster_status');\nconst handleError = root('server/lib/handle_error');\n\nmodule.exports = (server) => {\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/indices',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required(),\n          listingMetrics: Joi.array().required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const start = req.payload.timeRange.min;\n      const end = req.payload.timeRange.max;\n      calculateIndices(req, start, end)\n      .then(indices => {\n        return getLastState(req, indices)\n        .then(lastState => {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            metrics: getMetrics(req, indices),\n            rows: getListing(req, indices),\n            shardStats: getShardStats(req, indices, lastState)\n          });\n        });\n      })\n      // Add the index status to each index from the shardStats\n      .then((body) => {\n        body.rows.forEach((row) => {\n          if (body.shardStats[row.name]) {\n            row.status = body.shardStats[row.name].status;\n            // column for a metric that is calculated in code vs. calculated in a query\n            // it's not given in req.payload.listingMetrics\n            _.merge(row, getUnassignedShards(body.shardStats[row.name]));\n          } else {\n            row.status = 'Unknown';\n            _.set(row, 'metrics.index_document_count.inapplicable', true);\n            _.set(row, 'metrics.index_size.inapplicable', true);\n            _.set(row, 'metrics.index_search_request_rate.inapplicable', true);\n            _.set(row, 'metrics.index_request_rate.inapplicable', true);\n            _.set(row, 'metrics.index_unassigned_shards.inapplicable', true);\n          }\n        });\n        return body;\n      })\n      // Send the response\n      .then(calculateClusterStatus)\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/indices/{id}',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required(),\n          id: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const id = req.params.id;\n      const start = req.payload.timeRange.min;\n      const end = req.payload.timeRange.max;\n      calculateIndices(req, start, end)\n      .then(indices => {\n        return getLastState(req, indices)\n        .then(lastState => {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            indexSummary:  getIndexSummary(req, indices),\n            metrics: getMetrics(req, indices, [{ term: { 'index_stats.index': id } }]),\n            shards: getShardAllocation(req, indices, [{ term: { 'shard.index': id } }], lastState),\n            shardStats: getShardStats(req, indices, lastState),\n            lastState: lastState\n          });\n        });\n      })\n      .then(calculateClusterStatus)\n      .then(function (body) {\n        var shardStats = body.shardStats[id];\n        // check if we need a legacy workaround for Marvel 2.0 node data\n        if (shardStats) {\n          body.indexSummary.unassignedShards = shardStats.unassigned.primary + shardStats.unassigned.replica;\n          body.indexSummary.totalShards = shardStats.primary + shardStats.replica + body.indexSummary.unassignedShards;\n          body.indexSummary.status = shardStats.status;\n          body.indexSummary.shardStats = shardStats;\n        } else {\n          body.indexSummary.status = 'Not Available';\n          body.indexSummary.totalShards = 'N/A';\n          body.indexSummary.unassignedShards = 'N/A';\n          body.indexSummary.documents = 'N/A';\n          body.indexSummary.dataSize = 'N/A';\n        }\n        const shardNodes = _.get(body, 'shardStats.nodes');\n        body.nodes = {};\n        _.forEach(shardNodes, (shardNode, resolver) => {\n          body.nodes[resolver] = shardNode;\n        });\n        delete body.lastState;\n        return body;\n      })\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_index_summary.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query.js');\nmodule.exports = function (req, indices) {\n  // Alias callWithRequest so we don't have to use this long ugly string\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n\n  // Get the params from the POST body for the request\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n\n  // Build up the Elasticsearch request\n  var params = {\n    index: indices,\n    ignore: [404],\n    type: 'index_stats',\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        end: end,\n        clusterUuid: clusterUuid,\n        filters: [{\n          term: { 'index_stats.index': req.params.id }\n        }]\n      })\n    }\n  };\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var indexSummary = { documents: 0, dataSize: 0 };\n    var totals = _.get(resp, 'hits.hits[0]._source.index_stats.total');\n    if (totals) {\n      indexSummary.documents = _.get(totals, 'docs.count');\n      indexSummary.dataSize = _.get(totals, 'store.size_in_bytes');\n    }\n\n    return indexSummary;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfaW5kZXhfc3VtbWFyeS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM1QixJQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUNqRCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsR0FBRyxFQUFFLE9BQU8sRUFBSzs7QUFFakMsTUFBTSxlQUFlLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQzs7O0FBR3pFLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQztBQUN4QyxNQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7QUFDdEMsTUFBTSxXQUFXLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUM7OztBQUczQyxNQUFNLE1BQU0sR0FBRztBQUNiLFNBQUssRUFBRSxPQUFPO0FBQ2QsVUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDO0FBQ2IsUUFBSSxFQUFFLGFBQWE7QUFDbkIsUUFBSSxFQUFFO0FBQ0osVUFBSSxFQUFFLENBQUM7QUFDUCxVQUFJLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUU7QUFDdEMsV0FBSyxFQUFFLFdBQVcsQ0FBQztBQUNqQixXQUFHLEVBQUUsR0FBRztBQUNSLG1CQUFXLEVBQUUsV0FBVztBQUN4QixlQUFPLEVBQUUsQ0FBQztBQUNSLGNBQUksRUFBRSxFQUFFLG1CQUFtQixFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFO1NBQzdDLENBQUM7T0FDSCxDQUFDO0tBQ0g7R0FDRixDQUFDOztBQUVGLFNBQU8sZUFBZSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQzVDLElBQUksQ0FBQyxVQUFDLElBQUksRUFBSztBQUNkLFFBQU0sWUFBWSxHQUFHLEVBQUUsU0FBUyxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFLENBQUM7QUFDbkQsUUFBTSxNQUFNLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsd0NBQXdDLENBQUMsQ0FBQztBQUNyRSxRQUFJLE1BQU0sRUFBRTtBQUNWLGtCQUFZLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFDO0FBQ3JELGtCQUFZLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLHFCQUFxQixDQUFDLENBQUM7S0FDOUQ7O0FBRUQsV0FBTyxZQUFZLENBQUM7R0FDckIsQ0FBQyxDQUFDO0NBQ0osQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvZ2V0X2luZGV4X3N1bW1hcnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5jb25zdCBjcmVhdGVRdWVyeSA9IHJlcXVpcmUoJy4vY3JlYXRlX3F1ZXJ5LmpzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IChyZXEsIGluZGljZXMpID0+IHtcbiAgLy8gQWxpYXMgY2FsbFdpdGhSZXF1ZXN0IHNvIHdlIGRvbid0IGhhdmUgdG8gdXNlIHRoaXMgbG9uZyB1Z2x5IHN0cmluZ1xuICBjb25zdCBjYWxsV2l0aFJlcXVlc3QgPSByZXEuc2VydmVyLnBsdWdpbnMuZWxhc3RpY3NlYXJjaC5jYWxsV2l0aFJlcXVlc3Q7XG5cbiAgLy8gR2V0IHRoZSBwYXJhbXMgZnJvbSB0aGUgUE9TVCBib2R5IGZvciB0aGUgcmVxdWVzdFxuICBjb25zdCBzdGFydCA9IHJlcS5wYXlsb2FkLnRpbWVSYW5nZS5taW47XG4gIGNvbnN0IGVuZCA9IHJlcS5wYXlsb2FkLnRpbWVSYW5nZS5tYXg7XG4gIGNvbnN0IGNsdXN0ZXJVdWlkID0gcmVxLnBhcmFtcy5jbHVzdGVyVXVpZDtcblxuICAvLyBCdWlsZCB1cCB0aGUgRWxhc3RpY3NlYXJjaCByZXF1ZXN0XG4gIGNvbnN0IHBhcmFtcyA9IHtcbiAgICBpbmRleDogaW5kaWNlcyxcbiAgICBpZ25vcmU6IFs0MDRdLFxuICAgIHR5cGU6ICdpbmRleF9zdGF0cycsXG4gICAgYm9keToge1xuICAgICAgc2l6ZTogMSxcbiAgICAgIHNvcnQ6IHsgdGltZXN0YW1wOiB7IG9yZGVyOiAnZGVzYycgfSB9LFxuICAgICAgcXVlcnk6IGNyZWF0ZVF1ZXJ5KHtcbiAgICAgICAgZW5kOiBlbmQsXG4gICAgICAgIGNsdXN0ZXJVdWlkOiBjbHVzdGVyVXVpZCxcbiAgICAgICAgZmlsdGVyczogW3tcbiAgICAgICAgICB0ZXJtOiB7ICdpbmRleF9zdGF0cy5pbmRleCc6IHJlcS5wYXJhbXMuaWQgfVxuICAgICAgICB9XVxuICAgICAgfSlcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGNhbGxXaXRoUmVxdWVzdChyZXEsICdzZWFyY2gnLCBwYXJhbXMpXG4gIC50aGVuKChyZXNwKSA9PiB7XG4gICAgY29uc3QgaW5kZXhTdW1tYXJ5ID0geyBkb2N1bWVudHM6IDAsIGRhdGFTaXplOiAwIH07XG4gICAgY29uc3QgdG90YWxzID0gXy5nZXQocmVzcCwgJ2hpdHMuaGl0c1swXS5fc291cmNlLmluZGV4X3N0YXRzLnRvdGFsJyk7XG4gICAgaWYgKHRvdGFscykge1xuICAgICAgaW5kZXhTdW1tYXJ5LmRvY3VtZW50cyA9IF8uZ2V0KHRvdGFscywgJ2RvY3MuY291bnQnKTtcbiAgICAgIGluZGV4U3VtbWFyeS5kYXRhU2l6ZSA9IF8uZ2V0KHRvdGFscywgJ3N0b3JlLnNpemVfaW5fYnl0ZXMnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaW5kZXhTdW1tYXJ5O1xuICB9KTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_index_summary.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACjD,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAK;;AAEjC,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;;;AAGzE,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACtC,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;;;AAG3C,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,UAAM,EAAE,CAAC,GAAG,CAAC;AACb,QAAI,EAAE,aAAa;AACnB,QAAI,EAAE;AACJ,UAAI,EAAE,CAAC;AACP,UAAI,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACtC,WAAK,EAAE,WAAW,CAAC;AACjB,WAAG,EAAE,GAAG;AACR,mBAAW,EAAE,WAAW;AACxB,eAAO,EAAE,CAAC;AACR,cAAI,EAAE,EAAE,mBAAmB,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE;SAC7C,CAAC;OACH,CAAC;KACH;GACF,CAAC;;AAEF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,QAAM,YAAY,GAAG,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;AACnD,QAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,wCAAwC,CAAC,CAAC;AACrE,QAAI,MAAM,EAAE;AACV,kBAAY,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;AACrD,kBAAY,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;KAC9D;;AAED,WAAO,YAAY,CAAC;GACrB,CAAC,CAAC;CACJ,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_index_summary.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query.js');\nmodule.exports = (req, indices) => {\n  // Alias callWithRequest so we don't have to use this long ugly string\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n\n  // Get the params from the POST body for the request\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n\n  // Build up the Elasticsearch request\n  const params = {\n    index: indices,\n    ignore: [404],\n    type: 'index_stats',\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        end: end,\n        clusterUuid: clusterUuid,\n        filters: [{\n          term: { 'index_stats.index': req.params.id }\n        }]\n      })\n    }\n  };\n\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    const indexSummary = { documents: 0, dataSize: 0 };\n    const totals = _.get(resp, 'hits.hits[0]._source.index_stats.total');\n    if (totals) {\n      indexSummary.documents = _.get(totals, 'docs.count');\n      indexSummary.dataSize = _.get(totals, 'store.size_in_bytes');\n    }\n\n    return indexSummary;\n  });\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_listing_indices.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "/* Run an aggregation on index_stats to get stat data for the selected time\n * range for all the active indices. The stat data is built up with passed-in\n * options that are given by the UI client as an array\n * (req.payload.listingMetrics). Every option is a key to a configuration value\n * in public/lib/metrics. Those options are used to build up a query with a\n * bunch of date histograms.\n *\n * After the result comes back from Elasticsearch, we process the date\n * histogram data with mapListingResponse to transform it into X/Y coordinates\n * for charting. This method is shared by the get_listing_nodes lib.\n */\n\n'use strict';\n\nvar _ = require('lodash');\nvar moment = require('moment');\nvar createQuery = require('./create_query.js');\nvar calcAuto = require('./calculate_auto');\nvar root = require('requirefrom')('');\nvar metrics = root('public/lib/metrics');\nvar mapListingResponse = require('./map_listing_response');\n\nmodule.exports = function (req, indices) {\n  var config = req.server.config();\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var listingMetrics = req.payload.listingMetrics || [];\n  var start = moment.utc(req.payload.timeRange.min).valueOf();\n  var orgStart = start;\n  var end = moment.utc(req.payload.timeRange.max).valueOf();\n  var clusterUuid = req.params.clusterUuid;\n  var maxBucketSize = config.get('marvel.max_bucket_size');\n  var minIntervalSeconds = config.get('marvel.min_interval_seconds');\n\n  var params = {\n    index: indices,\n    type: 'index_stats',\n    searchType: 'count',\n    ignoreUnavailable: true,\n    ignore: [404],\n    body: {\n      query: createQuery({ start: start, end: end, clusterUuid: clusterUuid }),\n      aggs: {}\n    }\n  };\n\n  var max = end;\n  var duration = moment.duration(max - orgStart, 'ms');\n  var bucketSize = Math.max(minIntervalSeconds, calcAuto.near(100, duration).asSeconds());\n  // performance optimization to avoid overwhelming amount of results\n  start = moment.utc(end).subtract(2, 'minutes').valueOf();\n  var min = start;\n\n  var aggs = {\n    items: {\n      terms: { field: 'index_stats.index', size: maxBucketSize },\n      aggs: {}\n    }\n  };\n\n  listingMetrics.forEach(function (id) {\n    var metric = metrics[id];\n    var metricAgg = null;\n    if (!metric) return;\n    if (!metric.aggs) {\n      metricAgg = {\n        metric: {},\n        metric_deriv: {\n          derivative: { buckets_path: 'metric', unit: 'second' }\n        }\n      };\n      metricAgg.metric[metric.metricAgg] = {\n        field: metric.field\n      };\n    }\n\n    aggs.items.aggs[id] = {\n      date_histogram: {\n        field: 'timestamp',\n        min_doc_count: 0,\n        interval: bucketSize + 's',\n        extended_bounds: {\n          min: min,\n          max: max\n        }\n      },\n      aggs: metric.aggs || metricAgg\n    };\n  });\n\n  params.body.aggs = aggs;\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    if (!resp.hits.total) {\n      return [];\n    }\n    // call the mapping\n    return mapListingResponse({\n      type: 'indices',\n      items: resp.aggregations.items.buckets,\n      listingMetrics: listingMetrics,\n      min: min,\n      max: max,\n      bucketSize: bucketSize\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_listing_indices.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_listing_indices.js",
      "sourcesContent": [
        "/* Run an aggregation on index_stats to get stat data for the selected time\n * range for all the active indices. The stat data is built up with passed-in\n * options that are given by the UI client as an array\n * (req.payload.listingMetrics). Every option is a key to a configuration value\n * in public/lib/metrics. Those options are used to build up a query with a\n * bunch of date histograms.\n *\n * After the result comes back from Elasticsearch, we process the date\n * histogram data with mapListingResponse to transform it into X/Y coordinates\n * for charting. This method is shared by the get_listing_nodes lib.\n */\n\nconst _ = require('lodash');\nconst moment = require('moment');\nconst createQuery = require('./create_query.js');\nconst calcAuto = require('./calculate_auto');\nconst root = require('requirefrom')('');\nconst metrics = root('public/lib/metrics');\nconst mapListingResponse = require('./map_listing_response');\n\nmodule.exports = (req, indices) => {\n  const config = req.server.config();\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const listingMetrics = req.payload.listingMetrics || [];\n  let start = moment.utc(req.payload.timeRange.min).valueOf();\n  const orgStart = start;\n  const end = moment.utc(req.payload.timeRange.max).valueOf();\n  const clusterUuid = req.params.clusterUuid;\n  const maxBucketSize = config.get('marvel.max_bucket_size');\n  const minIntervalSeconds = config.get('marvel.min_interval_seconds');\n\n  const params = {\n    index: indices,\n    type: 'index_stats',\n    searchType: 'count',\n    ignoreUnavailable: true,\n    ignore: [404],\n    body: {\n      query: createQuery({ start, end, clusterUuid }),\n      aggs: {}\n    }\n  };\n\n  const max = end;\n  const duration = moment.duration(max - orgStart, 'ms');\n  const bucketSize = Math.max(minIntervalSeconds, calcAuto.near(100, duration).asSeconds());\n  // performance optimization to avoid overwhelming amount of results\n  start = moment.utc(end).subtract(2, 'minutes').valueOf();\n  const min = start;\n\n  var aggs = {\n    items: {\n      terms: { field: 'index_stats.index', size: maxBucketSize },\n      aggs: {}\n    }\n  };\n\n  listingMetrics.forEach((id) => {\n    const metric = metrics[id];\n    let metricAgg = null;\n    if (!metric) return;\n    if (!metric.aggs) {\n      metricAgg = {\n        metric: {},\n        metric_deriv: {\n          derivative: { buckets_path: 'metric', unit: 'second' }\n        }\n      };\n      metricAgg.metric[metric.metricAgg] = {\n        field: metric.field\n      };\n    }\n\n    aggs.items.aggs[id] = {\n      date_histogram: {\n        field: 'timestamp',\n        min_doc_count: 0,\n        interval: bucketSize + 's',\n        extended_bounds: {\n          min: min,\n          max: max\n        }\n      },\n      aggs: metric.aggs || metricAgg\n    };\n  });\n\n  params.body.aggs = aggs;\n\n  return callWithRequest(req, 'search', params)\n  .then(resp => {\n    if (!resp.hits.total) {\n      return [];\n    }\n    // call the mapping\n    return mapListingResponse({\n      type: 'indices',\n      items: resp.aggregations.items.buckets,\n      listingMetrics,\n      min,\n      max,\n      bucketSize\n    });\n  });\n\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/map_listing_response.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar filterPartialBuckets = require('./filter_partial_buckets');\nvar pickMetricFields = require('./pick_metric_fields');\nvar root = require('requirefrom')('');\nvar metrics = root('public/lib/metrics');\n\nfunction mapChartData(metric) {\n  return function (bucket) {\n    var bucketMetricDeriv = bucket.metric_deriv;\n    var bucketMetricValue = bucket.metric.value;\n    var data = { x: bucket.key };\n    if (metric.derivative && bucketMetricDeriv) {\n      data.y = bucketMetricDeriv.normalized_value || bucketMetricDeriv.value || 0;\n    } else if (bucketMetricValue) {\n      data.y = bucketMetricValue;\n    }\n\n    return data;\n  };\n}\n\nfunction calcSlope(data) {\n  var length = data.length;\n  var xSum = data.reduce(function (prev, curr) {\n    return prev + curr.x;\n  }, 0);\n  var ySum = data.reduce(function (prev, curr) {\n    return prev + curr.y;\n  }, 0);\n  var xySum = data.reduce(function (prev, curr) {\n    return prev + curr.y * curr.x;\n  }, 0);\n  var xSqSum = data.reduce(function (prev, curr) {\n    return prev + curr.x * curr.x;\n  }, 0);\n  var numerator = length * xySum - xSum * ySum;\n  var denominator = length * xSqSum - xSum * ySum;\n  return numerator / denominator;\n}\n\n/*\n * Calculation rules per type\n */\nfunction calculateMetrics(type, partialBucketFilter) {\n  // Rich statistics calculated only for nodes. Indices only needs lastVal\n  var minVal = undefined;\n  var maxVal = undefined;\n  var slope = undefined;\n  var lastVal = undefined;\n\n  var calculators = {\n    nodes: function nodes(buckets, metric) {\n      var results = _.chain(buckets).filter(partialBucketFilter) // buckets with whole start/end time range\n      .map(mapChartData(metric)) // calculate metric as X/Y\n      .value();\n\n      minVal = _.min(_.pluck(results, 'y'));\n      maxVal = _.max(_.pluck(results, 'y'));\n      slope = calcSlope(results);\n      lastVal = _.last(_.pluck(results, 'y'));\n\n      return { minVal: minVal, maxVal: maxVal, slope: slope, lastVal: lastVal };\n    },\n\n    indices: function indices(buckets, metric) {\n      // just find the last whole bucket\n      var currentBucket = undefined;\n      var idx = buckets.length - 1;\n      while (idx > -1) {\n        currentBucket = buckets[idx];\n        if (currentBucket.doc_count > 0 && partialBucketFilter(currentBucket)) {\n          // found the last whole bucket\n          break;\n        }\n        idx -= 1;\n      }\n\n      lastVal = mapChartData(metric)(currentBucket).y;\n\n      return { minVal: minVal, maxVal: maxVal, slope: slope, lastVal: lastVal };\n    }\n  };\n\n  return calculators[type];\n}\n\nmodule.exports = function mapListingResponse(options) {\n  var type = options.type;\n  var items = options.items;\n  var listingMetrics = options.listingMetrics;\n  var min = options.min;\n  var max = options.max;\n  var bucketSize = options.bucketSize;\n\n  var partialBucketFilter = filterPartialBuckets(min, max, bucketSize, { ignoreEarly: true });\n  var metricCalculator = calculateMetrics(type, partialBucketFilter);\n\n  var data = _.map(items, function (item) {\n    var row = { name: item.key, metrics: {} };\n\n    _.each(listingMetrics, function (id) {\n\n      var metric = metrics[id];\n      var buckets = item[id].buckets;\n\n      var _metricCalculator = metricCalculator(buckets, metric);\n\n      var minVal = _metricCalculator.minVal;\n      var maxVal = _metricCalculator.maxVal;\n      var slope = _metricCalculator.slope;\n      var lastVal = _metricCalculator.lastVal;\n\n      row.metrics[id] = {\n        metric: pickMetricFields(metric),\n        min: minVal,\n        max: maxVal,\n        slope: slope,\n        last: lastVal\n      };\n    });\n\n    return row;\n  });\n\n  return data;\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/map_listing_response.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/map_listing_response.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst filterPartialBuckets = require('./filter_partial_buckets');\nconst pickMetricFields = require('./pick_metric_fields');\nconst root = require('requirefrom')('');\nconst metrics = root('public/lib/metrics');\n\nfunction mapChartData(metric) {\n  return (bucket) => {\n    const bucketMetricDeriv = bucket.metric_deriv;\n    const bucketMetricValue = bucket.metric.value;\n    const data = { x: bucket.key };\n    if (metric.derivative && bucketMetricDeriv) {\n      data.y = bucketMetricDeriv.normalized_value || bucketMetricDeriv.value || 0;\n    } else if (bucketMetricValue) {\n      data.y = bucketMetricValue;\n    }\n\n    return data;\n  };\n}\n\nfunction calcSlope(data) {\n  var length = data.length;\n  var xSum = data.reduce(function (prev, curr) { return prev + curr.x; }, 0);\n  var ySum = data.reduce(function (prev, curr) { return prev + curr.y; }, 0);\n  var xySum = data.reduce(function (prev, curr) { return prev + (curr.y * curr.x); }, 0);\n  var xSqSum = data.reduce(function (prev, curr) { return prev + (curr.x * curr.x); }, 0);\n  var numerator = (length * xySum) - (xSum * ySum);\n  var denominator = (length * xSqSum) - (xSum * ySum);\n  return numerator / denominator;\n}\n\n/*\n * Calculation rules per type\n */\nfunction calculateMetrics(type, partialBucketFilter) {\n  // Rich statistics calculated only for nodes. Indices only needs lastVal\n  let minVal;\n  let maxVal;\n  let slope;\n  let lastVal;\n\n  const calculators = {\n    nodes: function (buckets, metric) {\n      const results = _.chain(buckets)\n      .filter(partialBucketFilter) // buckets with whole start/end time range\n      .map(mapChartData(metric)) // calculate metric as X/Y\n      .value();\n\n      minVal = _.min(_.pluck(results, 'y'));\n      maxVal = _.max(_.pluck(results, 'y'));\n      slope = calcSlope(results);\n      lastVal = _.last(_.pluck(results, 'y'));\n\n      return { minVal, maxVal, slope, lastVal };\n    },\n\n    indices: function (buckets, metric) {\n      // just find the last whole bucket\n      let currentBucket;\n      let idx = buckets.length - 1;\n      while (idx > -1) {\n        currentBucket = buckets[idx];\n        if (currentBucket.doc_count > 0 && partialBucketFilter(currentBucket)) {\n          // found the last whole bucket\n          break;\n        }\n        idx -= 1;\n      }\n\n      lastVal = mapChartData(metric)(currentBucket).y;\n\n      return { minVal, maxVal, slope, lastVal };\n    }\n  };\n\n  return calculators[type];\n}\n\nmodule.exports = function mapListingResponse(options) {\n  const { type, items, listingMetrics, min, max, bucketSize } = options;\n  const partialBucketFilter = filterPartialBuckets(min, max, bucketSize, { ignoreEarly: true });\n  const metricCalculator = calculateMetrics(type, partialBucketFilter);\n\n  const data = _.map(items, function (item) {\n    const row = { name: item.key, metrics: {} };\n\n    _.each(listingMetrics, function (id) {\n\n      const metric = metrics[id];\n      const buckets = item[id].buckets;\n      const { minVal, maxVal, slope, lastVal } = metricCalculator(buckets, metric);\n\n      row.metrics[id] = {\n        metric: pickMetricFields(metric),\n        min: minVal,\n        max: maxVal,\n        slope: slope,\n        last: lastVal\n      };\n    });\n\n    return row;\n  });\n\n  return data;\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_shard_allocation.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query');\n\nmodule.exports = function (req, indices, filters, lastState) {\n  filters.push({\n    term: { state_uuid: _.get(lastState, 'cluster_state.state_uuid') }\n  });\n\n  var config = req.server.config();\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var clusterUuid = req.params.clusterUuid;\n  var params = {\n    index: config.get('marvel.index_prefix') + '*',\n    type: 'shards',\n    body: {\n      size: config.get('marvel.max_bucket_size'),\n      query: createQuery({ clusterUuid: clusterUuid, filters: filters })\n    }\n  };\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var hits = _.get(resp, 'hits.hits');\n    if (!hits) return [];\n    // map into object with shard and source properties\n    return hits.map(function (doc) {\n      return _.merge(doc._source.shard, {\n        resolver: _.get(doc, '_source.source_node[' + config.get('marvel.node_resolver') + ']')\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfc2hhcmRfYWxsb2NhdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM1QixJQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQzs7QUFFOUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBSztBQUNyRCxTQUFPLENBQUMsSUFBSSxDQUFDO0FBQ1gsUUFBSSxFQUFFLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLDBCQUEwQixDQUFDLEVBQUU7R0FDbkUsQ0FBQyxDQUFDOztBQUVILE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDbkMsTUFBTSxlQUFlLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQztBQUN6RSxNQUFNLFdBQVcsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQztBQUMzQyxNQUFNLE1BQU0sR0FBRztBQUNiLFNBQUssRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLEdBQUcsR0FBRztBQUM5QyxRQUFJLEVBQUUsUUFBUTtBQUNkLFFBQUksRUFBRTtBQUNKLFVBQUksRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDO0FBQzFDLFdBQUssRUFBRSxXQUFXLENBQUMsRUFBRSxXQUFXLEVBQVgsV0FBVyxFQUFFLE9BQU8sRUFBUCxPQUFPLEVBQUUsQ0FBQztLQUM3QztHQUNGLENBQUM7O0FBRUYsU0FBTyxlQUFlLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FDNUMsSUFBSSxDQUFDLFVBQUMsSUFBSSxFQUFLO0FBQ2QsUUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDdEMsUUFBSSxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsQ0FBQzs7QUFFckIsV0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQUEsR0FBRzthQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUU7QUFDaEQsZ0JBQVEsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsMkJBQXlCLE1BQU0sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsT0FBSTtPQUNuRixDQUFDO0tBQUEsQ0FBQyxDQUFDO0dBQ0wsQ0FBQyxDQUFDO0NBQ0osQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvZ2V0X3NoYXJkX2FsbG9jYXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5jb25zdCBjcmVhdGVRdWVyeSA9IHJlcXVpcmUoJy4vY3JlYXRlX3F1ZXJ5Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlcSwgaW5kaWNlcywgZmlsdGVycywgbGFzdFN0YXRlKSA9PiB7XG4gIGZpbHRlcnMucHVzaCh7XG4gICAgdGVybTogeyBzdGF0ZV91dWlkOiBfLmdldChsYXN0U3RhdGUsICdjbHVzdGVyX3N0YXRlLnN0YXRlX3V1aWQnKSB9XG4gIH0pO1xuXG4gIGNvbnN0IGNvbmZpZyA9IHJlcS5zZXJ2ZXIuY29uZmlnKCk7XG4gIGNvbnN0IGNhbGxXaXRoUmVxdWVzdCA9IHJlcS5zZXJ2ZXIucGx1Z2lucy5lbGFzdGljc2VhcmNoLmNhbGxXaXRoUmVxdWVzdDtcbiAgY29uc3QgY2x1c3RlclV1aWQgPSByZXEucGFyYW1zLmNsdXN0ZXJVdWlkO1xuICBjb25zdCBwYXJhbXMgPSB7XG4gICAgaW5kZXg6IGNvbmZpZy5nZXQoJ21hcnZlbC5pbmRleF9wcmVmaXgnKSArICcqJyxcbiAgICB0eXBlOiAnc2hhcmRzJyxcbiAgICBib2R5OiB7XG4gICAgICBzaXplOiBjb25maWcuZ2V0KCdtYXJ2ZWwubWF4X2J1Y2tldF9zaXplJyksXG4gICAgICBxdWVyeTogY3JlYXRlUXVlcnkoeyBjbHVzdGVyVXVpZCwgZmlsdGVycyB9KVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gY2FsbFdpdGhSZXF1ZXN0KHJlcSwgJ3NlYXJjaCcsIHBhcmFtcylcbiAgLnRoZW4oKHJlc3ApID0+IHtcbiAgICBjb25zdCBoaXRzID0gXy5nZXQocmVzcCwgJ2hpdHMuaGl0cycpO1xuICAgIGlmICghaGl0cykgcmV0dXJuIFtdO1xuICAgIC8vIG1hcCBpbnRvIG9iamVjdCB3aXRoIHNoYXJkIGFuZCBzb3VyY2UgcHJvcGVydGllc1xuICAgIHJldHVybiBoaXRzLm1hcChkb2MgPT4gXy5tZXJnZShkb2MuX3NvdXJjZS5zaGFyZCwge1xuICAgICAgcmVzb2x2ZXI6IF8uZ2V0KGRvYywgYF9zb3VyY2Uuc291cmNlX25vZGVbJHtjb25maWcuZ2V0KCdtYXJ2ZWwubm9kZV9yZXNvbHZlcicpfV1gKVxuICAgIH0pKTtcbiAgfSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_shard_allocation.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;AAE9C,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAK;AACrD,SAAO,CAAC,IAAI,CAAC;AACX,QAAI,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,0BAA0B,CAAC,EAAE;GACnE,CAAC,CAAC;;AAEH,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACnC,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACzE,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;AAC3C,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG;AAC9C,QAAI,EAAE,QAAQ;AACd,QAAI,EAAE;AACJ,UAAI,EAAE,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC;AAC1C,WAAK,EAAE,WAAW,CAAC,EAAE,WAAW,EAAX,WAAW,EAAE,OAAO,EAAP,OAAO,EAAE,CAAC;KAC7C;GACF,CAAC;;AAEF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,QAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AACtC,QAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC;;AAErB,WAAO,IAAI,CAAC,GAAG,CAAC,UAAA,GAAG;aAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE;AAChD,gBAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,2BAAyB,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,OAAI;OACnF,CAAC;KAAA,CAAC,CAAC;GACL,CAAC,CAAC;CACJ,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_shard_allocation.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query');\n\nmodule.exports = (req, indices, filters, lastState) => {\n  filters.push({\n    term: { state_uuid: _.get(lastState, 'cluster_state.state_uuid') }\n  });\n\n  const config = req.server.config();\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const clusterUuid = req.params.clusterUuid;\n  const params = {\n    index: config.get('marvel.index_prefix') + '*',\n    type: 'shards',\n    body: {\n      size: config.get('marvel.max_bucket_size'),\n      query: createQuery({ clusterUuid, filters })\n    }\n  };\n\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    const hits = _.get(resp, 'hits.hits');\n    if (!hits) return [];\n    // map into object with shard and source properties\n    return hits.map(doc => _.merge(doc._source.shard, {\n      resolver: _.get(doc, `_source.source_node[${config.get('marvel.node_resolver')}]`)\n    }));\n  });\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_unassigned_shards.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "get",
              "set"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "get",
                "local": "get"
              },
              {
                "kind": "named",
                "imported": "set",
                "local": "set"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _lodash = require('lodash');\n\nvar root = require('requirefrom')('');\n\n// Methods for calculating metrics for\n// - Number of Primary Shards\n// - Number of Replica Shards\n// - Unassigned Primary Shards\n// - Unassigned Replica Shards\nmodule.exports = function getUnassignedShards(indexShardStats) {\n  var returned = {};\n  var unassignedShards = 0;\n\n  unassignedShards += (0, _lodash.get)(indexShardStats, 'unassigned.primary');\n  unassignedShards += (0, _lodash.get)(indexShardStats, 'unassigned.replica');\n\n  // create an object in the format of a metric so it can be put into listing\n  (0, _lodash.set)(returned, 'metrics.index_unassigned_shards.last', unassignedShards);\n  (0, _lodash.set)(returned, 'metrics.index_unassigned_shards.metric.units', '');\n\n  return returned;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfdW5hc3NpZ25lZF9zaGFyZHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7c0JBQXlCLFFBQVE7O0FBRWpDLElBQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQzs7Ozs7OztBQU94QyxNQUFNLENBQUMsT0FBTyxHQUFHLFNBQVMsbUJBQW1CLENBQUMsZUFBZSxFQUFFO0FBQzdELE1BQU0sUUFBUSxHQUFHLEVBQUUsQ0FBQztBQUNwQixNQUFJLGdCQUFnQixHQUFHLENBQUMsQ0FBQzs7QUFFekIsa0JBQWdCLElBQUksaUJBQUksZUFBZSxFQUFFLG9CQUFvQixDQUFDLENBQUM7QUFDL0Qsa0JBQWdCLElBQUksaUJBQUksZUFBZSxFQUFFLG9CQUFvQixDQUFDLENBQUM7OztBQUcvRCxtQkFBSSxRQUFRLEVBQUUsc0NBQXNDLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztBQUN4RSxtQkFBSSxRQUFRLEVBQUUsOENBQThDLEVBQUUsRUFBRSxDQUFDLENBQUM7O0FBRWxFLFNBQU8sUUFBUSxDQUFDO0NBQ2pCLENBQUMiLCJmaWxlIjoiL2hvbWUvZWxhc3RpY3NlYXJjaC0yLjQuMS9iaW4va2liYW5hLTQuNi4xLWxpbnV4LXg4Nl82NC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF91bmFzc2lnbmVkX3NoYXJkcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldCwgc2V0IH0gZnJvbSAnbG9kYXNoJztcblxuY29uc3Qgcm9vdCA9IHJlcXVpcmUoJ3JlcXVpcmVmcm9tJykoJycpO1xuXG4vLyBNZXRob2RzIGZvciBjYWxjdWxhdGluZyBtZXRyaWNzIGZvclxuLy8gLSBOdW1iZXIgb2YgUHJpbWFyeSBTaGFyZHNcbi8vIC0gTnVtYmVyIG9mIFJlcGxpY2EgU2hhcmRzXG4vLyAtIFVuYXNzaWduZWQgUHJpbWFyeSBTaGFyZHNcbi8vIC0gVW5hc3NpZ25lZCBSZXBsaWNhIFNoYXJkc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRVbmFzc2lnbmVkU2hhcmRzKGluZGV4U2hhcmRTdGF0cykge1xuICBjb25zdCByZXR1cm5lZCA9IHt9O1xuICBsZXQgdW5hc3NpZ25lZFNoYXJkcyA9IDA7XG5cbiAgdW5hc3NpZ25lZFNoYXJkcyArPSBnZXQoaW5kZXhTaGFyZFN0YXRzLCAndW5hc3NpZ25lZC5wcmltYXJ5Jyk7XG4gIHVuYXNzaWduZWRTaGFyZHMgKz0gZ2V0KGluZGV4U2hhcmRTdGF0cywgJ3VuYXNzaWduZWQucmVwbGljYScpO1xuXG4gIC8vIGNyZWF0ZSBhbiBvYmplY3QgaW4gdGhlIGZvcm1hdCBvZiBhIG1ldHJpYyBzbyBpdCBjYW4gYmUgcHV0IGludG8gbGlzdGluZ1xuICBzZXQocmV0dXJuZWQsICdtZXRyaWNzLmluZGV4X3VuYXNzaWduZWRfc2hhcmRzLmxhc3QnLCB1bmFzc2lnbmVkU2hhcmRzKTtcbiAgc2V0KHJldHVybmVkLCAnbWV0cmljcy5pbmRleF91bmFzc2lnbmVkX3NoYXJkcy5tZXRyaWMudW5pdHMnLCAnJyk7XG5cbiAgcmV0dXJuIHJldHVybmVkO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_unassigned_shards.js"
      ],
      "names": [],
      "mappings": ";;sBAAyB,QAAQ;;AAEjC,IAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;;;;;;;AAOxC,MAAM,CAAC,OAAO,GAAG,SAAS,mBAAmB,CAAC,eAAe,EAAE;AAC7D,MAAM,QAAQ,GAAG,EAAE,CAAC;AACpB,MAAI,gBAAgB,GAAG,CAAC,CAAC;;AAEzB,kBAAgB,IAAI,iBAAI,eAAe,EAAE,oBAAoB,CAAC,CAAC;AAC/D,kBAAgB,IAAI,iBAAI,eAAe,EAAE,oBAAoB,CAAC,CAAC;;;AAG/D,mBAAI,QAAQ,EAAE,sCAAsC,EAAE,gBAAgB,CAAC,CAAC;AACxE,mBAAI,QAAQ,EAAE,8CAA8C,EAAE,EAAE,CAAC,CAAC;;AAElE,SAAO,QAAQ,CAAC;CACjB,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_unassigned_shards.js",
      "sourcesContent": [
        "import { get, set } from 'lodash';\n\nconst root = require('requirefrom')('');\n\n// Methods for calculating metrics for\n// - Number of Primary Shards\n// - Number of Replica Shards\n// - Unassigned Primary Shards\n// - Unassigned Replica Shards\nmodule.exports = function getUnassignedShards(indexShardStats) {\n  const returned = {};\n  let unassignedShards = 0;\n\n  unassignedShards += get(indexShardStats, 'unassigned.primary');\n  unassignedShards += get(indexShardStats, 'unassigned.replica');\n\n  // create an object in the format of a metric so it can be put into listing\n  set(returned, 'metrics.index_unassigned_shards.last', unassignedShards);\n  set(returned, 'metrics.index_unassigned_shards.metric.units', '');\n\n  return returned;\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/nodes.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": [
        "define-property"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _ = require('lodash');\nvar Promise = require('bluebird');\nvar Joi = require('joi');\nvar root = require('requirefrom')('');\nvar getClusterStatus = root('server/lib/get_cluster_status');\nvar getNodeSummary = root('server/lib/get_node_summary');\nvar getMetrics = root('server/lib/get_metrics');\nvar getListing = root('server/lib/get_listing_nodes');\nvar getShardStats = root('server/lib/get_shard_stats');\nvar getShardAllocation = root('server/lib/get_shard_allocation');\nvar calculateIndices = root('server/lib/calculate_indices');\nvar calculateClusterStatus = root('server/lib/calculate_cluster_status');\nvar calculateNodeType = root('server/lib/calculate_node_type');\nvar getLastState = root('server/lib/get_last_state');\nvar getDefaultNodeFromId = root('server/lib/get_default_node_from_id');\nvar lookups = root('server/lib/lookups');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n\n  function getNodeTypeClassLabel(node) {\n    var nodeType = node.master && 'master' || node.type;\n    var typeClassLabel = {\n      nodeType: nodeType,\n      nodeTypeLabel: _.get(lookups, 'nodeTypeLabel[\\'' + nodeType + '\\']'),\n      nodeTypeClass: _.get(lookups, 'nodeTypeClass[\\'' + nodeType + '\\']')\n    };\n    return typeClassLabel;\n  }\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/nodes',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          listingMetrics: Joi.array().required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var start = req.payload.timeRange.min;\n      var end = req.payload.timeRange.max;\n      calculateIndices(req, start, end).then(function (indices) {\n        return getLastState(req, indices).then(function (lastState) {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            listing: getListing(req, indices),\n            shardStats: getShardStats(req, indices, lastState),\n            clusterState: lastState\n          });\n        });\n      })\n      // Add the index status to each index from the shardStats\n      .then(function (body) {\n        body.nodes = body.listing.nodes;\n        body.rows = body.listing.rows;\n        var clusterState = body.clusterState && body.clusterState.cluster_state || { nodes: {} };\n        body.rows.forEach(function (row) {\n          var resolver = row.name;\n          var shardStats = body.shardStats.nodes[resolver];\n          var node = body.nodes[resolver];\n\n          // Add some extra metrics\n          row.metrics.shard_count = shardStats && shardStats.shardCount || 0;\n          row.metrics.index_count = shardStats && shardStats.indexCount || 0;\n\n          // copy some things over from nodes to row\n          row.resolver = resolver;\n          row.offline = !clusterState.nodes[row.resolver];\n          if (!node) {\n            // workaround for node indexed with legacy agent\n            node = getDefaultNodeFromId(resolver);\n          }\n          node.type = calculateNodeType(node, clusterState);\n          row.node = node;\n          delete row.name;\n\n          // set type for labeling / iconography\n\n          var _getNodeTypeClassLabel = getNodeTypeClassLabel(row.node);\n\n          var nodeType = _getNodeTypeClassLabel.nodeType;\n          var nodeTypeLabel = _getNodeTypeClassLabel.nodeTypeLabel;\n          var nodeTypeClass = _getNodeTypeClassLabel.nodeTypeClass;\n\n          row.node.type = nodeType;\n          row.node.nodeTypeLabel = nodeTypeLabel;\n          row.node.nodeTypeClass = nodeTypeClass;\n        });\n        delete body.listing;\n        delete body.clusterState;\n        return body;\n      })\n      // Send the response\n      .then(calculateClusterStatus).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/nodes/{resolver}',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required(),\n          resolver: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required()\n        })\n      }\n    },\n    handler: function handler(req, reply) {\n      var config = req.server.config();\n      var resolver = req.params.resolver;\n      var start = req.payload.timeRange.min;\n      var end = req.payload.timeRange.max;\n      calculateIndices(req, start, end).then(function (indices) {\n        return getLastState(req, indices).then(function (lastState) {\n          var configResolver = 'source_node.' + config.get('marvel.node_resolver');\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            nodeSummary: getNodeSummary(req, indices),\n            metrics: getMetrics(req, indices, [{ term: _defineProperty({}, configResolver, resolver) }]),\n            shards: getShardAllocation(req, indices, [{ term: _defineProperty({}, configResolver, resolver) }], lastState),\n            shardStats: getShardStats(req, indices, lastState),\n            nodes: {},\n            clusterState: lastState\n          });\n        });\n      }).then(calculateClusterStatus).then(function (body) {\n        var clusterState = body.clusterState && body.clusterState.cluster_state || { nodes: {} };\n        var nodeDetail = body.nodeSummary.node;\n        if (!nodeDetail) {\n          // workaround for node indexed with legacy agent\n          nodeDetail = getDefaultNodeFromId(resolver);\n        }\n        nodeDetail.type = calculateNodeType(nodeDetail, clusterState);\n        body.nodes[resolver] = nodeDetail;\n\n        // set type for labeling / iconography\n\n        var _getNodeTypeClassLabel2 = getNodeTypeClassLabel(nodeDetail);\n\n        var nodeType = _getNodeTypeClassLabel2.nodeType;\n        var nodeTypeLabel = _getNodeTypeClassLabel2.nodeTypeLabel;\n        var nodeTypeClass = _getNodeTypeClassLabel2.nodeTypeClass;\n\n        nodeDetail.type = nodeType;\n        nodeDetail.nodeTypeLabel = nodeTypeLabel;\n        nodeDetail.nodeTypeClass = nodeTypeClass;\n\n        body.nodeSummary.totalShards = _.get(body, 'shardStats.nodes[\\'' + resolver + '\\'].shardCount');\n        body.nodeSummary.indexCount = _.get(body, 'shardStats.nodes[\\'' + resolver + '\\'].indexCount');\n\n        // combine data from different sources into 1 object\n        body.nodeSummary = _.merge(body.nodeSummary, nodeDetail);\n\n        body.nodeSummary.status = 'Online';\n        // If this node is down\n        if (!clusterState.nodes[body.nodeSummary.resolver]) {\n          body.nodeSummary.documents = 'N/A';\n          body.nodeSummary.dataSize = 'N/A';\n          body.nodeSummary.freeSpace = 'N/A';\n          body.nodeSummary.documents = 'N/A';\n          body.nodeSummary.indexCount = 'N/A';\n          body.nodeSummary.totalShards = 'N/A';\n          body.nodeSummary.status = 'Offline';\n        }\n        delete body.clusterState;\n        return body;\n      }).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/nodes.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/nodes.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Joi = require('joi');\nconst root = require('requirefrom')('');\nconst getClusterStatus = root('server/lib/get_cluster_status');\nconst getNodeSummary = root('server/lib/get_node_summary');\nconst getMetrics = root('server/lib/get_metrics');\nconst getListing = root('server/lib/get_listing_nodes');\nconst getShardStats = root('server/lib/get_shard_stats');\nconst getShardAllocation = root('server/lib/get_shard_allocation');\nconst calculateIndices = root('server/lib/calculate_indices');\nconst calculateClusterStatus = root('server/lib/calculate_cluster_status');\nconst calculateNodeType = root('server/lib/calculate_node_type');\nconst getLastState = root('server/lib/get_last_state');\nconst getDefaultNodeFromId = root('server/lib/get_default_node_from_id');\nconst lookups = root('server/lib/lookups');\nconst handleError = root('server/lib/handle_error');\n\nmodule.exports = (server) => {\n\n  function getNodeTypeClassLabel(node) {\n    const nodeType = (node.master && 'master') || node.type;\n    const typeClassLabel = {\n      nodeType,\n      nodeTypeLabel: _.get(lookups, `nodeTypeLabel['${nodeType}']`),\n      nodeTypeClass: _.get(lookups, `nodeTypeClass['${nodeType}']`)\n    };\n    return typeClassLabel;\n  }\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/nodes',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          listingMetrics: Joi.array().required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const start = req.payload.timeRange.min;\n      const end = req.payload.timeRange.max;\n      calculateIndices(req, start, end)\n      .then(indices => {\n        return getLastState(req, indices)\n        .then(lastState => {\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            listing: getListing(req, indices),\n            shardStats: getShardStats(req, indices, lastState),\n            clusterState: lastState\n          });\n        });\n      })\n      // Add the index status to each index from the shardStats\n      .then((body) => {\n        body.nodes = body.listing.nodes;\n        body.rows = body.listing.rows;\n        const clusterState = body.clusterState && body.clusterState.cluster_state || { nodes: {} };\n        body.rows.forEach((row) => {\n          const resolver = row.name;\n          const shardStats = body.shardStats.nodes[resolver];\n          let node = body.nodes[resolver];\n\n          // Add some extra metrics\n          row.metrics.shard_count = shardStats && shardStats.shardCount || 0;\n          row.metrics.index_count = shardStats && shardStats.indexCount || 0;\n\n          // copy some things over from nodes to row\n          row.resolver = resolver;\n          row.offline = !clusterState.nodes[row.resolver];\n          if (!node) {\n            // workaround for node indexed with legacy agent\n            node = getDefaultNodeFromId(resolver);\n          }\n          node.type = calculateNodeType(node, clusterState);\n          row.node = node;\n          delete row.name;\n\n          // set type for labeling / iconography\n          const { nodeType, nodeTypeLabel, nodeTypeClass } = getNodeTypeClassLabel(row.node);\n          row.node.type = nodeType;\n          row.node.nodeTypeLabel = nodeTypeLabel;\n          row.node.nodeTypeClass = nodeTypeClass;\n        });\n        delete body.listing;\n        delete body.clusterState;\n        return body;\n      })\n      // Send the response\n      .then(calculateClusterStatus)\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/api/marvel/v1/clusters/{clusterUuid}/nodes/{resolver}',\n    config: {\n      validate: {\n        params: Joi.object({\n          clusterUuid: Joi.string().required(),\n          resolver: Joi.string().required()\n        }),\n        payload: Joi.object({\n          timeRange: Joi.object({\n            min: Joi.date().required(),\n            max: Joi.date().required()\n          }).required(),\n          metrics: Joi.array().required()\n        })\n      }\n    },\n    handler: (req, reply) => {\n      const config = req.server.config();\n      const resolver = req.params.resolver;\n      const start = req.payload.timeRange.min;\n      const end = req.payload.timeRange.max;\n      calculateIndices(req, start, end)\n      .then(indices => {\n        return getLastState(req, indices)\n        .then(lastState => {\n          const configResolver = `source_node.${config.get('marvel.node_resolver')}`;\n          return Promise.props({\n            clusterStatus: getClusterStatus(req, indices, lastState),\n            nodeSummary: getNodeSummary(req, indices),\n            metrics: getMetrics(req, indices, [{ term: { [configResolver]: resolver } }]),\n            shards: getShardAllocation(req, indices, [{ term: { [configResolver]: resolver } }], lastState),\n            shardStats: getShardStats(req, indices, lastState),\n            nodes: {},\n            clusterState: lastState\n          });\n        });\n      })\n      .then(calculateClusterStatus)\n      .then(function (body) {\n        const clusterState = body.clusterState && body.clusterState.cluster_state || { nodes: {} };\n        let nodeDetail = body.nodeSummary.node;\n        if (!nodeDetail) {\n          // workaround for node indexed with legacy agent\n          nodeDetail = getDefaultNodeFromId(resolver);\n        }\n        nodeDetail.type = calculateNodeType(nodeDetail, clusterState);\n        body.nodes[resolver] = nodeDetail;\n\n        // set type for labeling / iconography\n        const { nodeType, nodeTypeLabel, nodeTypeClass } = getNodeTypeClassLabel(nodeDetail);\n        nodeDetail.type = nodeType;\n        nodeDetail.nodeTypeLabel = nodeTypeLabel;\n        nodeDetail.nodeTypeClass = nodeTypeClass;\n\n        body.nodeSummary.totalShards = _.get(body, `shardStats.nodes['${resolver}'].shardCount`);\n        body.nodeSummary.indexCount = _.get(body, `shardStats.nodes['${resolver}'].indexCount`);\n\n        // combine data from different sources into 1 object\n        body.nodeSummary = _.merge(body.nodeSummary, nodeDetail);\n\n        body.nodeSummary.status = 'Online';\n        // If this node is down\n        if (!clusterState.nodes[body.nodeSummary.resolver]) {\n          body.nodeSummary.documents = 'N/A';\n          body.nodeSummary.dataSize = 'N/A';\n          body.nodeSummary.freeSpace = 'N/A';\n          body.nodeSummary.documents = 'N/A';\n          body.nodeSummary.indexCount = 'N/A';\n          body.nodeSummary.totalShards = 'N/A';\n          body.nodeSummary.status = 'Offline';\n        }\n        delete body.clusterState;\n        return body;\n      })\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_node_summary.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": [
        "define-property"
      ]
    },
    "ignored": false,
    "code": "'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _ = require('lodash');\nvar createQuery = require('./create_query.js');\nmodule.exports = function (req, indices) {\n  // Alias callWithRequest so we don't have to use this long ugly string\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n\n  // Get the params from the POST body for the request\n  var config = req.server.config();\n  var start = req.payload.timeRange.min;\n  var end = req.payload.timeRange.max;\n  var clusterUuid = req.params.clusterUuid;\n\n  // Build up the Elasticsearch request\n  var params = {\n    index: indices,\n    type: 'node_stats',\n    ignore: [404],\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        end: end,\n        clusterUuid: clusterUuid,\n        filters: [{\n          term: _defineProperty({}, 'source_node.' + config.get('marvel.node_resolver'), req.params.resolver)\n        }]\n      })\n    }\n  };\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    var summary = { documents: 0, dataSize: 0, freeSpace: 0, node: { attributes: {} } };\n    var nodeStats = _.get(resp, 'hits.hits[0]._source.node_stats');\n    if (nodeStats) {\n      summary.documents = _.get(nodeStats, 'indices.docs.count');\n      summary.dataSize = _.get(nodeStats, 'indices.store.size_in_bytes');\n      summary.freeSpace = _.get(nodeStats, 'fs.total.available_in_bytes');\n\n      var nodes = resp.hits.hits.map(function (hit) {\n        return hit._source.source_node;\n      });\n      // using [0] value because query results are sorted desc per timestamp\n      summary.node = {\n        resolver: nodes[0][config.get('marvel.node_resolver')],\n        node_ids: nodes.map(function (node) {\n          return node.uuid;\n        }),\n        name: nodes[0].name,\n        transport_address: nodes[0].transport_address,\n        ip: nodes[0].ip,\n        attributes: nodes[0].attributes\n      };\n    }\n    return summary;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfbm9kZV9zdW1tYXJ5LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDNUIsSUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFDakQsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUs7O0FBRWpDLE1BQU0sZUFBZSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUM7OztBQUd6RSxNQUFNLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ25DLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQztBQUN4QyxNQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7QUFDdEMsTUFBTSxXQUFXLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUM7OztBQUczQyxNQUFNLE1BQU0sR0FBRztBQUNiLFNBQUssRUFBRSxPQUFPO0FBQ2QsUUFBSSxFQUFFLFlBQVk7QUFDbEIsVUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDO0FBQ2IsUUFBSSxFQUFFO0FBQ0osVUFBSSxFQUFFLENBQUM7QUFDUCxVQUFJLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUU7QUFDdEMsV0FBSyxFQUFFLFdBQVcsQ0FBQztBQUNqQixXQUFHLEVBQUUsR0FBRztBQUNSLG1CQUFXLEVBQUUsV0FBVztBQUN4QixlQUFPLEVBQUUsQ0FBQztBQUNSLGNBQUksdUNBQW9CLE1BQU0sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsRUFBSyxHQUFHLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBRTtTQUNyRixDQUFDO09BQ0gsQ0FBQztLQUNIO0dBQ0YsQ0FBQzs7QUFFRixTQUFPLGVBQWUsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUM1QyxJQUFJLENBQUMsVUFBQyxJQUFJLEVBQUs7QUFDZCxRQUFNLE9BQU8sR0FBRyxFQUFFLFNBQVMsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0FBQ3RGLFFBQU0sU0FBUyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLGlDQUFpQyxDQUFDLENBQUM7QUFDakUsUUFBSSxTQUFTLEVBQUU7QUFDYixhQUFPLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLG9CQUFvQixDQUFDLENBQUM7QUFDM0QsYUFBTyxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSw2QkFBNkIsQ0FBQyxDQUFDO0FBQ25FLGFBQU8sQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsNkJBQTZCLENBQUMsQ0FBQzs7QUFFcEUsVUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQUEsR0FBRztlQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsV0FBVztPQUFBLENBQUMsQ0FBQzs7QUFFakUsYUFBTyxDQUFDLElBQUksR0FBRztBQUNiLGdCQUFRLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsQ0FBQztBQUN0RCxnQkFBUSxFQUFFLEtBQUssQ0FBQyxHQUFHLENBQUMsVUFBQSxJQUFJO2lCQUFJLElBQUksQ0FBQyxJQUFJO1NBQUEsQ0FBQztBQUN0QyxZQUFJLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUk7QUFDbkIseUJBQWlCLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLGlCQUFpQjtBQUM3QyxVQUFFLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDZixrQkFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVO09BQ2hDLENBQUM7S0FDSDtBQUNELFdBQU8sT0FBTyxDQUFDO0dBQ2hCLENBQUMsQ0FBQztDQUNKLENBQUMiLCJmaWxlIjoiL2hvbWUvZWxhc3RpY3NlYXJjaC0yLjQuMS9iaW4va2liYW5hLTQuNi4xLWxpbnV4LXg4Nl82NC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL2dldF9ub2RlX3N1bW1hcnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5jb25zdCBjcmVhdGVRdWVyeSA9IHJlcXVpcmUoJy4vY3JlYXRlX3F1ZXJ5LmpzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IChyZXEsIGluZGljZXMpID0+IHtcbiAgLy8gQWxpYXMgY2FsbFdpdGhSZXF1ZXN0IHNvIHdlIGRvbid0IGhhdmUgdG8gdXNlIHRoaXMgbG9uZyB1Z2x5IHN0cmluZ1xuICBjb25zdCBjYWxsV2l0aFJlcXVlc3QgPSByZXEuc2VydmVyLnBsdWdpbnMuZWxhc3RpY3NlYXJjaC5jYWxsV2l0aFJlcXVlc3Q7XG5cbiAgLy8gR2V0IHRoZSBwYXJhbXMgZnJvbSB0aGUgUE9TVCBib2R5IGZvciB0aGUgcmVxdWVzdFxuICBjb25zdCBjb25maWcgPSByZXEuc2VydmVyLmNvbmZpZygpO1xuICBjb25zdCBzdGFydCA9IHJlcS5wYXlsb2FkLnRpbWVSYW5nZS5taW47XG4gIGNvbnN0IGVuZCA9IHJlcS5wYXlsb2FkLnRpbWVSYW5nZS5tYXg7XG4gIGNvbnN0IGNsdXN0ZXJVdWlkID0gcmVxLnBhcmFtcy5jbHVzdGVyVXVpZDtcblxuICAvLyBCdWlsZCB1cCB0aGUgRWxhc3RpY3NlYXJjaCByZXF1ZXN0XG4gIGNvbnN0IHBhcmFtcyA9IHtcbiAgICBpbmRleDogaW5kaWNlcyxcbiAgICB0eXBlOiAnbm9kZV9zdGF0cycsXG4gICAgaWdub3JlOiBbNDA0XSxcbiAgICBib2R5OiB7XG4gICAgICBzaXplOiAxLFxuICAgICAgc29ydDogeyB0aW1lc3RhbXA6IHsgb3JkZXI6ICdkZXNjJyB9IH0sXG4gICAgICBxdWVyeTogY3JlYXRlUXVlcnkoe1xuICAgICAgICBlbmQ6IGVuZCxcbiAgICAgICAgY2x1c3RlclV1aWQ6IGNsdXN0ZXJVdWlkLFxuICAgICAgICBmaWx0ZXJzOiBbe1xuICAgICAgICAgIHRlcm06IHsgW2Bzb3VyY2Vfbm9kZS4ke2NvbmZpZy5nZXQoJ21hcnZlbC5ub2RlX3Jlc29sdmVyJyl9YF06IHJlcS5wYXJhbXMucmVzb2x2ZXIgfVxuICAgICAgICB9XVxuICAgICAgfSlcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGNhbGxXaXRoUmVxdWVzdChyZXEsICdzZWFyY2gnLCBwYXJhbXMpXG4gIC50aGVuKChyZXNwKSA9PiB7XG4gICAgY29uc3Qgc3VtbWFyeSA9IHsgZG9jdW1lbnRzOiAwLCBkYXRhU2l6ZTogMCwgZnJlZVNwYWNlOiAwLCBub2RlOiB7IGF0dHJpYnV0ZXM6IHt9IH0gfTtcbiAgICBjb25zdCBub2RlU3RhdHMgPSBfLmdldChyZXNwLCAnaGl0cy5oaXRzWzBdLl9zb3VyY2Uubm9kZV9zdGF0cycpO1xuICAgIGlmIChub2RlU3RhdHMpIHtcbiAgICAgIHN1bW1hcnkuZG9jdW1lbnRzID0gXy5nZXQobm9kZVN0YXRzLCAnaW5kaWNlcy5kb2NzLmNvdW50Jyk7XG4gICAgICBzdW1tYXJ5LmRhdGFTaXplID0gXy5nZXQobm9kZVN0YXRzLCAnaW5kaWNlcy5zdG9yZS5zaXplX2luX2J5dGVzJyk7XG4gICAgICBzdW1tYXJ5LmZyZWVTcGFjZSA9IF8uZ2V0KG5vZGVTdGF0cywgJ2ZzLnRvdGFsLmF2YWlsYWJsZV9pbl9ieXRlcycpO1xuXG4gICAgICBjb25zdCBub2RlcyA9IHJlc3AuaGl0cy5oaXRzLm1hcChoaXQgPT4gaGl0Ll9zb3VyY2Uuc291cmNlX25vZGUpO1xuICAgICAgLy8gdXNpbmcgWzBdIHZhbHVlIGJlY2F1c2UgcXVlcnkgcmVzdWx0cyBhcmUgc29ydGVkIGRlc2MgcGVyIHRpbWVzdGFtcFxuICAgICAgc3VtbWFyeS5ub2RlID0ge1xuICAgICAgICByZXNvbHZlcjogbm9kZXNbMF1bY29uZmlnLmdldCgnbWFydmVsLm5vZGVfcmVzb2x2ZXInKV0sXG4gICAgICAgIG5vZGVfaWRzOiBub2Rlcy5tYXAobm9kZSA9PiBub2RlLnV1aWQpLFxuICAgICAgICBuYW1lOiBub2Rlc1swXS5uYW1lLFxuICAgICAgICB0cmFuc3BvcnRfYWRkcmVzczogbm9kZXNbMF0udHJhbnNwb3J0X2FkZHJlc3MsXG4gICAgICAgIGlwOiBub2Rlc1swXS5pcCxcbiAgICAgICAgYXR0cmlidXRlczogbm9kZXNbMF0uYXR0cmlidXRlc1xuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHN1bW1hcnk7XG4gIH0pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_node_summary.js"
      ],
      "names": [],
      "mappings": ";;;;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACjD,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAK;;AAEjC,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;;;AAGzE,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACnC,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACxC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACtC,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;;;AAG3C,MAAM,MAAM,GAAG;AACb,SAAK,EAAE,OAAO;AACd,QAAI,EAAE,YAAY;AAClB,UAAM,EAAE,CAAC,GAAG,CAAC;AACb,QAAI,EAAE;AACJ,UAAI,EAAE,CAAC;AACP,UAAI,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACtC,WAAK,EAAE,WAAW,CAAC;AACjB,WAAG,EAAE,GAAG;AACR,mBAAW,EAAE,WAAW;AACxB,eAAO,EAAE,CAAC;AACR,cAAI,uCAAoB,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAK,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAE;SACrF,CAAC;OACH,CAAC;KACH;GACF,CAAC;;AAEF,SAAO,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,QAAM,OAAO,GAAG,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,CAAC;AACtF,QAAM,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,iCAAiC,CAAC,CAAC;AACjE,QAAI,SAAS,EAAE;AACb,aAAO,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;AAC3D,aAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,6BAA6B,CAAC,CAAC;AACnE,aAAO,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,6BAA6B,CAAC,CAAC;;AAEpE,UAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,GAAG;eAAI,GAAG,CAAC,OAAO,CAAC,WAAW;OAAA,CAAC,CAAC;;AAEjE,aAAO,CAAC,IAAI,GAAG;AACb,gBAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACtD,gBAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI;iBAAI,IAAI,CAAC,IAAI;SAAA,CAAC;AACtC,YAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;AACnB,yBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,iBAAiB;AAC7C,UAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AACf,kBAAU,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU;OAChC,CAAC;KACH;AACD,WAAO,OAAO,CAAC;GAChB,CAAC,CAAC;CACJ,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_node_summary.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst createQuery = require('./create_query.js');\nmodule.exports = (req, indices) => {\n  // Alias callWithRequest so we don't have to use this long ugly string\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n\n  // Get the params from the POST body for the request\n  const config = req.server.config();\n  const start = req.payload.timeRange.min;\n  const end = req.payload.timeRange.max;\n  const clusterUuid = req.params.clusterUuid;\n\n  // Build up the Elasticsearch request\n  const params = {\n    index: indices,\n    type: 'node_stats',\n    ignore: [404],\n    body: {\n      size: 1,\n      sort: { timestamp: { order: 'desc' } },\n      query: createQuery({\n        end: end,\n        clusterUuid: clusterUuid,\n        filters: [{\n          term: { [`source_node.${config.get('marvel.node_resolver')}`]: req.params.resolver }\n        }]\n      })\n    }\n  };\n\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    const summary = { documents: 0, dataSize: 0, freeSpace: 0, node: { attributes: {} } };\n    const nodeStats = _.get(resp, 'hits.hits[0]._source.node_stats');\n    if (nodeStats) {\n      summary.documents = _.get(nodeStats, 'indices.docs.count');\n      summary.dataSize = _.get(nodeStats, 'indices.store.size_in_bytes');\n      summary.freeSpace = _.get(nodeStats, 'fs.total.available_in_bytes');\n\n      const nodes = resp.hits.hits.map(hit => hit._source.source_node);\n      // using [0] value because query results are sorted desc per timestamp\n      summary.node = {\n        resolver: nodes[0][config.get('marvel.node_resolver')],\n        node_ids: nodes.map(node => node.uuid),\n        name: nodes[0].name,\n        transport_address: nodes[0].transport_address,\n        ip: nodes[0].ip,\n        attributes: nodes[0].attributes\n      };\n    }\n    return summary;\n  });\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_listing_nodes.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "/* Run an aggregation on node_stats to get stat data for the selected time\n * range for all the active nodes. The stat data is built up with passed-in\n * options that are given by the UI client as an array\n * (req.payload.listingMetrics). Every option is a key to a configuration value\n * in public/lib/metrics. Those options are used to build up a query with a\n * bunch of date histograms.\n *\n * After the result comes back from Elasticsearch, we use it to generate:\n *\n * - \"nodes\" object - for every node, it has a Node Name, Node Transport\n *   Address, the Data and Master Attributes for each node, and build up an\n *   array of Node IDs for each node (there'll be multiple IDs if the node was\n *   restarted within the time range). The Node IDs are used only for\n *   determining if the node is a Master node.\n *\n * - \"rows\" object - all the date histogram data is passed to\n *   mapListingResponse to transform it into X/Y coordinates for charting. This\n *   method is shared by the get_listing_indices lib.\n *\n * All this data is used by the UI to render most of the table on the Nodes\n * page. we do need the X/Y coordinates to calculate the slope of the metric.\n * If we calculate the slope is going up, we just have an up arrow to say it's\n * going up, and likewise if the metric is going down, we have a down arrow\n */\n\n'use strict';\n\nvar _ = require('lodash');\nvar moment = require('moment');\nvar createQuery = require('./create_query.js');\nvar calcAuto = require('./calculate_auto');\nvar root = require('requirefrom')('');\nvar metrics = root('public/lib/metrics');\nvar nodeAggVals = root('server/lib/node_agg_vals');\nvar mapListingResponse = require('./map_listing_response');\n\nmodule.exports = function (req, indices) {\n  var config = req.server.config();\n  var callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  var listingMetrics = req.payload.listingMetrics || [];\n  var start = moment.utc(req.payload.timeRange.min).valueOf();\n  var orgStart = start;\n  var end = moment.utc(req.payload.timeRange.max).valueOf();\n  var clusterUuid = req.params.clusterUuid;\n  var maxBucketSize = config.get('marvel.max_bucket_size');\n  var minIntervalSeconds = config.get('marvel.min_interval_seconds');\n\n  var params = {\n    index: indices,\n    type: 'node_stats',\n    searchType: 'count',\n    ignoreUnavailable: true,\n    ignore: [404],\n    body: {\n      query: createQuery({ start: start, end: end, clusterUuid: clusterUuid }),\n      aggs: {}\n    }\n  };\n\n  var max = end;\n  var duration = moment.duration(max - orgStart, 'ms');\n  var bucketSize = Math.max(minIntervalSeconds, calcAuto.near(100, duration).asSeconds());\n  var min = start;\n  var aggSize = 10000;\n\n  var aggs = {\n    items: {\n      terms: {\n        field: 'source_node.' + config.get('marvel.node_resolver'), // transport_address or node name\n        size: maxBucketSize\n      },\n      aggs: {\n        node_name: {\n          terms: { field: 'source_node.name', size: aggSize },\n          aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n        },\n        node_transport_address: {\n          terms: { field: 'source_node.transport_address', size: aggSize },\n          aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n        },\n        node_data_attributes: { terms: { field: 'source_node.attributes.data', size: aggSize } },\n        node_master_attributes: { terms: { field: 'source_node.attributes.master', size: aggSize } },\n        // for doing a join on the cluster state to determine if node is current master\n        node_ids: { terms: { field: 'source_node.uuid', size: aggSize } }\n      }\n    }\n  };\n\n  listingMetrics.forEach(function (id) {\n    var metric = metrics[id];\n    var metricAgg = null;\n    if (!metric) return;\n    if (!metric.aggs) {\n      metricAgg = {\n        metric: {},\n        metric_deriv: {\n          derivative: { buckets_path: 'metric', unit: 'second' }\n        }\n      };\n      metricAgg.metric[metric.metricAgg] = {\n        field: metric.field\n      };\n    }\n    aggs.items.aggs[id] = {\n      date_histogram: {\n        field: 'timestamp',\n        min_doc_count: 0,\n        interval: bucketSize + 's',\n        extended_bounds: { min: min, max: max }\n      },\n      aggs: metric.aggs || metricAgg\n    };\n  });\n\n  params.body.aggs = aggs;\n\n  return callWithRequest(req, 'search', params).then(function (resp) {\n    if (!resp.hits.total) return { nodes: {}, rows: [] };\n    var buckets = resp.aggregations.items.buckets;\n    return {\n      // for node names\n      nodes: buckets.reduce(function (prev, curr) {\n        prev[curr.key] = {\n          name: nodeAggVals.getLatestAggKey(curr.node_name.buckets),\n          transport_address: nodeAggVals.getLatestAggKey(curr.node_transport_address.buckets),\n          node_ids: curr.node_ids.buckets.map(function (bucket) {\n            return bucket.key;\n          }), // needed in calculate_node_type to check if current master node\n          attributes: {\n            data: nodeAggVals.getNodeAttribute(curr.node_data_attributes.buckets),\n            master: nodeAggVals.getNodeAttribute(curr.node_master_attributes.buckets)\n          }\n        };\n        return prev;\n      }, {}),\n      // for listing metrics\n      rows: mapListingResponse({\n        type: 'nodes',\n        items: buckets,\n        listingMetrics: listingMetrics,\n        min: min,\n        max: max,\n        bucketSize: bucketSize\n      })\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_listing_nodes.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_listing_nodes.js",
      "sourcesContent": [
        "/* Run an aggregation on node_stats to get stat data for the selected time\n * range for all the active nodes. The stat data is built up with passed-in\n * options that are given by the UI client as an array\n * (req.payload.listingMetrics). Every option is a key to a configuration value\n * in public/lib/metrics. Those options are used to build up a query with a\n * bunch of date histograms.\n *\n * After the result comes back from Elasticsearch, we use it to generate:\n *\n * - \"nodes\" object - for every node, it has a Node Name, Node Transport\n *   Address, the Data and Master Attributes for each node, and build up an\n *   array of Node IDs for each node (there'll be multiple IDs if the node was\n *   restarted within the time range). The Node IDs are used only for\n *   determining if the node is a Master node.\n *\n * - \"rows\" object - all the date histogram data is passed to\n *   mapListingResponse to transform it into X/Y coordinates for charting. This\n *   method is shared by the get_listing_indices lib.\n *\n * All this data is used by the UI to render most of the table on the Nodes\n * page. we do need the X/Y coordinates to calculate the slope of the metric.\n * If we calculate the slope is going up, we just have an up arrow to say it's\n * going up, and likewise if the metric is going down, we have a down arrow\n */\n\nconst _ = require('lodash');\nconst moment = require('moment');\nconst createQuery = require('./create_query.js');\nconst calcAuto = require('./calculate_auto');\nconst root = require('requirefrom')('');\nconst metrics = root('public/lib/metrics');\nconst nodeAggVals = root('server/lib/node_agg_vals');\nconst mapListingResponse = require('./map_listing_response');\n\nmodule.exports = (req, indices) => {\n  const config = req.server.config();\n  const callWithRequest = req.server.plugins.elasticsearch.callWithRequest;\n  const listingMetrics = req.payload.listingMetrics || [];\n  let start = moment.utc(req.payload.timeRange.min).valueOf();\n  const orgStart = start;\n  const end = moment.utc(req.payload.timeRange.max).valueOf();\n  const clusterUuid = req.params.clusterUuid;\n  const maxBucketSize = config.get('marvel.max_bucket_size');\n  const minIntervalSeconds = config.get('marvel.min_interval_seconds');\n\n  const params = {\n    index: indices,\n    type: 'node_stats',\n    searchType: 'count',\n    ignoreUnavailable: true,\n    ignore: [404],\n    body: {\n      query: createQuery({ start, end, clusterUuid }),\n      aggs: {}\n    }\n  };\n\n  const max = end;\n  const duration = moment.duration(max - orgStart, 'ms');\n  const bucketSize = Math.max(minIntervalSeconds, calcAuto.near(100, duration).asSeconds());\n  const min = start;\n  const aggSize = 10000;\n\n  var aggs = {\n    items: {\n      terms: {\n        field: `source_node.${config.get('marvel.node_resolver')}`, // transport_address or node name\n        size: maxBucketSize\n      },\n      aggs: {\n        node_name: {\n          terms: { field: 'source_node.name', size: aggSize },\n          aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n        },\n        node_transport_address: {\n          terms: { field: 'source_node.transport_address', size: aggSize },\n          aggs: { max_timestamp: { max: { field: 'timestamp' } } }\n        },\n        node_data_attributes: { terms: { field: 'source_node.attributes.data', size: aggSize } },\n        node_master_attributes: { terms: { field: 'source_node.attributes.master', size: aggSize } },\n        // for doing a join on the cluster state to determine if node is current master\n        node_ids: { terms: { field: 'source_node.uuid', size: aggSize } }\n      }\n    }\n  };\n\n  listingMetrics.forEach((id) => {\n    const metric = metrics[id];\n    let metricAgg = null;\n    if (!metric) return;\n    if (!metric.aggs) {\n      metricAgg = {\n        metric: {},\n        metric_deriv: {\n          derivative: { buckets_path: 'metric', unit: 'second' }\n        }\n      };\n      metricAgg.metric[metric.metricAgg] = {\n        field: metric.field\n      };\n    }\n    aggs.items.aggs[id] = {\n      date_histogram: {\n        field: 'timestamp',\n        min_doc_count: 0,\n        interval: bucketSize + 's',\n        extended_bounds: { min, max }\n      },\n      aggs: metric.aggs || metricAgg\n    };\n  });\n\n  params.body.aggs = aggs;\n\n  return callWithRequest(req, 'search', params)\n  .then((resp) => {\n    if (!resp.hits.total) return { nodes: {}, rows: []};\n    const buckets = resp.aggregations.items.buckets;\n    return {\n      // for node names\n      nodes: buckets.reduce(function (prev, curr) {\n        prev[curr.key] = {\n          name: nodeAggVals.getLatestAggKey(curr.node_name.buckets),\n          transport_address: nodeAggVals.getLatestAggKey(curr.node_transport_address.buckets),\n          node_ids: curr.node_ids.buckets.map(bucket => bucket.key), // needed in calculate_node_type to check if current master node\n          attributes: {\n            data: nodeAggVals.getNodeAttribute(curr.node_data_attributes.buckets),\n            master: nodeAggVals.getNodeAttribute(curr.node_master_attributes.buckets)\n          }\n        };\n        return prev;\n      }, {}),\n      // for listing metrics\n      rows: mapListingResponse({\n        type: 'nodes',\n        items: buckets,\n        listingMetrics,\n        min,\n        max,\n        bucketSize\n      })\n    };\n  });\n\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_default_node_from_id.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "/*\n * LEGACY: we need to handle legacy data with some workaround values\n * If node information can't be retrieved, we call this function\n * that provides some usable defaults\n */\n'use strict';\n\nmodule.exports = function getDefaultNodeFromId(nodeId) {\n  return {\n    id: nodeId,\n    name: nodeId,\n    transport_address: '',\n    master: false,\n    type: 'node',\n    attributes: {}\n  };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfZGVmYXVsdF9ub2RlX2Zyb21faWQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUtBLE1BQU0sQ0FBQyxPQUFPLEdBQUcsU0FBUyxvQkFBb0IsQ0FBQyxNQUFNLEVBQUU7QUFDckQsU0FBTztBQUNMLE1BQUUsRUFBRSxNQUFNO0FBQ1YsUUFBSSxFQUFFLE1BQU07QUFDWixxQkFBaUIsRUFBRSxFQUFFO0FBQ3JCLFVBQU0sRUFBRSxLQUFLO0FBQ2IsUUFBSSxFQUFFLE1BQU07QUFDWixjQUFVLEVBQUUsRUFBRTtHQUNmLENBQUM7Q0FDSCxDQUFDIiwiZmlsZSI6Ii9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9nZXRfZGVmYXVsdF9ub2RlX2Zyb21faWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogTEVHQUNZOiB3ZSBuZWVkIHRvIGhhbmRsZSBsZWdhY3kgZGF0YSB3aXRoIHNvbWUgd29ya2Fyb3VuZCB2YWx1ZXNcbiAqIElmIG5vZGUgaW5mb3JtYXRpb24gY2FuJ3QgYmUgcmV0cmlldmVkLCB3ZSBjYWxsIHRoaXMgZnVuY3Rpb25cbiAqIHRoYXQgcHJvdmlkZXMgc29tZSB1c2FibGUgZGVmYXVsdHNcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXREZWZhdWx0Tm9kZUZyb21JZChub2RlSWQpIHtcbiAgcmV0dXJuIHtcbiAgICBpZDogbm9kZUlkLFxuICAgIG5hbWU6IG5vZGVJZCxcbiAgICB0cmFuc3BvcnRfYWRkcmVzczogJycsXG4gICAgbWFzdGVyOiBmYWxzZSxcbiAgICB0eXBlOiAnbm9kZScsXG4gICAgYXR0cmlidXRlczoge31cbiAgfTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_default_node_from_id.js"
      ],
      "names": [],
      "mappings": ";;;;;;;AAKA,MAAM,CAAC,OAAO,GAAG,SAAS,oBAAoB,CAAC,MAAM,EAAE;AACrD,SAAO;AACL,MAAE,EAAE,MAAM;AACV,QAAI,EAAE,MAAM;AACZ,qBAAiB,EAAE,EAAE;AACrB,UAAM,EAAE,KAAK;AACb,QAAI,EAAE,MAAM;AACZ,cAAU,EAAE,EAAE;GACf,CAAC;CACH,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/get_default_node_from_id.js",
      "sourcesContent": [
        "/*\n * LEGACY: we need to handle legacy data with some workaround values\n * If node information can't be retrieved, we call this function\n * that provides some usable defaults\n */\nmodule.exports = function getDefaultNodeFromId(nodeId) {\n  return {\n    id: nodeId,\n    name: nodeId,\n    transport_address: '',\n    master: false,\n    type: 'node',\n    attributes: {}\n  };\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/lookups.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = {\n  nodeTypeClass: {\n    invalid: 'fa-exclamation-triangle',\n    node: 'fa-server',\n    master: 'fa-star',\n    master_only: 'fa-star-o',\n    data: 'fa-database',\n    client: 'fa-binoculars'\n  },\n\n  nodeTypeLabel: {\n    invalid: 'Invalid Node',\n    node: 'Node',\n    master: 'Master Node',\n    master_only: 'Master Only Node',\n    data: 'Data Only Node',\n    client: 'Client Node'\n  }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9sb29rdXBzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTSxDQUFDLE9BQU8sR0FBRztBQUNmLGVBQWEsRUFBRTtBQUNiLFdBQU8sRUFBRSx5QkFBeUI7QUFDbEMsUUFBSSxFQUFFLFdBQVc7QUFDakIsVUFBTSxFQUFFLFNBQVM7QUFDakIsZUFBVyxFQUFFLFdBQVc7QUFDeEIsUUFBSSxFQUFFLGFBQWE7QUFDbkIsVUFBTSxFQUFFLGVBQWU7R0FDeEI7O0FBRUQsZUFBYSxFQUFFO0FBQ2IsV0FBTyxFQUFFLGNBQWM7QUFDdkIsUUFBSSxFQUFFLE1BQU07QUFDWixVQUFNLEVBQUUsYUFBYTtBQUNyQixlQUFXLEVBQUUsa0JBQWtCO0FBQy9CLFFBQUksRUFBRSxnQkFBZ0I7QUFDdEIsVUFBTSxFQUFFLGFBQWE7R0FDdEI7Q0FDRixDQUFDIiwiZmlsZSI6Ii9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9sb29rdXBzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIG5vZGVUeXBlQ2xhc3M6IHtcbiAgICBpbnZhbGlkOiAnZmEtZXhjbGFtYXRpb24tdHJpYW5nbGUnLFxuICAgIG5vZGU6ICdmYS1zZXJ2ZXInLFxuICAgIG1hc3RlcjogJ2ZhLXN0YXInLFxuICAgIG1hc3Rlcl9vbmx5OiAnZmEtc3Rhci1vJyxcbiAgICBkYXRhOiAnZmEtZGF0YWJhc2UnLFxuICAgIGNsaWVudDogJ2ZhLWJpbm9jdWxhcnMnXG4gIH0sXG5cbiAgbm9kZVR5cGVMYWJlbDoge1xuICAgIGludmFsaWQ6ICdJbnZhbGlkIE5vZGUnLFxuICAgIG5vZGU6ICdOb2RlJyxcbiAgICBtYXN0ZXI6ICdNYXN0ZXIgTm9kZScsXG4gICAgbWFzdGVyX29ubHk6ICdNYXN0ZXIgT25seSBOb2RlJyxcbiAgICBkYXRhOiAnRGF0YSBPbmx5IE5vZGUnLFxuICAgIGNsaWVudDogJ0NsaWVudCBOb2RlJ1xuICB9XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/lookups.js"
      ],
      "names": [],
      "mappings": ";;AAAA,MAAM,CAAC,OAAO,GAAG;AACf,eAAa,EAAE;AACb,WAAO,EAAE,yBAAyB;AAClC,QAAI,EAAE,WAAW;AACjB,UAAM,EAAE,SAAS;AACjB,eAAW,EAAE,WAAW;AACxB,QAAI,EAAE,aAAa;AACnB,UAAM,EAAE,eAAe;GACxB;;AAED,eAAa,EAAE;AACb,WAAO,EAAE,cAAc;AACvB,QAAI,EAAE,MAAM;AACZ,UAAM,EAAE,aAAa;AACrB,eAAW,EAAE,kBAAkB;AAC/B,QAAI,EAAE,gBAAgB;AACtB,UAAM,EAAE,aAAa;GACtB;CACF,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/lookups.js",
      "sourcesContent": [
        "module.exports = {\n  nodeTypeClass: {\n    invalid: 'fa-exclamation-triangle',\n    node: 'fa-server',\n    master: 'fa-star',\n    master_only: 'fa-star-o',\n    data: 'fa-database',\n    client: 'fa-binoculars'\n  },\n\n  nodeTypeLabel: {\n    invalid: 'Invalid Node',\n    node: 'Node',\n    master: 'Master Node',\n    master_only: 'Master Only Node',\n    data: 'Data Only Node',\n    client: 'Client Node'\n  }\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/phone_home.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar root = require('requirefrom')('');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var config = server.config();\n\n  server.route({\n    path: '/api/marvel/v1/phone-home',\n    method: 'POST',\n    handler: function handler(req, reply) {\n      var body = req.payload;\n      var options = {\n        index: '.marvel',\n        type: 'phone_home',\n        body: body\n      };\n      callWithRequest(req, 'index', options).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL3JvdXRlcy9hcGkvdjEvcGhvbmVfaG9tZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN4QyxJQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMseUJBQXlCLENBQUMsQ0FBQzs7QUFFcEQsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFDLE1BQU0sRUFBSztBQUMzQixNQUFNLGVBQWUsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUM7QUFDckUsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDOztBQUUvQixRQUFNLENBQUMsS0FBSyxDQUFDO0FBQ1gsUUFBSSxFQUFFLDJCQUEyQjtBQUNqQyxVQUFNLEVBQUUsTUFBTTtBQUNkLFdBQU8sRUFBRSxpQkFBQyxHQUFHLEVBQUUsS0FBSyxFQUFLO0FBQ3ZCLFVBQU0sSUFBSSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUM7QUFDekIsVUFBTSxPQUFPLEdBQUc7QUFDZCxhQUFLLEVBQUUsU0FBUztBQUNoQixZQUFJLEVBQUUsWUFBWTtBQUNsQixZQUFJLEVBQUUsSUFBSTtPQUNYLENBQUM7QUFDRixxQkFBZSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQ3JDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FDTixDQUFDLFVBQUEsR0FBRztlQUFJLEtBQUssQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO09BQUEsQ0FBQyxDQUFDO0tBQzdDO0dBQ0YsQ0FBQyxDQUFDO0NBQ0osQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9yb3V0ZXMvYXBpL3YxL3Bob25lX2hvbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByb290ID0gcmVxdWlyZSgncmVxdWlyZWZyb20nKSgnJyk7XG5jb25zdCBoYW5kbGVFcnJvciA9IHJvb3QoJ3NlcnZlci9saWIvaGFuZGxlX2Vycm9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKHNlcnZlcikgPT4ge1xuICBjb25zdCBjYWxsV2l0aFJlcXVlc3QgPSBzZXJ2ZXIucGx1Z2lucy5lbGFzdGljc2VhcmNoLmNhbGxXaXRoUmVxdWVzdDtcbiAgY29uc3QgY29uZmlnID0gc2VydmVyLmNvbmZpZygpO1xuXG4gIHNlcnZlci5yb3V0ZSh7XG4gICAgcGF0aDogJy9hcGkvbWFydmVsL3YxL3Bob25lLWhvbWUnLFxuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGhhbmRsZXI6IChyZXEsIHJlcGx5KSA9PiB7XG4gICAgICBjb25zdCBib2R5ID0gcmVxLnBheWxvYWQ7XG4gICAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICBpbmRleDogJy5tYXJ2ZWwnLFxuICAgICAgICB0eXBlOiAncGhvbmVfaG9tZScsXG4gICAgICAgIGJvZHk6IGJvZHlcbiAgICAgIH07XG4gICAgICBjYWxsV2l0aFJlcXVlc3QocmVxLCAnaW5kZXgnLCBvcHRpb25zKVxuICAgICAgLnRoZW4ocmVwbHkpXG4gICAgICAuY2F0Y2goZXJyID0+IHJlcGx5KGhhbmRsZUVycm9yKGVyciwgcmVxKSkpO1xuICAgIH1cbiAgfSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/phone_home.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;AACxC,IAAM,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;;AAEpD,MAAM,CAAC,OAAO,GAAG,UAAC,MAAM,EAAK;AAC3B,MAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACrE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;;AAE/B,QAAM,CAAC,KAAK,CAAC;AACX,QAAI,EAAE,2BAA2B;AACjC,UAAM,EAAE,MAAM;AACd,WAAO,EAAE,iBAAC,GAAG,EAAE,KAAK,EAAK;AACvB,UAAM,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC;AACzB,UAAM,OAAO,GAAG;AACd,aAAK,EAAE,SAAS;AAChB,YAAI,EAAE,YAAY;AAClB,YAAI,EAAE,IAAI;OACX,CAAC;AACF,qBAAe,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,CACrC,IAAI,CAAC,KAAK,CAAC,SACN,CAAC,UAAA,GAAG;eAAI,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OAAA,CAAC,CAAC;KAC7C;GACF,CAAC,CAAC;CACJ,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/phone_home.js",
      "sourcesContent": [
        "const root = require('requirefrom')('');\nconst handleError = root('server/lib/handle_error');\n\nmodule.exports = (server) => {\n  const callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  const config = server.config();\n\n  server.route({\n    path: '/api/marvel/v1/phone-home',\n    method: 'POST',\n    handler: (req, reply) => {\n      const body = req.payload;\n      const options = {\n        index: '.marvel',\n        type: 'phone_home',\n        body: body\n      };\n      callWithRequest(req, 'index', options)\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/settings.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar Joi = require('joi');\nvar Boom = require('boom');\nvar root = require('requirefrom')('');\nvar settingSchemas = root('server/lib/setting_schemas');\nvar settingsModelProvider = root('server/lib/settings');\nvar getClusters = root('server/lib/get_clusters');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n  var config = server.config();\n  var index = config.get('marvel.index');\n  var Settings = settingsModelProvider(server);\n\n  server.route({\n    method: 'GET',\n    path: '/api/marvel/v1/settings',\n    handler: function handler(req, reply) {\n      return getClusters(req).then(function (clusters) {\n        var cluster = req.query.cluster;\n        var clusterKeys = cluster && [cluster] || _.map(clusters, function (cluster) {\n          return cluster.cluster_uuid;\n        });\n        var keys = [];\n        _.each(clusterKeys, function (cluster) {\n          _.each(_.keys(settingSchemas), function (key) {\n            keys.push(cluster + ':' + key);\n          });\n        });\n        return Settings.bulkFetch({ ids: keys, req: req });\n      }).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n\n  server.route({\n    method: 'GET',\n    path: '/api/marvel/v1/settings/{id}',\n    handler: function handler(req, reply) {\n      var parts = req.params.id.split(/:/);\n      var schema = settingSchemas[parts[1]];\n      if (!schema) return reply(Boom.notFound('Resouce does not exist.'));\n      return Settings.fetchById({ req: req, id: req.params.id }).then(reply)['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n\n  server.route({\n    method: ['PUT', 'POST'],\n    path: '/api/marvel/v1/settings/{id}',\n    config: {\n      validate: {\n        payload: function payload(value, options, next) {\n          var parts = options.context.params.id.split(/:/);\n          var schema = settingSchemas[parts[1]];\n          if (!schema) return next(Boom.notFound('Resouce does not exist'));\n          var settings = new Settings(value);\n          settings.validate();\n          next(null, settings);\n        }\n      }\n    },\n    handler: function handler(req, reply) {\n      var settings = req.payload;\n      return settings.save({ req: req, stripDefaults: true }).then(function (doc) {\n        reply(doc).code(201);\n      })['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL3JvdXRlcy9hcGkvdjEvc2V0dGluZ3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLENBQUMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDMUIsSUFBSSxHQUFHLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUMzQixJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDdEMsSUFBSSxjQUFjLEdBQUcsSUFBSSxDQUFDLDRCQUE0QixDQUFDLENBQUM7QUFDeEQsSUFBSSxxQkFBcUIsR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQztBQUN4RCxJQUFJLFdBQVcsR0FBRyxJQUFJLENBQUMseUJBQXlCLENBQUMsQ0FBQztBQUNsRCxJQUFJLFdBQVcsR0FBRyxJQUFJLENBQUMseUJBQXlCLENBQUMsQ0FBQzs7QUFFbEQsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFVLE1BQU0sRUFBRTtBQUNqQyxNQUFJLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDN0IsTUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUN2QyxNQUFJLFFBQVEsR0FBRyxxQkFBcUIsQ0FBQyxNQUFNLENBQUMsQ0FBQzs7QUFFN0MsUUFBTSxDQUFDLEtBQUssQ0FBQztBQUNYLFVBQU0sRUFBRSxLQUFLO0FBQ2IsUUFBSSxFQUFFLHlCQUF5QjtBQUMvQixXQUFPLEVBQUUsaUJBQVUsR0FBRyxFQUFFLEtBQUssRUFBRTtBQUM3QixhQUFPLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FDdEIsSUFB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VSxHQUFHLEVBQUUsS0FBSyxFQUFFO0FBQzdCLFVBQUksUUFBUSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUM7QUFDM0IsYUFBTyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FDdEQsSUFBSSxDQUFDLFVBQVUsR0FBRyxFQUFFO0FBQ25CLGFBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7T0FDdEIsQ0FBQyxTQUNJLENBQUMsVUFBQSxHQUFHO2VBQUksS0FBSyxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7T0FBQSxDQUFDLENBQUM7S0FDN0M7R0FDRixDQUFDLENBQUM7Q0FFSixDQUFDIiwiZmlsZSI6Ii9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL3JvdXRlcy9hcGkvdjEvc2V0dGluZ3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xudmFyIEpvaSA9IHJlcXVpcmUoJ2pvaScpO1xudmFyIEJvb20gPSByZXF1aXJlKCdib29tJyk7XG52YXIgcm9vdCA9IHJlcXVpcmUoJ3JlcXVpcmVmcm9tJykoJycpO1xudmFyIHNldHRpbmdTY2hlbWFzID0gcm9vdCgnc2VydmVyL2xpYi9zZXR0aW5nX3NjaGVtYXMnKTtcbnZhciBzZXR0aW5nc01vZGVsUHJvdmlkZXIgPSByb290KCdzZXJ2ZXIvbGliL3NldHRpbmdzJyk7XG52YXIgZ2V0Q2x1c3RlcnMgPSByb290KCdzZXJ2ZXIvbGliL2dldF9jbHVzdGVycycpO1xudmFyIGhhbmRsZUVycm9yID0gcm9vdCgnc2VydmVyL2xpYi9oYW5kbGVfZXJyb3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc2VydmVyKSB7XG4gIHZhciBjb25maWcgPSBzZXJ2ZXIuY29uZmlnKCk7XG4gIHZhciBpbmRleCA9IGNvbmZpZy5nZXQoJ21hcnZlbC5pbmRleCcpO1xuICB2YXIgU2V0dGluZ3MgPSBzZXR0aW5nc01vZGVsUHJvdmlkZXIoc2VydmVyKTtcblxuICBzZXJ2ZXIucm91dGUoe1xuICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgcGF0aDogJy9hcGkvbWFydmVsL3YxL3NldHRpbmdzJyxcbiAgICBoYW5kbGVyOiBmdW5jdGlvbiAocmVxLCByZXBseSkge1xuICAgICAgcmV0dXJuIGdldENsdXN0ZXJzKHJlcSlcbiAgICAgIC50aGVuKChjbHVzdGVycykgPT4ge1xuICAgICAgICB2YXIgY2x1c3RlciA9IHJlcS5xdWVyeS5jbHVzdGVyO1xuICAgICAgICB2YXIgY2x1c3RlcktleXMgPSBjbHVzdGVyICYmIFtjbHVzdGVyXSB8fCBfLm1hcChjbHVzdGVycywgKGNsdXN0ZXIpID0+IGNsdXN0ZXIuY2x1c3Rlcl91dWlkKTtcbiAgICAgICAgdmFyIGtleXMgPSBbXTtcbiAgICAgICAgXy5lYWNoKGNsdXN0ZXJLZXlzLCBmdW5jdGlvbiAoY2x1c3Rlcikge1xuICAgICAgICAgIF8uZWFjaChfLmtleXMoc2V0dGluZ1NjaGVtYXMpLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICBrZXlzLnB1c2goY2x1c3RlciArICc6JyArIGtleSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gU2V0dGluZ3MuYnVsa0ZldGNoKHsgaWRzOiBrZXlzLCByZXE6IHJlcSB9KTtcbiAgICAgIH0pXG4gICAgICAudGhlbihyZXBseSlcbiAgICAgIC5jYXRjaChlcnIgPT4gcmVwbHkoaGFuZGxlRXJyb3IoZXJyLCByZXEpKSk7XG4gICAgfVxuICB9KTtcblxuICBzZXJ2ZXIucm91dGUoe1xuICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgcGF0aDogJy9hcGkvbWFydmVsL3YxL3NldHRpbmdzL3tpZH0nLFxuICAgIGhhbmRsZXI6IGZ1bmN0aW9uIChyZXEsIHJlcGx5KSB7XG4gICAgICB2YXIgcGFydHMgPSByZXEucGFyYW1zLmlkLnNwbGl0KC86Lyk7XG4gICAgICB2YXIgc2NoZW1hID0gc2V0dGluZ1NjaGVtYXNbcGFydHNbMV1dO1xuICAgICAgaWYgKCFzY2hlbWEpIHJldHVybiByZXBseShCb29tLm5vdEZvdW5kKCdSZXNvdWNlIGRvZXMgbm90IGV4aXN0LicpKTtcbiAgICAgIHJldHVybiBTZXR0aW5ncy5mZXRjaEJ5SWQoeyByZXE6IHJlcSwgaWQ6IHJlcS5wYXJhbXMuaWQgfSlcbiAgICAgIC50aGVuKHJlcGx5KVxuICAgICAgLmNhdGNoKGVyciA9PiByZXBseShoYW5kbGVFcnJvcihlcnIsIHJlcSkpKTtcbiAgICB9XG4gIH0pO1xuXG4gIHNlcnZlci5yb3V0ZSh7XG4gICAgbWV0aG9kOiBbICdQVVQnLCAnUE9TVCcgXSxcbiAgICBwYXRoOiAnL2FwaS9tYXJ2ZWwvdjEvc2V0dGluZ3Mve2lkfScsXG4gICAgY29uZmlnOiB7XG4gICAgICB2YWxpZGF0ZToge1xuICAgICAgICBwYXlsb2FkOiBmdW5jdGlvbiAodmFsdWUsIG9wdGlvbnMsIG5leHQpIHtcbiAgICAgICAgICB2YXIgcGFydHMgPSBvcHRpb25zLmNvbnRleHQucGFyYW1zLmlkLnNwbGl0KC86Lyk7XG4gICAgICAgICAgdmFyIHNjaGVtYSA9IHNldHRpbmdTY2hlbWFzW3BhcnRzWzFdXTtcbiAgICAgICAgICBpZiAoIXNjaGVtYSkgcmV0dXJuIG5leHQoQm9vbS5ub3RGb3VuZCgnUmVzb3VjZSBkb2VzIG5vdCBleGlzdCcpKTtcbiAgICAgICAgICB2YXIgc2V0dGluZ3MgPSBuZXcgU2V0dGluZ3ModmFsdWUpO1xuICAgICAgICAgIHNldHRpbmdzLnZhbGlkYXRlKCk7XG4gICAgICAgICAgbmV4dChudWxsLCBzZXR0aW5ncyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGhhbmRsZXI6IGZ1bmN0aW9uIChyZXEsIHJlcGx5KSB7XG4gICAgICB2YXIgc2V0dGluZ3MgPSByZXEucGF5bG9hZDtcbiAgICAgIHJldHVybiBzZXR0aW5ncy5zYXZlKHsgcmVxOiByZXEsIHN0cmlwRGVmYXVsdHM6IHRydWUgfSlcbiAgICAgIC50aGVuKGZ1bmN0aW9uIChkb2MpIHtcbiAgICAgICAgcmVwbHkoZG9jKS5jb2RlKDIwMSk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGVyciA9PiByZXBseShoYW5kbGVFcnJvcihlcnIsIHJlcSkpKTtcbiAgICB9XG4gIH0pO1xuXG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/settings.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/settings.js",
      "sourcesContent": [
        "var _ = require('lodash');\nvar Joi = require('joi');\nvar Boom = require('boom');\nvar root = require('requirefrom')('');\nvar settingSchemas = root('server/lib/setting_schemas');\nvar settingsModelProvider = root('server/lib/settings');\nvar getClusters = root('server/lib/get_clusters');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n  var config = server.config();\n  var index = config.get('marvel.index');\n  var Settings = settingsModelProvider(server);\n\n  server.route({\n    method: 'GET',\n    path: '/api/marvel/v1/settings',\n    handler: function (req, reply) {\n      return getClusters(req)\n      .then((clusters) => {\n        var cluster = req.query.cluster;\n        var clusterKeys = cluster && [cluster] || _.map(clusters, (cluster) => cluster.cluster_uuid);\n        var keys = [];\n        _.each(clusterKeys, function (cluster) {\n          _.each(_.keys(settingSchemas), function (key) {\n            keys.push(cluster + ':' + key);\n          });\n        });\n        return Settings.bulkFetch({ ids: keys, req: req });\n      })\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n  server.route({\n    method: 'GET',\n    path: '/api/marvel/v1/settings/{id}',\n    handler: function (req, reply) {\n      var parts = req.params.id.split(/:/);\n      var schema = settingSchemas[parts[1]];\n      if (!schema) return reply(Boom.notFound('Resouce does not exist.'));\n      return Settings.fetchById({ req: req, id: req.params.id })\n      .then(reply)\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n  server.route({\n    method: [ 'PUT', 'POST' ],\n    path: '/api/marvel/v1/settings/{id}',\n    config: {\n      validate: {\n        payload: function (value, options, next) {\n          var parts = options.context.params.id.split(/:/);\n          var schema = settingSchemas[parts[1]];\n          if (!schema) return next(Boom.notFound('Resouce does not exist'));\n          var settings = new Settings(value);\n          settings.validate();\n          next(null, settings);\n        }\n      }\n    },\n    handler: function (req, reply) {\n      var settings = req.payload;\n      return settings.save({ req: req, stripDefaults: true })\n      .then(function (doc) {\n        reply(doc).code(201);\n      })\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n};\n"
      ]
    },
    "mtime": 1470256811000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/setting_schemas.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = {\n  'metric-thresholds': require('./schemas/metric_thresholds')\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9zZXR0aW5nX3NjaGVtYXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLENBQUMsT0FBTyxHQUFHO0FBQ2YscUJBQW1CLEVBQUUsT0FBTyxDQUFDLDZCQUE2QixDQUFDO0NBQzVELENBQUMiLCJmaWxlIjoiL2hvbWUvZWxhc3RpY3NlYXJjaC0yLjQuMS9iaW4va2liYW5hLTQuNi4xLWxpbnV4LXg4Nl82NC9pbnN0YWxsZWRQbHVnaW5zL21hcnZlbC9zZXJ2ZXIvbGliL3NldHRpbmdfc2NoZW1hcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuICAnbWV0cmljLXRocmVzaG9sZHMnOiByZXF1aXJlKCcuL3NjaGVtYXMvbWV0cmljX3RocmVzaG9sZHMnKVxufTtcblxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/setting_schemas.js"
      ],
      "names": [],
      "mappings": ";;AAAA,MAAM,CAAC,OAAO,GAAG;AACf,qBAAmB,EAAE,OAAO,CAAC,6BAA6B,CAAC;CAC5D,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/setting_schemas.js",
      "sourcesContent": [
        "module.exports = {\n  'metric-thresholds': require('./schemas/metric_thresholds')\n};\n\n"
      ]
    },
    "mtime": 1466441064000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/schemas/metric_thresholds.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar moment = require('moment');\nvar Joi = require('joi');\nvar root = require('requirefrom')('');\nvar _ = require('lodash');\nvar join = require('path').join;\nvar metrics = root('public/lib/metrics');\nvar thresholdPattern = /[<>=]{1,2}[\\d\\.]+/;\n\nvar schema = {\n  _id: Joi.string(),\n  _created: Joi.date()['default'](function () {\n    return moment.utc().toISOString();\n  }, 'created date'),\n  _updated: Joi.date()\n};\n\n_.each(metrics, function (metric, field) {\n  schema[field + '.warning'] = Joi.string().regex(thresholdPattern)['default'](metric.defaults.warning);\n  schema[field + '.critical'] = Joi.string().regex(thresholdPattern)['default'](metric.defaults.critical);\n  schema[field + '.interval'] = Joi.string().regex(/\\d+[yMwdhms]/)['default'](metric.defaults.interval);\n  schema[field + '.periods'] = Joi.number().min(1)['default'](metric.defaults.periods);\n});\n\nmodule.exports = Joi.object(schema)['default']();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9zY2hlbWFzL21ldHJpY190aHJlc2hvbGRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQy9CLElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN6QixJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDdEMsSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzFCLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFDaEMsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFDekMsSUFBSSxnQkFBZ0IsR0FBRyxtQkFBbUIsQ0FBQzs7QUFFM0MsSUFBSSxNQUFNLEdBQUc7QUFDWCxLQUFHLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRTtBQUNqQixVQUFRLEVBQUUsR0FBRyxDQUFDLElBQUksRUFBRSxXQUFRLENBQUMsWUFBWTtBQUN2QyxXQUFPLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztHQUNuQyxFQUFFLGNBQWMsQ0FBQztBQUNsQixVQUFRLEVBQUUsR0FBRyxDQUFDLElBQUksRUFBRTtDQUNyQixDQUFDOztBQUVGLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFVBQVUsTUFBTSxFQUFFLEtBQUssRUFBRTtBQUN2QyxRQUFNLENBQUMsS0FBSyxHQUFHLFVBQVUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsV0FBUSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDbkcsUUFBTSxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUMsR0FBRyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLFdBQVEsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3JHLFFBQU0sQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsV0FBUSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDbkcsUUFBTSxDQUFDLEtBQUssR0FBRyxVQUFVLENBQUMsR0FBRyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxXQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztDQUNuRixDQUFDLENBQUM7O0FBRUgsTUFBTSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFRLEVBQUUsQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvc2NoZW1hcy9tZXRyaWNfdGhyZXNob2xkcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb21lbnQgPSByZXF1aXJlKCdtb21lbnQnKTtcbnZhciBKb2kgPSByZXF1aXJlKCdqb2knKTtcbnZhciByb290ID0gcmVxdWlyZSgncmVxdWlyZWZyb20nKSgnJyk7XG52YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xudmFyIGpvaW4gPSByZXF1aXJlKCdwYXRoJykuam9pbjtcbnZhciBtZXRyaWNzID0gcm9vdCgncHVibGljL2xpYi9tZXRyaWNzJyk7XG52YXIgdGhyZXNob2xkUGF0dGVybiA9IC9bPD49XXsxLDJ9W1xcZFxcLl0rLztcblxudmFyIHNjaGVtYSA9IHtcbiAgX2lkOiBKb2kuc3RyaW5nKCksXG4gIF9jcmVhdGVkOiBKb2kuZGF0ZSgpLmRlZmF1bHQoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBtb21lbnQudXRjKCkudG9JU09TdHJpbmcoKTtcbiAgfSwgJ2NyZWF0ZWQgZGF0ZScpLFxuICBfdXBkYXRlZDogSm9pLmRhdGUoKVxufTtcblxuXy5lYWNoKG1ldHJpY3MsIGZ1bmN0aW9uIChtZXRyaWMsIGZpZWxkKSB7XG4gIHNjaGVtYVtmaWVsZCArICcud2FybmluZyddID0gSm9pLnN0cmluZygpLnJlZ2V4KHRocmVzaG9sZFBhdHRlcm4pLmRlZmF1bHQobWV0cmljLmRlZmF1bHRzLndhcm5pbmcpO1xuICBzY2hlbWFbZmllbGQgKyAnLmNyaXRpY2FsJ10gPSBKb2kuc3RyaW5nKCkucmVnZXgodGhyZXNob2xkUGF0dGVybikuZGVmYXVsdChtZXRyaWMuZGVmYXVsdHMuY3JpdGljYWwpO1xuICBzY2hlbWFbZmllbGQgKyAnLmludGVydmFsJ10gPSBKb2kuc3RyaW5nKCkucmVnZXgoL1xcZCtbeU13ZGhtc10vKS5kZWZhdWx0KG1ldHJpYy5kZWZhdWx0cy5pbnRlcnZhbCk7XG4gIHNjaGVtYVtmaWVsZCArICcucGVyaW9kcyddID0gSm9pLm51bWJlcigpLm1pbigxKS5kZWZhdWx0KG1ldHJpYy5kZWZhdWx0cy5wZXJpb2RzKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEpvaS5vYmplY3Qoc2NoZW1hKS5kZWZhdWx0KCk7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/schemas/metric_thresholds.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,IAAI,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;AACtC,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;AAChC,IAAI,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC;AACzC,IAAI,gBAAgB,GAAG,mBAAmB,CAAC;;AAE3C,IAAI,MAAM,GAAG;AACX,KAAG,EAAE,GAAG,CAAC,MAAM,EAAE;AACjB,UAAQ,EAAE,GAAG,CAAC,IAAI,EAAE,WAAQ,CAAC,YAAY;AACvC,WAAO,MAAM,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC;GACnC,EAAE,cAAc,CAAC;AAClB,UAAQ,EAAE,GAAG,CAAC,IAAI,EAAE;CACrB,CAAC;;AAEF,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,MAAM,EAAE,KAAK,EAAE;AACvC,QAAM,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,WAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACnG,QAAM,CAAC,KAAK,GAAG,WAAW,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,WAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACrG,QAAM,CAAC,KAAK,GAAG,WAAW,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,WAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACnG,QAAM,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,WAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;CACnF,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,WAAQ,EAAE,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/schemas/metric_thresholds.js",
      "sourcesContent": [
        "var moment = require('moment');\nvar Joi = require('joi');\nvar root = require('requirefrom')('');\nvar _ = require('lodash');\nvar join = require('path').join;\nvar metrics = root('public/lib/metrics');\nvar thresholdPattern = /[<>=]{1,2}[\\d\\.]+/;\n\nvar schema = {\n  _id: Joi.string(),\n  _created: Joi.date().default(function () {\n    return moment.utc().toISOString();\n  }, 'created date'),\n  _updated: Joi.date()\n};\n\n_.each(metrics, function (metric, field) {\n  schema[field + '.warning'] = Joi.string().regex(thresholdPattern).default(metric.defaults.warning);\n  schema[field + '.critical'] = Joi.string().regex(thresholdPattern).default(metric.defaults.critical);\n  schema[field + '.interval'] = Joi.string().regex(/\\d+[yMwdhms]/).default(metric.defaults.interval);\n  schema[field + '.periods'] = Joi.number().min(1).default(metric.defaults.periods);\n});\n\nmodule.exports = Joi.object(schema).default();\n"
      ]
    },
    "mtime": 1466441064000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/settings.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar root = require('requirefrom')('');\nvar Model = root('public/lib/model');\nvar settingSchemas = root('server/lib/setting_schemas');\nvar Joi = require('joi');\nvar stripDefaults = root('server/lib/strip_defaults');\nvar moment = require('moment');\n\nmodule.exports = function settingsModelProvider(server) {\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var config = server.config();\n  var index = config.get('marvel.index');\n\n  function Settings(data, options) {\n    Model.call(this, data, options);\n    this.options.stripEmpties = true;\n  }\n\n  Settings.prototype = new Model();\n\n  Settings.prototype.validate = function () {\n    var parts = this.get('_id').split(/:/);\n    var cluster = parts[0];\n    var id = parts[1];\n    var schema = settingSchemas[id];\n    if (!schema) throw new Error('Schema missing for ' + id);\n    var valid = Joi.validate(Model.flatten(this.data), schema);\n    if (valid.error) {\n      throw valid.error;\n    }\n    this.set(valid.value);\n  };\n\n  Settings.prototype.save = function (options) {\n    this.set('_updated', moment.utc().toISOString());\n    options = options || {};\n    var id = this.get('_id');\n    var data = this.data;\n    var req = options.req;\n    if (options.stripDefaults) {\n      var parts = this.get('_id').split(/:/);\n      var schema = settingSchemas[parts[1]];\n      data = stripDefaults(data, schema);\n    }\n    var self = this;\n    var params = {\n      index: index,\n      type: 'settings',\n      id: id,\n      body: Model.explode(data)\n    };\n    return callWithRequest(req, 'index', params).then(function (resp) {\n      return self;\n    });\n  };\n\n  Settings.fetchById = function (options) {\n    var params = {\n      index: index,\n      type: 'settings',\n      id: options.id\n    };\n    return callWithRequest(options.req, 'get', params).then(function (resp) {\n      var settings = new Settings(resp._source);\n      settings.validate();\n      return settings;\n    });\n  };\n\n  Settings.fetchOrCreate = function (id) {\n    return Settings.fetchById(id)['catch'](function () {\n      var settings = new Settings({ _id: id });\n      settings.validate();\n      return settings;\n    });\n  };\n\n  Settings.bulkFetch = function (options) {\n    var params = {\n      index: config.get('marvel.index'),\n      type: 'settings',\n      body: { ids: options.ids }\n    };\n    return callWithRequest(options.req, 'mget', params).then(function (resp) {\n      var results = resp.docs.map(function (doc) {\n        var value = doc.found ? doc._source : {};\n        value._id = doc._id;\n        var settings = new Settings(value);\n        settings.validate();\n        return settings;\n      });\n      return results;\n    });\n  };\n\n  return Settings;\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/settings.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/settings.js",
      "sourcesContent": [
        "var root = require('requirefrom')('');\nvar Model = root('public/lib/model');\nvar settingSchemas = root('server/lib/setting_schemas');\nvar Joi = require('joi');\nvar stripDefaults = root('server/lib/strip_defaults');\nvar moment = require('moment');\n\nmodule.exports = function settingsModelProvider(server) {\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var config = server.config();\n  var index = config.get('marvel.index');\n\n  function Settings(data, options) {\n    Model.call(this, data, options);\n    this.options.stripEmpties = true;\n  }\n\n  Settings.prototype = new Model();\n\n  Settings.prototype.validate = function () {\n    var parts = this.get('_id').split(/:/);\n    var cluster = parts[0];\n    var id = parts[1];\n    var schema = settingSchemas[id];\n    if (!schema) throw new Error('Schema missing for ' + id);\n    var valid = Joi.validate(Model.flatten(this.data), schema);\n    if (valid.error) {\n      throw valid.error;\n    }\n    this.set(valid.value);\n  };\n\n  Settings.prototype.save = function (options) {\n    this.set('_updated', moment.utc().toISOString());\n    options = options || {};\n    var id = this.get('_id');\n    var data = this.data;\n    var req = options.req;\n    if (options.stripDefaults) {\n      var parts = this.get('_id').split(/:/);\n      var schema = settingSchemas[parts[1]];\n      data = stripDefaults(data, schema);\n    }\n    var self = this;\n    var params = {\n      index: index,\n      type: 'settings',\n      id: id,\n      body: Model.explode(data)\n    };\n    return callWithRequest(req, 'index', params).then(function (resp) {\n      return self;\n    });\n  };\n\n  Settings.fetchById = function (options) {\n    var params = {\n      index: index,\n      type: 'settings',\n      id: options.id\n    };\n    return callWithRequest(options.req, 'get', params).then(function (resp) {\n      var settings = new Settings(resp._source);\n      settings.validate();\n      return settings;\n    });\n  };\n\n  Settings.fetchOrCreate = function (id) {\n    return Settings.fetchById(id).catch(function () {\n      var settings = new Settings({ _id: id });\n      settings.validate();\n      return settings;\n    });\n  };\n\n  Settings.bulkFetch = function (options) {\n    var params = {\n      index: config.get('marvel.index'),\n      type: 'settings',\n      body: { ids: options.ids }\n    };\n    return callWithRequest(options.req, 'mget', params).then(function (resp) {\n      var results = resp.docs.map(function (doc) {\n        var value = (doc.found) ? doc._source : {};\n        value._id = doc._id;\n        var settings = new Settings(value);\n        settings.validate();\n        return settings;\n      });\n      return results;\n    });\n  };\n\n  return Settings;\n\n};\n"
      ]
    },
    "mtime": 1466441064000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/public/lib/model.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\n\nfunction Model(data, options) {\n  this.options = options || {};\n  this.data = Model.explode(data);\n}\n\nModel.prototype.get = function (key) {\n  return _.get(this.data, key);\n};\n\nModel.prototype.set = function (key, val) {\n  var self = this;\n  if (_.isPlainObject(key)) {\n    _.each(Model.flatten(key), function (val, key) {\n      _.get(self.data, key, val);\n    });\n  } else {\n    _.set(this.data, key, val);\n  }\n};\n\nModel.prototype.toObject = function (options) {\n  options = _.defaults({}, options, this.options);\n  var data = this.data;\n  if (options.flatten) data = Model.flatten(data);\n  return data;\n};\n\nModel.prototype.toJSON = function () {\n  return this.data;\n};\n\nModel.stripEmpties = function (obj) {\n  for (var i in obj) {\n    if (_.isEmpty(obj[i])) {\n      delete obj[i];\n    } else if (typeof obj[i] === 'object') {\n      Model.stripEmpties(obj[i]);\n    }\n  }\n  return obj;\n};\n\nModel.flatten = function flatten(obj, path, newObj) {\n  newObj = newObj || {};\n  path = path || [];\n  for (var i in obj) {\n    if (_.isPlainObject(obj[i]) && !_.isArray(obj[i])) {\n      flatten(obj[i], path.concat(i), newObj);\n    } else {\n      newObj[path.concat(i).join('.')] = obj[i];\n    }\n  }\n  return newObj;\n};\n\nModel.explode = function explode(obj) {\n  var newObj = {};\n  _.each(obj, function (val, key) {\n    _.set(newObj, key, val);\n  });\n  return newObj;\n};\n\nmodule.exports = Model;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvcHVibGljL2xpYi9tb2RlbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQzs7QUFFMUIsU0FBUyxLQUFLLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRTtBQUM1QixNQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7QUFDN0IsTUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0NBQ2pDOztBQUVELEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxHQUFHLFVBQVUsR0FBRyxFQUFFO0FBQ25DLFNBQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0NBQzlCLENBQUM7O0FBRUYsS0FBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEdBQUcsVUFBVSxHQUFHLEVBQUUsR0FBRyxFQUFFO0FBQ3hDLE1BQUksSUFBSSxHQUFHLElBQUksQ0FBQztBQUNoQixNQUFJLENBQUMsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLEVBQUU7QUFDeEIsS0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLFVBQVUsR0FBRyxFQUFFLEdBQUcsRUFBRTtBQUM3QyxPQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0tBQzVCLENBQUMsQ0FBQztHQUNKLE1BQU07QUFDTCxLQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0dBQzVCO0NBQ0YsQ0FBQzs7QUFFRixLQUFLLENBQUMsU0FBUyxDQUFDLFFBQVEsR0FBRyxVQUFVLE9BQU8sRUFBRTtBQUM1QyxTQUFPLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNoRCxNQUFJLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO0FBQ3JCLE1BQUksT0FBTyxDQUFDLE9BQU8sRUFBRSxJQUFJLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoRCxTQUFPLElBQUksQ0FBQztDQUNiLENBQUM7O0FBRUYsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsWUFBWTtBQUNuQyxTQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7Q0FDbEIsQ0FBQzs7QUFFRixLQUFLLENBQUMsWUFBWSxHQUFHLFVBQVUsR0FBRyxFQUFFO0FBQ2xDLE9BQUssSUFBSSxDQUFDLElBQUksR0FBRyxFQUFFO0FBQ2pCLFFBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNyQixhQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNmLE1BQU0sSUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsS0FBSyxRQUFRLEVBQUU7QUFDckMsV0FBSyxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1QjtHQUNGO0FBQ0QsU0FBTyxHQUFHLENBQUM7Q0FDWixDQUFDOztBQUVGLEtBQUssQ0FBQyxPQUFPLEdBQUcsU0FBUyxPQUFPLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUU7QUFDbEQsUUFBTSxHQUFHLE1BQU0sSUFBSSxFQUFFLENBQUM7QUFDdEIsTUFBSSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7QUFDbEIsT0FBSyxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUU7QUFDakIsUUFBSSxDQUFDLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNqRCxhQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDekMsTUFBTTtBQUNMLFlBQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUMzQztHQUNGO0FBQ0QsU0FBTyxNQUFNLENBQUM7Q0FDZixDQUFDOztBQUVGLEtBQUssQ0FBQyxPQUFPLEdBQUcsU0FBUyxPQUFPLENBQUMsR0FBRyxFQUFFO0FBQ3BDLE1BQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztBQUNoQixHQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxVQUFVLEdBQUcsRUFBRSxHQUFHLEVBQUU7QUFDOUIsS0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0dBQ3pCLENBQUMsQ0FBQztBQUNILFNBQU8sTUFBTSxDQUFDO0NBQ2YsQ0FBQzs7QUFFRixNQUFNLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3B1YmxpYy9saWIvbW9kZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuXG5mdW5jdGlvbiBNb2RlbChkYXRhLCBvcHRpb25zKSB7XG4gIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHRoaXMuZGF0YSA9IE1vZGVsLmV4cGxvZGUoZGF0YSk7XG59XG5cbk1vZGVsLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiBfLmdldCh0aGlzLmRhdGEsIGtleSk7XG59O1xuXG5Nb2RlbC5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24gKGtleSwgdmFsKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgaWYgKF8uaXNQbGFpbk9iamVjdChrZXkpKSB7XG4gICAgXy5lYWNoKE1vZGVsLmZsYXR0ZW4oa2V5KSwgZnVuY3Rpb24gKHZhbCwga2V5KSB7XG4gICAgICBfLmdldChzZWxmLmRhdGEsIGtleSwgdmFsKTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBfLnNldCh0aGlzLmRhdGEsIGtleSwgdmFsKTtcbiAgfVxufTtcblxuTW9kZWwucHJvdG90eXBlLnRvT2JqZWN0ID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IF8uZGVmYXVsdHMoe30sIG9wdGlvbnMsIHRoaXMub3B0aW9ucyk7XG4gIHZhciBkYXRhID0gdGhpcy5kYXRhO1xuICBpZiAob3B0aW9ucy5mbGF0dGVuKSBkYXRhID0gTW9kZWwuZmxhdHRlbihkYXRhKTtcbiAgcmV0dXJuIGRhdGE7XG59O1xuXG5Nb2RlbC5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5kYXRhO1xufTtcblxuTW9kZWwuc3RyaXBFbXB0aWVzID0gZnVuY3Rpb24gKG9iaikge1xuICBmb3IgKHZhciBpIGluIG9iaikge1xuICAgIGlmIChfLmlzRW1wdHkob2JqW2ldKSkge1xuICAgICAgZGVsZXRlIG9ialtpXTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBvYmpbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBNb2RlbC5zdHJpcEVtcHRpZXMob2JqW2ldKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG9iajtcbn07XG5cbk1vZGVsLmZsYXR0ZW4gPSBmdW5jdGlvbiBmbGF0dGVuKG9iaiwgcGF0aCwgbmV3T2JqKSB7XG4gIG5ld09iaiA9IG5ld09iaiB8fCB7fTtcbiAgcGF0aCA9IHBhdGggfHwgW107XG4gIGZvciAodmFyIGkgaW4gb2JqKSB7XG4gICAgaWYgKF8uaXNQbGFpbk9iamVjdChvYmpbaV0pICYmICFfLmlzQXJyYXkob2JqW2ldKSkge1xuICAgICAgZmxhdHRlbihvYmpbaV0sIHBhdGguY29uY2F0KGkpLCBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBuZXdPYmpbcGF0aC5jb25jYXQoaSkuam9pbignLicpXSA9IG9ialtpXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG5ld09iajtcbn07XG5cbk1vZGVsLmV4cGxvZGUgPSBmdW5jdGlvbiBleHBsb2RlKG9iaikge1xuICB2YXIgbmV3T2JqID0ge307XG4gIF8uZWFjaChvYmosIGZ1bmN0aW9uICh2YWwsIGtleSkge1xuICAgIF8uc2V0KG5ld09iaiwga2V5LCB2YWwpO1xuICB9KTtcbiAgcmV0dXJuIG5ld09iajtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTW9kZWw7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/public/lib/model.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/public/lib/model.js",
      "sourcesContent": [
        "var _ = require('lodash');\n\nfunction Model(data, options) {\n  this.options = options || {};\n  this.data = Model.explode(data);\n}\n\nModel.prototype.get = function (key) {\n  return _.get(this.data, key);\n};\n\nModel.prototype.set = function (key, val) {\n  var self = this;\n  if (_.isPlainObject(key)) {\n    _.each(Model.flatten(key), function (val, key) {\n      _.get(self.data, key, val);\n    });\n  } else {\n    _.set(this.data, key, val);\n  }\n};\n\nModel.prototype.toObject = function (options) {\n  options = _.defaults({}, options, this.options);\n  var data = this.data;\n  if (options.flatten) data = Model.flatten(data);\n  return data;\n};\n\nModel.prototype.toJSON = function () {\n  return this.data;\n};\n\nModel.stripEmpties = function (obj) {\n  for (var i in obj) {\n    if (_.isEmpty(obj[i])) {\n      delete obj[i];\n    } else if (typeof obj[i] === 'object') {\n      Model.stripEmpties(obj[i]);\n    }\n  }\n  return obj;\n};\n\nModel.flatten = function flatten(obj, path, newObj) {\n  newObj = newObj || {};\n  path = path || [];\n  for (var i in obj) {\n    if (_.isPlainObject(obj[i]) && !_.isArray(obj[i])) {\n      flatten(obj[i], path.concat(i), newObj);\n    } else {\n      newObj[path.concat(i).join('.')] = obj[i];\n    }\n  }\n  return newObj;\n};\n\nModel.explode = function explode(obj) {\n  var newObj = {};\n  _.each(obj, function (val, key) {\n    _.set(newObj, key, val);\n  });\n  return newObj;\n};\n\nmodule.exports = Model;\n"
      ]
    },
    "mtime": 1466441064000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/strip_defaults.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar root = require('requirefrom')('');\nvar _ = require('lodash');\nvar Joi = require('joi');\nvar flatten = root('public/lib/model').flatten;\n\nmodule.exports = function (body, schema) {\n  var target = flatten(body);\n  var defaults = flatten(Joi.validate({}, schema).value);\n  _.each(defaults, function (val, key) {\n    if (target[key] === defaults[key]) delete target[key];\n  });\n  return target;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL2xpYi9zdHJpcF9kZWZhdWx0cy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN0QyxJQUFJLENBQUMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDMUIsSUFBSSxHQUFHLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLE9BQU8sQ0FBQzs7QUFFL0MsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFVLElBQUksRUFBRSxNQUFNLEVBQUU7QUFDdkMsTUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzNCLE1BQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN2RCxHQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxVQUFVLEdBQUcsRUFBRSxHQUFHLEVBQUU7QUFDbkMsUUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0dBQ3ZELENBQUMsQ0FBQztBQUNILFNBQU8sTUFBTSxDQUFDO0NBQ2YsQ0FBQyIsImZpbGUiOiIvaG9tZS9lbGFzdGljc2VhcmNoLTIuNC4xL2Jpbi9raWJhbmEtNC42LjEtbGludXgteDg2XzY0L2luc3RhbGxlZFBsdWdpbnMvbWFydmVsL3NlcnZlci9saWIvc3RyaXBfZGVmYXVsdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm9vdCA9IHJlcXVpcmUoJ3JlcXVpcmVmcm9tJykoJycpO1xudmFyIF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcbnZhciBKb2kgPSByZXF1aXJlKCdqb2knKTtcbnZhciBmbGF0dGVuID0gcm9vdCgncHVibGljL2xpYi9tb2RlbCcpLmZsYXR0ZW47XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGJvZHksIHNjaGVtYSkge1xuICB2YXIgdGFyZ2V0ID0gZmxhdHRlbihib2R5KTtcbiAgdmFyIGRlZmF1bHRzID0gZmxhdHRlbihKb2kudmFsaWRhdGUoe30sIHNjaGVtYSkudmFsdWUpO1xuICBfLmVhY2goZGVmYXVsdHMsIGZ1bmN0aW9uICh2YWwsIGtleSkge1xuICAgIGlmICh0YXJnZXRba2V5XSA9PT0gZGVmYXVsdHNba2V5XSkgZGVsZXRlIHRhcmdldFtrZXldO1xuICB9KTtcbiAgcmV0dXJuIHRhcmdldDtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/strip_defaults.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;AACtC,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,IAAI,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC;;AAE/C,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE,MAAM,EAAE;AACvC,MAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3B,MAAI,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;AACvD,GAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AACnC,QAAI,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,GAAG,CAAC,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;GACvD,CAAC,CAAC;AACH,SAAO,MAAM,CAAC;CACf,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/lib/strip_defaults.js",
      "sourcesContent": [
        "var root = require('requirefrom')('');\nvar _ = require('lodash');\nvar Joi = require('joi');\nvar flatten = root('public/lib/model').flatten;\n\nmodule.exports = function (body, schema) {\n  var target = flatten(body);\n  var defaults = flatten(Joi.validate({}, schema).value);\n  _.each(defaults, function (val, key) {\n    if (target[key] === defaults[key]) delete target[key];\n  });\n  return target;\n};\n"
      ]
    },
    "mtime": 1466441064000
  },
  "{\"filename\":\"/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/shards.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _ = require('lodash');\nvar root = require('requirefrom')('');\nvar handleError = root('server/lib/handle_error');\n\nmodule.exports = function (server) {\n  var callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  var config = server.config();\n\n  server.route({\n    path: '/api/marvel/v1/clusters/{cluster_uuid}/state/{state_uuid}/shards',\n    method: 'GET',\n    handler: function handler(req, reply) {\n      var stateUuid = req.params.state_uuid;\n      var clusterUuid = req.params.cluster_uuid;\n      var options = {\n        index: config.get('marvel.index_prefix') + '*',\n        type: 'shards',\n        body: {\n          size: config.get('marvel.max_bucket_size'),\n          query: {\n            filtered: {\n              filter: {\n                bool: {\n                  must: [{ term: { state_uuid: stateUuid } }, { term: { cluster_uuid: clusterUuid } }]\n                }\n              }\n            }\n          }\n        }\n      };\n      if (req.query.node) {\n        options.body.query.filtered.filter.bool.must.push({\n          term: { 'shard.node': req.query.node }\n        });\n      } else if (req.query.index) {\n        options.body.query.filtered.filter.bool.must.push({\n          term: { 'shard.index': req.query.index }\n        });\n      }\n      callWithRequest(req, 'search', options).then(function (resp) {\n        if (resp.hits.total) {\n          reply(resp.hits.hits.map(function (doc) {\n            return doc._source.shard;\n          }));\n        } else {\n          reply([]);\n        }\n      })['catch'](function (err) {\n        return reply(handleError(err, req));\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL3JvdXRlcy9hcGkvdjEvc2hhcmRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzVCLElBQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN4QyxJQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMseUJBQXlCLENBQUMsQ0FBQzs7QUFFcEQsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFDLE1BQU0sRUFBSztBQUMzQixNQUFNLGVBQWUsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUM7QUFDckUsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDOztBQUUvQixRQUFNLENBQUMsS0FBSyxDQUFDO0FBQ1gsUUFBSSxFQUFFLGtFQUFrRTtBQUN4RSxVQUFNLEVBQUUsS0FBSztBQUNiLFdBQU8sRUFBRSxpQkFBQyxHQUFHLEVBQUUsS0FBSyxFQUFLO0FBQ3ZCLFVBQU0sU0FBUyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDO0FBQ3hDLFVBQU0sV0FBVyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDO0FBQzVDLFVBQU0sT0FBTyxHQUFHO0FBQ2QsYUFBSyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsR0FBRyxHQUFHO0FBQzlDLFlBQUksRUFBRSxRQUFRO0FBQ2QsWUFBSSxFQUFFO0FBQ0osY0FBSSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUM7QUFDMUMsZUFBSyxFQUFFO0FBQ0wsb0JBQVEsRUFBRTtBQUNSLG9CQUFNLEVBQUU7QUFDTixvQkFBSSxFQUFFO0FBQ0osc0JBQUksRUFBRSxDQUNKLEVBQUUsSUFBSSxFQUFFLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQ25DLEVBQUUsSUFBSSxFQUFFLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxFQUFFLENBQ3hDO2lCQUNGO2VBQ0Y7YUFDRjtXQUNGO1NBQ0Y7T0FDRixDQUFDO0FBQ0YsVUFBSSxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRTtBQUNsQixlQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO0FBQ2hELGNBQUksRUFBRSxFQUFFLFlBQVksRUFBRSxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRTtTQUN2QyxDQUFDLENBQUM7T0FDSixNQUFNLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUU7QUFDMUIsZUFBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztBQUNoRCxjQUFJLEVBQUUsRUFBRSxhQUFhLEVBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUM7U0FDeEMsQ0FBQyxDQUFDO09BQ0o7QUFDRCxxQkFBZSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQ3RDLElBQUksQ0FBQyxVQUFDLElBQUksRUFBSztBQUNkLFlBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUU7QUFDbkIsZUFBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFDLEdBQUc7bUJBQUssR0FBRyxDQUFDLE9BQU8sQ0FBQyxLQUFLO1dBQUEsQ0FBQyxDQUFDLENBQUM7U0FDdkQsTUFBTTtBQUNMLGVBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUNYO09BQ0YsQ0FBQyxTQUNJLENBQUMsVUFBQSxHQUFHO2VBQUksS0FBSyxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7T0FBQSxDQUFDLENBQUM7S0FDN0M7R0FDRixDQUFDLENBQUM7Q0FFSixDQUFDIiwiZmlsZSI6Ii9ob21lL2VsYXN0aWNzZWFyY2gtMi40LjEvYmluL2tpYmFuYS00LjYuMS1saW51eC14ODZfNjQvaW5zdGFsbGVkUGx1Z2lucy9tYXJ2ZWwvc2VydmVyL3JvdXRlcy9hcGkvdjEvc2hhcmRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuY29uc3Qgcm9vdCA9IHJlcXVpcmUoJ3JlcXVpcmVmcm9tJykoJycpO1xuY29uc3QgaGFuZGxlRXJyb3IgPSByb290KCdzZXJ2ZXIvbGliL2hhbmRsZV9lcnJvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChzZXJ2ZXIpID0+IHtcbiAgY29uc3QgY2FsbFdpdGhSZXF1ZXN0ID0gc2VydmVyLnBsdWdpbnMuZWxhc3RpY3NlYXJjaC5jYWxsV2l0aFJlcXVlc3Q7XG4gIGNvbnN0IGNvbmZpZyA9IHNlcnZlci5jb25maWcoKTtcblxuICBzZXJ2ZXIucm91dGUoe1xuICAgIHBhdGg6ICcvYXBpL21hcnZlbC92MS9jbHVzdGVycy97Y2x1c3Rlcl91dWlkfS9zdGF0ZS97c3RhdGVfdXVpZH0vc2hhcmRzJyxcbiAgICBtZXRob2Q6ICdHRVQnLFxuICAgIGhhbmRsZXI6IChyZXEsIHJlcGx5KSA9PiB7XG4gICAgICBjb25zdCBzdGF0ZVV1aWQgPSByZXEucGFyYW1zLnN0YXRlX3V1aWQ7XG4gICAgICBjb25zdCBjbHVzdGVyVXVpZCA9IHJlcS5wYXJhbXMuY2x1c3Rlcl91dWlkO1xuICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgaW5kZXg6IGNvbmZpZy5nZXQoJ21hcnZlbC5pbmRleF9wcmVmaXgnKSArICcqJyxcbiAgICAgICAgdHlwZTogJ3NoYXJkcycsXG4gICAgICAgIGJvZHk6IHtcbiAgICAgICAgICBzaXplOiBjb25maWcuZ2V0KCdtYXJ2ZWwubWF4X2J1Y2tldF9zaXplJyksXG4gICAgICAgICAgcXVlcnk6IHtcbiAgICAgICAgICAgIGZpbHRlcmVkOiB7XG4gICAgICAgICAgICAgIGZpbHRlcjoge1xuICAgICAgICAgICAgICAgIGJvb2w6IHtcbiAgICAgICAgICAgICAgICAgIG11c3Q6IFtcbiAgICAgICAgICAgICAgICAgICAgeyB0ZXJtOiB7IHN0YXRlX3V1aWQ6IHN0YXRlVXVpZCB9IH0sXG4gICAgICAgICAgICAgICAgICAgIHsgdGVybTogeyBjbHVzdGVyX3V1aWQ6IGNsdXN0ZXJVdWlkIH0gfVxuICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGlmIChyZXEucXVlcnkubm9kZSkge1xuICAgICAgICBvcHRpb25zLmJvZHkucXVlcnkuZmlsdGVyZWQuZmlsdGVyLmJvb2wubXVzdC5wdXNoKHtcbiAgICAgICAgICB0ZXJtOiB7ICdzaGFyZC5ub2RlJzogcmVxLnF1ZXJ5Lm5vZGUgfVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAocmVxLnF1ZXJ5LmluZGV4KSB7XG4gICAgICAgIG9wdGlvbnMuYm9keS5xdWVyeS5maWx0ZXJlZC5maWx0ZXIuYm9vbC5tdXN0LnB1c2goe1xuICAgICAgICAgIHRlcm06IHsgJ3NoYXJkLmluZGV4JzogcmVxLnF1ZXJ5LmluZGV4fVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGNhbGxXaXRoUmVxdWVzdChyZXEsICdzZWFyY2gnLCBvcHRpb25zKVxuICAgICAgLnRoZW4oKHJlc3ApID0+IHtcbiAgICAgICAgaWYgKHJlc3AuaGl0cy50b3RhbCkge1xuICAgICAgICAgIHJlcGx5KHJlc3AuaGl0cy5oaXRzLm1hcCgoZG9jKSA9PiBkb2MuX3NvdXJjZS5zaGFyZCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlcGx5KFtdKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnIgPT4gcmVwbHkoaGFuZGxlRXJyb3IoZXJyLCByZXEpKSk7XG4gICAgfVxuICB9KTtcblxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/shards.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;AACxC,IAAM,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;;AAEpD,MAAM,CAAC,OAAO,GAAG,UAAC,MAAM,EAAK;AAC3B,MAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC;AACrE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;;AAE/B,QAAM,CAAC,KAAK,CAAC;AACX,QAAI,EAAE,kEAAkE;AACxE,UAAM,EAAE,KAAK;AACb,WAAO,EAAE,iBAAC,GAAG,EAAE,KAAK,EAAK;AACvB,UAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC;AACxC,UAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;AAC5C,UAAM,OAAO,GAAG;AACd,aAAK,EAAE,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG;AAC9C,YAAI,EAAE,QAAQ;AACd,YAAI,EAAE;AACJ,cAAI,EAAE,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC;AAC1C,eAAK,EAAE;AACL,oBAAQ,EAAE;AACR,oBAAM,EAAE;AACN,oBAAI,EAAE;AACJ,sBAAI,EAAE,CACJ,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,EAAE,EACnC,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE,EAAE,CACxC;iBACF;eACF;aACF;WACF;SACF;OACF,CAAC;AACF,UAAI,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE;AAClB,eAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAChD,cAAI,EAAE,EAAE,YAAY,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE;SACvC,CAAC,CAAC;OACJ,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE;AAC1B,eAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAChD,cAAI,EAAE,EAAE,aAAa,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC;SACxC,CAAC,CAAC;OACJ;AACD,qBAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,OAAO,CAAC,CACtC,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,YAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACnB,eAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG;mBAAK,GAAG,CAAC,OAAO,CAAC,KAAK;WAAA,CAAC,CAAC,CAAC;SACvD,MAAM;AACL,eAAK,CAAC,EAAE,CAAC,CAAC;SACX;OACF,CAAC,SACI,CAAC,UAAA,GAAG;eAAI,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OAAA,CAAC,CAAC;KAC7C;GACF,CAAC,CAAC;CAEJ,CAAC",
      "file": "/home/elasticsearch-2.4.1/bin/kibana-4.6.1-linux-x86_64/installedPlugins/marvel/server/routes/api/v1/shards.js",
      "sourcesContent": [
        "const _ = require('lodash');\nconst root = require('requirefrom')('');\nconst handleError = root('server/lib/handle_error');\n\nmodule.exports = (server) => {\n  const callWithRequest = server.plugins.elasticsearch.callWithRequest;\n  const config = server.config();\n\n  server.route({\n    path: '/api/marvel/v1/clusters/{cluster_uuid}/state/{state_uuid}/shards',\n    method: 'GET',\n    handler: (req, reply) => {\n      const stateUuid = req.params.state_uuid;\n      const clusterUuid = req.params.cluster_uuid;\n      const options = {\n        index: config.get('marvel.index_prefix') + '*',\n        type: 'shards',\n        body: {\n          size: config.get('marvel.max_bucket_size'),\n          query: {\n            filtered: {\n              filter: {\n                bool: {\n                  must: [\n                    { term: { state_uuid: stateUuid } },\n                    { term: { cluster_uuid: clusterUuid } }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      };\n      if (req.query.node) {\n        options.body.query.filtered.filter.bool.must.push({\n          term: { 'shard.node': req.query.node }\n        });\n      } else if (req.query.index) {\n        options.body.query.filtered.filter.bool.must.push({\n          term: { 'shard.index': req.query.index}\n        });\n      }\n      callWithRequest(req, 'search', options)\n      .then((resp) => {\n        if (resp.hits.total) {\n          reply(resp.hits.hits.map((doc) => doc._source.shard));\n        } else {\n          reply([]);\n        }\n      })\n      .catch(err => reply(handleError(err, req)));\n    }\n  });\n\n};\n"
      ]
    },
    "mtime": 1470256811000
  }
}